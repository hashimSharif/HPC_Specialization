srun: job 2250899 queued and waiting for resources
srun: job 2250899 has been allocated resources
OMP: Info #204: KMP_AFFINITY: decoding x2APIC ids.
OMP: Info #202: KMP_AFFINITY: Affinity capable, using global cpuid leaf 11 info
OMP: Info #154: KMP_AFFINITY: Initial OS proc set respected: {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45}
OMP: Info #156: KMP_AFFINITY: 44 available OS procs
OMP: Info #158: KMP_AFFINITY: Nonuniform topology
OMP: Info #179: KMP_AFFINITY: 2 packages x 12 cores/pkg x 2 threads/core (22 total cores)
OMP: Info #206: KMP_AFFINITY: OS proc to physical thread map:
OMP: Info #171: KMP_AFFINITY: OS proc 0 maps to package 0 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 24 maps to package 0 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 1 maps to package 0 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 25 maps to package 0 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 2 maps to package 0 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 26 maps to package 0 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 3 maps to package 0 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 27 maps to package 0 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 4 maps to package 0 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 28 maps to package 0 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 5 maps to package 0 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 29 maps to package 0 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 6 maps to package 0 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 30 maps to package 0 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 7 maps to package 0 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 31 maps to package 0 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 8 maps to package 0 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 32 maps to package 0 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 9 maps to package 0 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 33 maps to package 0 core 11 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 10 maps to package 0 core 12 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 34 maps to package 0 core 12 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 11 maps to package 0 core 13 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 35 maps to package 0 core 13 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 12 maps to package 1 core 0 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 36 maps to package 1 core 0 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 13 maps to package 1 core 1 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 37 maps to package 1 core 1 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 14 maps to package 1 core 2 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 38 maps to package 1 core 2 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 15 maps to package 1 core 3 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 39 maps to package 1 core 3 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 16 maps to package 1 core 4 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 40 maps to package 1 core 4 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 17 maps to package 1 core 5 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 41 maps to package 1 core 5 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 18 maps to package 1 core 8 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 42 maps to package 1 core 8 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 19 maps to package 1 core 9 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 43 maps to package 1 core 9 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 20 maps to package 1 core 10 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 44 maps to package 1 core 10 thread 1 
OMP: Info #171: KMP_AFFINITY: OS proc 21 maps to package 1 core 11 thread 0 
OMP: Info #171: KMP_AFFINITY: OS proc 45 maps to package 1 core 11 thread 1 
OMP: Info #144: KMP_AFFINITY: Threads may migrate across 1 innermost levels of machine
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 0 bound to OS proc set {0,24}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 1 bound to OS proc set {1,25}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 3 bound to OS proc set {3,27}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 2 bound to OS proc set {2,26}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 4 bound to OS proc set {4,28}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 5 bound to OS proc set {5,29}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 6 bound to OS proc set {6,30}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 7 bound to OS proc set {7,31}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 8 bound to OS proc set {8,32}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 9 bound to OS proc set {9,33}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 10 bound to OS proc set {10,34}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 11 bound to OS proc set {11,35}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 12 bound to OS proc set {12,36}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 13 bound to OS proc set {13,37}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 14 bound to OS proc set {14,38}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 15 bound to OS proc set {15,39}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 16 bound to OS proc set {16,40}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 17 bound to OS proc set {17,41}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 18 bound to OS proc set {18,42}
OMP: Info #242: KMP_AFFINITY: pid 21141 thread 19 bound to OS proc set {19,43}
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 ** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  12
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 10
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 6
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 18
 ** Releasing child from tid 4
 ** Releasing child from tid 10
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  8
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  8
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  12
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 14
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 14
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  16
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 14
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  8
*** A child thread is released with gtid  5
** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 18
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 14
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 seProcess 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 recending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child threiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from allad is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released w other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processith gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
** Releasing child from tid 2
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with es
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master postgtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 14
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 10
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  7
*** A child thread is released with gtid  12
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 10
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 6
 ** Releasing child from tid 14
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  12
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 14
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  7
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  4
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 14
 *** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 10
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 14
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 14
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  10
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 6
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  1
** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 2
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 6
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 14
 ** Releasing child from tid 2
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 10
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  ing Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for 9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing chprocess 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placild from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** ReleeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 1asing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child t0 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 rhread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  17
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  10
** Releasing child from tid 18
 ** Releasing child from tid 10
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  12
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 2
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 14
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 6
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  7
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 14
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  2
** Releasing child from tid 10
 *** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 10
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 2
 ** Releasing child from tid 6
 ** Releasing child from tid 18
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
** Releasing child from tid 18
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 18
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 6
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 14
 *** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 18
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
** Releasing child from tid 2
 *** A child thread is released with gtid  4
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 2
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
*** A child thread is released with gtid  1
** Releasing child from tid 18
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 10
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 18
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 ** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  15
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 10
 ** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  16
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  18
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 14
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 2
 ** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 14
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 18
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  12
** Releasing child from tid 6
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  3
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child eceiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other procreleased with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child fromesses
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master p tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is releasedosting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv f with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 18
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 6
 *** A child thread is released with gtid  1
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 6
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 18
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  16
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 2
 ** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  12
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 10
 ** Releasing child from tid 6
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  17
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 18
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 14
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 2
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 14
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 6
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 14
 ** Releasing child from tid 18
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  4
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 18
 ** Releasing child from tid 14
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 18
 ** Releasing child from tid 14
 ** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  1
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  16
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 2
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_foor process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
prk_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 2
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 18
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  16
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 18
 ** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  15
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 6
 ** Releasing child from tid 14
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 10
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 2
 ** Releasing child from tid 10
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 14
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 18
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  19
** Releasing child from tid 2
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is rlaceHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder funeleased with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child threac 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process d is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving frmaster before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tom all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other pid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ***rocesses
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Maste A child thread is released with gtid  17
** Releasing child from tid 6
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Rer posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecleasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  1
v for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process ** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 2
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  5
** Releasing child from tid 18
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  17
** Releasing child from tid 10
 ** Releasing child from tid 18
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  5
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 2
 ** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  6
** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
*** A child thread is released with gtid  3
** Releasing child from tid 6
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 18
 *** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  6
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 6
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 2
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 10
 *** A child thread is released with gtid  16
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 14
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 18
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  5
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 6
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder  child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Relefunc 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Proceasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 14
 ** Releasing child from tid 0
 *** A css 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receivinghild thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is relea from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all othesed with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
** Releasing child from tid 10
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  16
** Releasing child from tid 10
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 6
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  6
** Releasing child from tid 14
 ** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  12
** Releasing child from tid 18
 ** Releasing child from tid 6
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 6
 ** Releasing child from tid 10
 ** Releasing child from tid 14
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is relr processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Maeased with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 18
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  12
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 2
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 18
 *** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  8
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 14
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 18
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 10
 ** Releasing child from tid 14
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 10
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is ster posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Ireleased with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  12
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
*** A chirecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for proceld thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 6
 ** Releasing child from tid 2
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child fss 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHoldrom tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  4
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 14
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  8
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 10
 *** A child thread is released with gtid  6
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is releaseder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Pr with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  6
** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
*** A child thread is reocess 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receivleased with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released wiing from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all oth gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 ther processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 6
 ** Releasing child from tid 14
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 10
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
*** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  5
** Releasing child from tid 18
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  16
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 6
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 2
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  8
** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 10
 ** Releasing child from tid 14
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 18
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 6
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 2
 *** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 18
 ** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 6
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  16
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 6
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing chi
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master postinld from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread ig Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for prs released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  15
** Releasing child from tid 10
 ** Releasingocess 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeH child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 8older func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 18
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  8
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 2
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 18
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 14
 ** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 6
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  12
** Releasing child from tid 2
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 2
 *** A child thread is released with gtid  13
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 6
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 2
 ** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  16
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 18
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 2
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 18
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 rec with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  12
** Releasing child from tid 10
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called eiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from alby parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A chil other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other procesld thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ***ses
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master pos A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  5
** Releasing child from tid 2
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  8
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 10
 ** Releasing child from tid 14
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 2
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 18
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  8
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 2
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 2
 ** Releasing child from tid 16
 ** Releasing child from tid 14
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 18
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 18
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv foring child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 14
 ** Releasing child from tid 2
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called -- process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
pla------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is releasceHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func ed with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is rele10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 ased with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 2
 ** Releasing child from tid 16
 ** Releasing child from tid 6
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 14
 *** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 6
 ** Releasing child from tid 18
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 14
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 14
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 18
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  12
*** A child thread is released with gtid  16
*** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 6
 ** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
*** A child thread is released with gtid  12
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 14
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 2
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
** Releasing child from tid 18
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 10
 ** Releasing child from tid 6
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  12
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 2
 ** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  8
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  16
*** A child thread is released with gtid  14
** Releasing child from tid 2
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 14
 *** A child thread is released with gtid  1
** Releasing child from tid 10
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 18
 ** Releasing child from tid 4
 ** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child threadreceiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing chil all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other prod from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0cesses
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master 
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released witposting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv h gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 6
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 14
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 2
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 18
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  10
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 6
 *** A child thread is released with gtid  17
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  16
*** A child thread is released with gtid  7
*** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 6
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 2
 ** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 18
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
** Releasing child from tid 18
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 18
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 2
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 6
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
** Releasing child from tid 14
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 10
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 18
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  16
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  12
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 10
 ** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 18
 ** Releasing child from tid 2
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  13
** Releasing child from tid 6
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  16
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 10
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 14
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 18
 *** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  12
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 18
 ** Releasing child from tid 10
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  9
** Releasing child from tid 2
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
** Releasing child from tid 14
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  8
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 10
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  16
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 18
 ** Releasing child from tid 12
 ** Releasing child from tid 6
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 2
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
** Releasing child from tid 18
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 18
 *** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 4
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 ** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 14
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  8
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 10
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  2
** Releasing child from tid 14
 ** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
** Releasing child from tid 14
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  1
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 2
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 18
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 ** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  16
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 10
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 2
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
*** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 6
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 10
 ** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 14
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 2
 ** Releasing child from tid 4
 ** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 6
 ** Releasing child from tid 14
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 6
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 14
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  16
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
*** A child thread is released with gtid  16
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 18
 ** Releasing child from tid 6
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 14
 ** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 10
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 14
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 10
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 14
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 18
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 10
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 14
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 6
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 10
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 6
 ** Releasing child from tid 10
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  12
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 14
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 10
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  1
** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  5
** Releasing child from tid 2
 ** Releasing child from tid 10
 ** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 18
 ** Releasing child from tid 6
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  15
** Releasing child from tid 6
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 14
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 16
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 2
 *** A child thread is released with gtid  18
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  17
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 10
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 ** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 6
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 6
 ** Releasing child from tid 10
 *** A child thread is released with gtid  7
** Releasing child from tid 14
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 14
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 2
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 10
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 14
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 12
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 18
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 18
 *** A child thread is released with gtid  17
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  12
** Releasing child from tid 6
 ** Releasing child from tid 10
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  12
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  16
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 6
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  8
** Releasing child from tid 4
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  12
** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  4
** Releasing child from tid 2
 ** Releasing child from tid 14
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  2
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 6
 ** Releasing child from tid 10
 ** Releasing child from tid 14
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 18
 *** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 18
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 18
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  15
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  3
** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 18
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 10
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  11
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 18
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 18
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 14
 ** Releasing child from tid 2
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  11
** Releasing child from tid 6
 ** Releasing child from tid 2
 *** A child thread is released with gtid  17
** Releasing child from tid 14
 ** Releasing child from tid 18
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 2
 ** Releasing child from tid 14
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  12
** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  19
** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 14
 ** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 10
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 6
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 14
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  8
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
*** A child thread is released with gtid  2
** Releasing child from tid 6
 ** Releasing child from tid 14
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
** Releasing child from tid 2
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 10
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 2
 *** A child thread is released with gtid  13
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 18
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 14
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  1
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 14
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  12
*** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  4
** Releasing child from tid 18
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  15
*** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
*** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 6
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 10
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 10
 ** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  16
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 18
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 10
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 14
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 6
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 18
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  1
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  12
** Releasing child from tid 2
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  7
*** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  5
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 8
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  4
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 2
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 6
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 14
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  1
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  6
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  8
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
** Releasing child from tid 6
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  12
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
** Releasing child from tid 10
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 6
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 18
 *** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 14
 ** Releasing child from tid 2
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 16
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 ** Releasing child from tid 18
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 *** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
*** A child thread is released with gtid  8
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
** Releasing child from tid 2
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 2
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  1
*** A child thread is released with gtid  4
*** A child thread is released with gtid  11
** Releasing child from tid 4
 ** Releasing child from tid 2
 ** Releasing child from tid 14
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  12
*** A child thread is released with gtid  6
** Releasing child from tid 2
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 6
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
*** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  13
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 18
 ** Releasing child from tid 8
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  9
** Releasing child from tid 6
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 10
 ** Releasing child from tid 18
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  19
** Releasing child from tid 14
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 14
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  15
*** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  14
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
** Releasing child from tid 2
 ** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 14
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  15
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  11
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
** Releasing child from tid 2
 ** Releasing child from tid 8
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 14
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  17
*** A child thread is released with gtid  15
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 ** Releasing child from tid 18
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  16
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  12
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  18
*** A child thread is released with gtid  6
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 6
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
*** A child thread is released with gtid  7
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 2
 *** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 6
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  18
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 10
 ** Releasing child from tid 18
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 6
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 ** Releasing child from tid 2
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  16
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 6
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 ** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  3
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  15
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 ** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 6
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  12
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  10
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 16
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 18
 *** A child thread is released with gtid  5
** Releasing child from tid 10
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  11
** Releasing child from tid 6
 *** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
*** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  5
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  14
** Releasing child from tid 18
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  18
** Releasing child from tid 10
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  7
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  4
** Releasing child from tid 2
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 ** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 6
 ** Releasing child from tid 14
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  18
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  12
** Releasing child from tid 16
 *** A child thread is released with gtid  6
** Releasing child from tid 18
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 2
 ** Releasing child from tid 6
 *** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  2
*** A child thread is released with gtid  4
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  17
*** A child thread is released with gtid  13
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 14
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  14
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 16
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  13
*** A child thread is released with gtid  1
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  9
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 14
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 10
 ** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  11
*** A child thread is released with gtid  18
*** A child thread is released with gtid  9
*** A child thread is released with gtid  6
** Releasing child from tid 18
 ** Releasing child from tid 6
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  9
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  16
** Releasing child from tid 2
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  3
** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 18
 *** A child thread is released with gtid  6
** Releasing child from tid 10
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 14
 ** Releasing child from tid 6
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  7
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  11
*** A child thread is released with gtid  19
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 18
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 2
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  3
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  15
*** A child thread is released with gtid  13
*** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  19
*** A child thread is released with gtid  2
** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 2
 ** Releasing child from tid 18
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  19
*** A child thread is released with gtid  10
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 10
 ** Releasing child from tid 12
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  11
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  16
** Releasing child from tid 8
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  3
** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  7
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  12
** Releasing child from tid 18
 *** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  19
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  10
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 ** Releasing child from tid 10
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  8
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  2
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 10
 ** Releasing child from tid 8
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
** Releasing child from tid 18
 ** Releasing child from tid 0
 ** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 14
 *** A child thread is released with gtid  19
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  6
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  17
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 2
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 18
 *** A child thread is released with gtid  3
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  19
*** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 8
 ** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  3
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  9
*** A child thread is released with gtid  1
** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 4
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 18
 *** A child thread is released with gtid  6
** Releasing child from tid 2
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 6
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  8
*** A child thread is released with gtid  3
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  17
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  9
*** A child thread is released with gtid  13
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  11
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  13
*** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  17
*** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 18
 *** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 2
 ** Releasing child from tid 10
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 *** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
*** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  14
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  9
*** A child thread is released with gtid  10
*** A child thread is released with gtid  4
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
** Releasing child from tid 14
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 10
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 18
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 ** Releasing child from tid 6
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  19
*** A child thread is released with gtid  11
*** A child thread is released with gtid  17
*** A child thread is released with gtid  5
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 12
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  6
*** A child thread is released with gtid  3
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  10
*** A child thread is released with gtid  1
** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 2
 ** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
*** A child thread is released with gtid  5
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  17
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 18
 *** A child thread is released with gtid  19
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 16
 *** A child thread is released with gtid  15
** Releasing child from tid 0
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  3
*** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 4
 ** Releasing child from tid 16
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  14
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  12
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
** Releasing child from tid 2
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  10
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 18
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 10
 ** Releasing child from tid 12
 ** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 *** A child thread is released with gtid  13
** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  8
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
** Releasing child from tid 8
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  1
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 18
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  19
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  14
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  3
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  1
*** A child thread is released with gtid  2
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
** Releasing child from tid 12
 ** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  4
** Releasing child from tid 14
 *** A child thread is released with gtid  19
** Releasing child from tid 10
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  15
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  7
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  13
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  4
*** A child thread is released with gtid  14
*** A child thread is released with gtid  16
** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  19
*** A child thread is released with gtid  9
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  2
*** A child thread is released with gtid  6
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
*** A child thread is released with gtid  10
** Releasing child from tid 10
 *** A child thread is released with gtid  11
** Releasing child from tid 12
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
** Releasing child from tid 12
 ** Releasing child from tid 2
 *** A child thread is released with gtid  1
*** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 4
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  14
** Releasing child from tid 4
 *** A child thread is released with gtid  13
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  5
*** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  18
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 16
 *** A child thread is released with gtid  17
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 12
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
** Releasing child from tid 4
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 4
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  5
*** A child thread is released with gtid  7
*** A child thread is released with gtid  17
*** A child thread is released with gtid  1
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 8
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  11
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 8
 *** A child thread is released with gtid  4
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 18
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 12
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  1
** Releasing child from tid 6
 ** Releasing child from tid 10
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  2
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  11
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 16
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  15
** Releasing child from tid 16
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 ** Releasing child from tid 12
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  18
** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  2
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  5
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  10
** Releasing child from tid 18
 *** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  19
** Releasing child from tid 14
 ** Releasing child from tid 2
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  5
*** A child thread is released with gtid  15
** Releasing child from tid 10
 *** A child thread is released with gtid  3
** Releasing child from tid 6
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  9
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  15
*** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 8
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  13
** Releasing child from tid 8
 *** A child thread is released with gtid  3
** Releasing child from tid 4
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  10
** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  5
** Releasing child from tid 8
 *** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  1
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 12
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  18
*** A child thread is released with gtid  10
** Releasing child from tid 14
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
** Releasing child from tid 18
 ** Releasing child from tid 10
 *** A child thread is released with gtid  15
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  2
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  19
** Releasing child from tid 2
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  6
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 6
  $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 0
 ** Releasing child from tid 16
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 4
 *** A child thread is released with gtid  8
** Releasing child from tid 12
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  3
*** A child thread is released with gtid  11
** Releasing child from tid 4
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  15
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 *** A child thread is released with gtid  6
*** A child thread is released with gtid  2
*** A child thread is released with gtid  10
** Releasing child from tid 0
 ** Releasing child from tid 12
 ** Releasing child from tid 8
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  9
** Releasing child from tid 4
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  17
** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  1
** Releasing child from tid 18
 *** A child thread is released with gtid  4
*** A child thread is released with gtid  19
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 2
 ** Releasing child from tid 6
 ** Releasing child from tid 8
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  10
*** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  9
** Releasing child from tid 12
 ** Releasing child from tid 10
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  3
*** A child thread is released with gtid  14
** Releasing child from tid 14
 *** A child thread is released with gtid  15
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 0
 ** Releasing child from tid 16
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  12
** Releasing child from tid 0
 *** A child thread is released with gtid  19
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  3
*** A child thread is released with gtid  4
** Releasing child from tid 0
 *** A child thread is released with gtid  18
** Releasing child from tid 8
 ** Releasing child from tid 12
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  15
** Releasing child from tid 8
 ** Releasing child from tid 12
 *** A child thread is released with gtid  7
*** A child thread is released with gtid  1
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
*** A child thread is released with gtid  17
** Releasing child from tid 4
 *** A child thread is released with gtid  9
*** A child thread is released with gtid  6
*** A child thread is released with gtid  10
*** A child thread is released with gtid  14
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  8
** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 0
 ** Releasing child from tid 8
 ** Releasing child from tid 16
 ** Releasing child from tid 0
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  18
*** A child thread is released with gtid  4
 $$$$ microtask called by parent $$$$$ 
** Releasing child from tid 8
 *** A child thread is released with gtid  12
** Releasing child from tid 2
 *** A child thread is released with gtid  3
** Releasing child from tid 16
 ** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 18
 *** A child thread is released with gtid  17
*** A child thread is released with gtid  1
*** A child thread is released with gtid  10
** Releasing child from tid 12
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  6
*** A child thread is released with gtid  19
** Releasing child from tid 12
 *** A child thread is released with gtid  14
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
** Releasing child from tid 6
 ** Releasing child from tid 10
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  11
*** A child thread is released with gtid  7
Process 1 sending to Process 0 
kmp_fork_call2 called --------------------- *** ----------- 

-GTID_1=0---- master before signalling any children calling internal fork --- 

 master calling its FORK BARRIER 
placeHolder func 10 
placeHolder func 10 
-GTID_2=0--- * --- _kmp_fork_barrier call from *kmpc_fork_call_end* --- * --- 
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  16
*** A child thread is released with gtid  12
** Releasing child from tid 16
 ** Releasing child from tid 12
 *** A child thread is released with gtid  19
*** A child thread is released with gtid  15
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  14
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
** Releasing child from tid 12
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
*** A child thread is released with gtid  13
*** A child thread is released with gtid  17
** Releasing child from tid 4
 ** Releasing child from tid 4
 *** A child thread is released with gtid  7
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  3
** Releasing child from tid 0
 ** Releasing child from tid 4
 *** A child thread is released with gtid  2
*** A child thread is released with gtid  11
*** A child thread is released with gtid  1
*** A child thread is released with gtid  5
** Releasing child from tid 8
 ** Releasing child from tid 8
 *** A child thread is released with gtid  10
*** A child thread is released with gtid  9
** Releasing child from tid 0
 *** A child thread is released with gtid  16
** Releasing child from tid 16
 ** Releasing child from tid 16
 *** A child thread is released with gtid  18
*** A child thread is released with gtid  17
** Releasing child from tid 18
 *** A child thread is released with gtid  19
** Releasing child from tid 0
 ** Releasing child from tid 0
 *** A child thread is released with gtid  8
*** A child thread is released with gtid  4
** Releasing child from tid 4
 ** Releasing child from tid 4
 ** Releasing child from tid 8
 *** A child thread is released with gtid  5
*** A child thread is released with gtid  12
** Releasing child from tid 8
 *** A child thread is released with gtid  6
** Releasing child from tid 6
 *** A child thread is released with gtid  7
** Releasing child from tid 12
 *** A child thread is released with gtid  10
** Releasing child from tid 12
 ** Releasing child from tid 10
 ** Releasing child from tid 0
 *** A child thread is released with gtid  13
*** A child thread is released with gtid  2
*** A child thread is released with gtid  14
** Releasing child from tid 2
 ** Releasing child from tid 8
 *** A child thread is released with gtid  11
** Releasing child from tid 0
 *** A child thread is released with gtid  3
*** A child thread is released with gtid  1
 $$$$ microtask called by parent $$$$$ 
*** A child thread is released with gtid  9
** Releasing child from tid 14
 *** A child thread is released with gtid  15
elapsed time for rank 1 is 0.075723
*** A child thread is released with gtid  8
*** A child thread is released with gtid  10
*** A child thread is released with gtid  17
*** A child thread is released with gtid  18
*** A child thread is released with gtid  11
*** A child thread is released with gtid  6
*** A child thread is released with gtid  16
*** A child thread is released with gtid  4
*** A child thread is released with gtid  7
*** A child thread is released with gtid  14
*** A child thread is released with gtid  9
*** A child thread is released with gtid  2
*** A child thread is released with gtid  15
*** A child thread is released with gtid  12
*** A child thread is released with gtid  5
*** A child thread is released with gtid  13
*** A child thread is released with gtid  19
*** A child thread is released with gtid  3
*** A child thread is released with gtid  1
for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
Process 0 receiving from all other processes
Master posting Irecv for process 1
placeHolder func 10 
elapsed time for rank 0 is 0.075634
