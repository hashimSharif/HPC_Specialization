/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void SystemZInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    3802U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    3795U,	// BUNDLE
    3812U,	// LIFETIME_START
    3782U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    4098U,	// A
    4131U,	// ADB
    1055507U,	// ADBR
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ADJDYNALLOC
    4176U,	// AEB
    1055610U,	// AEBR
    0U,	// AEXT128_64
    2103128U,	// AFI
    0U,	// AFIMux
    5166U,	// AG
    5039U,	// AGF
    2103138U,	// AGFI
    1055946U,	// AGFR
    3151788U,	// AGHI
    37754987U,	// AGHIK
    1056022U,	// AGR
    171972756U,	// AGRK
    75764U,	// AGSI
    5354U,	// AH
    3151778U,	// AHI
    37754981U,	// AHIK
    0U,	// AHIMux
    0U,	// AHIMuxK
    7773U,	// AHY
    2102620U,	// AIH
    6368U,	// AL
    4242U,	// ALC
    5204U,	// ALCG
    1056034U,	// ALCGR
    1055861U,	// ALCR
    5248906U,	// ALFI
    5235U,	// ALG
    5049U,	// ALGF
    5248878U,	// ALGFI
    1055959U,	// ALGFR
    37754994U,	// ALGHSIK
    1056054U,	// ALGR
    171972762U,	// ALGRK
    37755003U,	// ALHSIK
    1056170U,	// ALR
    171972800U,	// ALRK
    7831U,	// ALY
    1055502U,	// AR
    171972751U,	// ARK
    75759U,	// ASI
    0U,	// ATOMIC_CMP_SWAPW
    0U,	// ATOMIC_LOADW_AFI
    0U,	// ATOMIC_LOADW_AR
    0U,	// ATOMIC_LOADW_MAX
    0U,	// ATOMIC_LOADW_MIN
    0U,	// ATOMIC_LOADW_NILH
    0U,	// ATOMIC_LOADW_NILHi
    0U,	// ATOMIC_LOADW_NR
    0U,	// ATOMIC_LOADW_NRi
    0U,	// ATOMIC_LOADW_OILH
    0U,	// ATOMIC_LOADW_OR
    0U,	// ATOMIC_LOADW_SR
    0U,	// ATOMIC_LOADW_UMAX
    0U,	// ATOMIC_LOADW_UMIN
    0U,	// ATOMIC_LOADW_XILF
    0U,	// ATOMIC_LOADW_XR
    0U,	// ATOMIC_LOAD_AFI
    0U,	// ATOMIC_LOAD_AGFI
    0U,	// ATOMIC_LOAD_AGHI
    0U,	// ATOMIC_LOAD_AGR
    0U,	// ATOMIC_LOAD_AHI
    0U,	// ATOMIC_LOAD_AR
    0U,	// ATOMIC_LOAD_MAX_32
    0U,	// ATOMIC_LOAD_MAX_64
    0U,	// ATOMIC_LOAD_MIN_32
    0U,	// ATOMIC_LOAD_MIN_64
    0U,	// ATOMIC_LOAD_NGR
    0U,	// ATOMIC_LOAD_NGRi
    0U,	// ATOMIC_LOAD_NIHF64
    0U,	// ATOMIC_LOAD_NIHF64i
    0U,	// ATOMIC_LOAD_NIHH64
    0U,	// ATOMIC_LOAD_NIHH64i
    0U,	// ATOMIC_LOAD_NIHL64
    0U,	// ATOMIC_LOAD_NIHL64i
    0U,	// ATOMIC_LOAD_NILF
    0U,	// ATOMIC_LOAD_NILF64
    0U,	// ATOMIC_LOAD_NILF64i
    0U,	// ATOMIC_LOAD_NILFi
    0U,	// ATOMIC_LOAD_NILH
    0U,	// ATOMIC_LOAD_NILH64
    0U,	// ATOMIC_LOAD_NILH64i
    0U,	// ATOMIC_LOAD_NILHi
    0U,	// ATOMIC_LOAD_NILL
    0U,	// ATOMIC_LOAD_NILL64
    0U,	// ATOMIC_LOAD_NILL64i
    0U,	// ATOMIC_LOAD_NILLi
    0U,	// ATOMIC_LOAD_NR
    0U,	// ATOMIC_LOAD_NRi
    0U,	// ATOMIC_LOAD_OGR
    0U,	// ATOMIC_LOAD_OIHF64
    0U,	// ATOMIC_LOAD_OIHH64
    0U,	// ATOMIC_LOAD_OIHL64
    0U,	// ATOMIC_LOAD_OILF
    0U,	// ATOMIC_LOAD_OILF64
    0U,	// ATOMIC_LOAD_OILH
    0U,	// ATOMIC_LOAD_OILH64
    0U,	// ATOMIC_LOAD_OILL
    0U,	// ATOMIC_LOAD_OILL64
    0U,	// ATOMIC_LOAD_OR
    0U,	// ATOMIC_LOAD_SGR
    0U,	// ATOMIC_LOAD_SR
    0U,	// ATOMIC_LOAD_UMAX_32
    0U,	// ATOMIC_LOAD_UMAX_64
    0U,	// ATOMIC_LOAD_UMIN_32
    0U,	// ATOMIC_LOAD_UMIN_64
    0U,	// ATOMIC_LOAD_XGR
    0U,	// ATOMIC_LOAD_XIHF64
    0U,	// ATOMIC_LOAD_XILF
    0U,	// ATOMIC_LOAD_XILF64
    0U,	// ATOMIC_LOAD_XR
    0U,	// ATOMIC_SWAPW
    0U,	// ATOMIC_SWAP_32
    0U,	// ATOMIC_SWAP_64
    1055761U,	// AXBR
    7736U,	// AY
    6437993U,	// AsmBCR
    209072U,	// AsmBRC
    211185U,	// AsmBRCL
    74455092U,	// AsmCGIJ
    306190412U,	// AsmCGRJ
    74455087U,	// AsmCIJ
    75503674U,	// AsmCLGIJ
    306190418U,	// AsmCLGRJ
    75503681U,	// AsmCLIJ
    306190425U,	// AsmCLRJ
    306190407U,	// AsmCRJ
    269471U,	// AsmEBR
    16881U,	// AsmEJ
    16621U,	// AsmEJG
    9441489U,	// AsmELOC
    9441502U,	// AsmELOCG
    1053602U,	// AsmELOCGR
    1053595U,	// AsmELOCR
    10490071U,	// AsmESTOC
    10490085U,	// AsmESTOCG
    269701U,	// AsmHBR
    269476U,	// AsmHEBR
    16666U,	// AsmHEJ
    16658U,	// AsmHEJG
    9441522U,	// AsmHELOC
    9441537U,	// AsmHELOCG
    1053158U,	// AsmHELOCGR
    1053150U,	// AsmHELOCR
    10490105U,	// AsmHESTOC
    10490121U,	// AsmHESTOCG
    17774U,	// AsmHJ
    17702U,	// AsmHJG
    9442553U,	// AsmHLOC
    9442583U,	// AsmHLOCG
    1054535U,	// AsmHLOCGR
    1054528U,	// AsmHLOCR
    10491135U,	// AsmHSTOC
    10491166U,	// AsmHSTOCG
    108009057U,	// AsmJEAltCGI
    440407685U,	// AsmJEAltCGR
    108009049U,	// AsmJEAltCI
    109057642U,	// AsmJEAltCLGI
    440407694U,	// AsmJEAltCLGR
    109057652U,	// AsmJEAltCLI
    440407704U,	// AsmJEAltCLR
    440407677U,	// AsmJEAltCR
    108007925U,	// AsmJECGI
    440406545U,	// AsmJECGR
    108007919U,	// AsmJECI
    109056508U,	// AsmJECLGI
    440406552U,	// AsmJECLGR
    109056516U,	// AsmJECLI
    440406560U,	// AsmJECLR
    440406539U,	// AsmJECR
    108008128U,	// AsmJHAltCGI
    440406756U,	// AsmJHAltCGR
    108008120U,	// AsmJHAltCI
    109056713U,	// AsmJHAltCLGI
    440406765U,	// AsmJHAltCLGR
    109056723U,	// AsmJHAltCLI
    440406775U,	// AsmJHAltCLR
    440406748U,	// AsmJHAltCR
    108008818U,	// AsmJHCGI
    440407438U,	// AsmJHCGR
    108008812U,	// AsmJHCI
    109057401U,	// AsmJHCLGI
    440407445U,	// AsmJHCLGR
    109057409U,	// AsmJHCLI
    440407453U,	// AsmJHCLR
    440407432U,	// AsmJHCR
    108009916U,	// AsmJHEAltCGI
    440408540U,	// AsmJHEAltCGR
    108009909U,	// AsmJHEAltCI
    109058500U,	// AsmJHEAltCLGI
    440408548U,	// AsmJHEAltCLGR
    109058509U,	// AsmJHEAltCLI
    440408557U,	// AsmJHEAltCLR
    440408533U,	// AsmJHEAltCR
    108007711U,	// AsmJHECGI
    440406335U,	// AsmJHECGR
    108007704U,	// AsmJHECI
    109056295U,	// AsmJHECLGI
    440406343U,	// AsmJHECLGR
    109056304U,	// AsmJHECLI
    440406352U,	// AsmJHECLR
    440406328U,	// AsmJHECR
    108007819U,	// AsmJLAltCGI
    440406447U,	// AsmJLAltCGR
    108007811U,	// AsmJLAltCI
    109056404U,	// AsmJLAltCLGI
    440406456U,	// AsmJLAltCLGR
    109056414U,	// AsmJLAltCLI
    440406466U,	// AsmJLAltCLR
    440406439U,	// AsmJLAltCR
    108009780U,	// AsmJLCGI
    440408400U,	// AsmJLCGR
    108009774U,	// AsmJLCI
    109058363U,	// AsmJLCLGI
    440408407U,	// AsmJLCLGR
    109058371U,	// AsmJLCLI
    440408415U,	// AsmJLCLR
    440408394U,	// AsmJLCR
    108009206U,	// AsmJLEAltCGI
    440407830U,	// AsmJLEAltCGR
    108009199U,	// AsmJLEAltCI
    109057790U,	// AsmJLEAltCLGI
    440407838U,	// AsmJLEAltCLGR
    109057799U,	// AsmJLEAltCLI
    440407847U,	// AsmJLEAltCLR
    440407823U,	// AsmJLEAltCR
    108008020U,	// AsmJLECGI
    440406644U,	// AsmJLECGR
    108008013U,	// AsmJLECI
    109056604U,	// AsmJLECLGI
    440406652U,	// AsmJLECLGR
    109056613U,	// AsmJLECLI
    440406661U,	// AsmJLECLR
    440406637U,	// AsmJLECR
    108008273U,	// AsmJLHAltCGI
    440406897U,	// AsmJLHAltCGR
    108008266U,	// AsmJLHAltCI
    109056857U,	// AsmJLHAltCLGI
    440406905U,	// AsmJLHAltCLGR
    109056866U,	// AsmJLHAltCLI
    440406914U,	// AsmJLHAltCLR
    440406890U,	// AsmJLHAltCR
    108008938U,	// AsmJLHCGI
    440407562U,	// AsmJLHCGR
    108008931U,	// AsmJLHCI
    109057522U,	// AsmJLHCLGI
    440407570U,	// AsmJLHCLGR
    109057531U,	// AsmJLHCLI
    440407579U,	// AsmJLHCLR
    440407555U,	// AsmJLHCR
    269743U,	// AsmLBR
    269489U,	// AsmLEBR
    16975U,	// AsmLEJ
    16967U,	// AsmLEJG
    9441831U,	// AsmLELOC
    9441846U,	// AsmLELOCG
    1053467U,	// AsmLELOCGR
    1053459U,	// AsmLELOCR
    10490414U,	// AsmLESTOC
    10490430U,	// AsmLESTOCG
    269713U,	// AsmLHBR
    17893U,	// AsmLHJ
    17860U,	// AsmLHJG
    9442724U,	// AsmLHLOC
    9442739U,	// AsmLHLOCG
    1054396U,	// AsmLHLOCGR
    1054388U,	// AsmLHLOCR
    10491307U,	// AsmLHSTOC
    10491323U,	// AsmLHSTOCG
    18736U,	// AsmLJ
    18698U,	// AsmLJG
    9443556U,	// AsmLLOC
    9443579U,	// AsmLLOCG
    1055281U,	// AsmLLOCGR
    1055244U,	// AsmLLOCR
    579866789U,	// AsmLOC
    579867738U,	// AsmLOCG
    705699113U,	// AsmLOCGR
    705698945U,	// AsmLOCR
    10492138U,	// AsmLSTOC
    10492162U,	// AsmLSTOCG
    269502U,	// AsmNEBR
    17228U,	// AsmNEJ
    17220U,	// AsmNEJG
    9442084U,	// AsmNELOC
    9442099U,	// AsmNELOCG
    1053586U,	// AsmNELOCGR
    1053578U,	// AsmNELOCR
    10490667U,	// AsmNESTOC
    10490683U,	// AsmNESTOCG
    269732U,	// AsmNHBR
    269482U,	// AsmNHEBR
    16773U,	// AsmNHEJ
    16764U,	// AsmNHEJG
    9441624U,	// AsmNHELOC
    9441641U,	// AsmNHELOCG
    1053140U,	// AsmNHELOCGR
    1053131U,	// AsmNHELOCR
    10490208U,	// AsmNHESTOC
    10490226U,	// AsmNHESTOCG
    18161U,	// AsmNHJ
    18153U,	// AsmNHJG
    9443017U,	// AsmNHLOC
    9443032U,	// AsmNHLOCG
    1054519U,	// AsmNHLOCGR
    1054511U,	// AsmNHLOCR
    10491600U,	// AsmNHSTOC
    10491616U,	// AsmNHSTOCG
    269758U,	// AsmNLBR
    269495U,	// AsmNLEBR
    17082U,	// AsmNLEJ
    17073U,	// AsmNLEJG
    9441933U,	// AsmNLELOC
    9441950U,	// AsmNLELOCG
    1053449U,	// AsmNLELOCGR
    1053440U,	// AsmNLELOCR
    10490517U,	// AsmNLESTOC
    10490535U,	// AsmNLESTOCG
    269725U,	// AsmNLHBR
    18011U,	// AsmNLHJ
    18002U,	// AsmNLHJG
    9442862U,	// AsmNLHLOC
    9442879U,	// AsmNLHLOCG
    1054378U,	// AsmNLHLOCGR
    1054369U,	// AsmNLHLOCR
    10491446U,	// AsmNLHSTOC
    10491464U,	// AsmNLHSTOCG
    18871U,	// AsmNLJ
    18863U,	// AsmNLJG
    9443727U,	// AsmNLLOC
    9443742U,	// AsmNLLOCG
    1055229U,	// AsmNLLOCGR
    1055221U,	// AsmNLLOCR
    10492310U,	// AsmNLSTOC
    10492326U,	// AsmNLSTOCG
    269779U,	// AsmNOBR
    19176U,	// AsmNOJ
    19170U,	// AsmNOJG
    9444034U,	// AsmNOLOC
    9444049U,	// AsmNOLOCG
    1055477U,	// AsmNOLOCGR
    1055469U,	// AsmNOLOCR
    10492617U,	// AsmNOSTOC
    10492633U,	// AsmNOSTOCG
    269774U,	// AsmOBR
    19134U,	// AsmOJ
    19129U,	// AsmOJG
    9443997U,	// AsmOLOC
    9444010U,	// AsmOLOCG
    1055493U,	// AsmOLOCGR
    1055486U,	// AsmOLOCR
    10492579U,	// AsmOSTOC
    10492593U,	// AsmOSTOCG
    715133098U,	// AsmSTOC
    715134048U,	// AsmSTOCG
    4201950U,	// BASR
    269077U,	// BR
    11542015U,	// BRAS
    11541130U,	// BRASL
    24332U,	// BRC
    24327U,	// BRCL
    12590605U,	// BRCT
    12588232U,	// BRCTG
    13635723U,	// C
    13635624U,	// CDB
    4201242U,	// CDBR
    4201435U,	// CDFBR
    4201456U,	// CDGBR
    13635669U,	// CEB
    4201345U,	// CEBR
    4201442U,	// CEFBR
    4201463U,	// CEGBR
    14687021U,	// CFDBR
    14687132U,	// CFEBR
    15734621U,	// CFI
    0U,	// CFIMux
    14687276U,	// CFXBR
    13636694U,	// CG
    14687028U,	// CGDBR
    14687139U,	// CGEBR
    13636532U,	// CGF
    15734632U,	// CGFI
    4201681U,	// CGFR
    11541018U,	// CGFRL
    13636889U,	// CGH
    16783282U,	// CGHI
    11541069U,	// CGHRL
    337928U,	// CGHSI
    421646U,	// CGIJ
    4201764U,	// CGR
    17985314U,	// CGRJ
    11541043U,	// CGRL
    14687283U,	// CGXBR
    13636853U,	// CH
    13636579U,	// CHF
    337943U,	// CHHSI
    16783271U,	// CHI
    11541063U,	// CHRL
    337914U,	// CHSI
    13639266U,	// CHY
    15734113U,	// CIH
    421642U,	// CIJ
    13637862U,	// CL
    28823U,	// CLC
    0U,	// CLCLoop
    0U,	// CLCSequence
    468992U,	// CLFHSI
    18880400U,	// CLFI
    0U,	// CLFIMux
    13636736U,	// CLG
    13636543U,	// CLGF
    18880373U,	// CLGFI
    4201694U,	// CLGFR
    11541025U,	// CLGFRL
    11541076U,	// CLGHRL
    469007U,	// CLGHSI
    552723U,	// CLGIJ
    4201788U,	// CLGR
    17985319U,	// CLGRJ
    11541049U,	// CLGRL
    13636615U,	// CLHF
    469022U,	// CLHHSI
    11541092U,	// CLHRL
    600034U,	// CLI
    18879846U,	// CLIH
    552729U,	// CLIJ
    601724U,	// CLIY
    0U,	// CLMux
    4201908U,	// CLR
    17985325U,	// CLRJ
    11541113U,	// CLRL
    4202007U,	// CLST
    0U,	// CLSTLoop
    13639324U,	// CLY
    0U,	// CMux
    171973778U,	// CPSDRdd
    171973778U,	// CPSDRds
    171973778U,	// CPSDRsd
    171973778U,	// CPSDRss
    4201578U,	// CR
    17985310U,	// CRJ
    11541006U,	// CRL
    839917061U,	// CS
    839914681U,	// CSG
    839917235U,	// CSY
    4201496U,	// CXBR
    4201449U,	// CXFBR
    4201476U,	// CXGBR
    13639229U,	// CY
    0U,	// CallBASR
    0U,	// CallBR
    0U,	// CallBRASL
    0U,	// CallJG
    0U,	// CondStore16
    0U,	// CondStore16Inv
    0U,	// CondStore16Mux
    0U,	// CondStore16MuxInv
    0U,	// CondStore32
    0U,	// CondStore32Inv
    0U,	// CondStore64
    0U,	// CondStore64Inv
    0U,	// CondStore8
    0U,	// CondStore8Inv
    0U,	// CondStore8Mux
    0U,	// CondStore8MuxInv
    0U,	// CondStoreF32
    0U,	// CondStoreF32Inv
    0U,	// CondStoreF64
    0U,	// CondStoreF64Inv
    4141U,	// DDB
    1055520U,	// DDBR
    4187U,	// DEB
    1055624U,	// DEBR
    6391U,	// DL
    5253U,	// DLG
    1056066U,	// DLGR
    1056185U,	// DLR
    5310U,	// DSG
    5073U,	// DSGF
    1056001U,	// DSGFR
    1056103U,	// DSGR
    1055775U,	// DXBR
    19929869U,	// EAR
    14687035U,	// FIDBR
    719327237U,	// FIDBRA
    14687146U,	// FIEBR
    719327245U,	// FIEBRA
    14687290U,	// FIXBR
    719327253U,	// FIXBRA
    4201818U,	// FLOGR
    4238U,	// IC
    4238U,	// IC32
    7740U,	// IC32Y
    7740U,	// ICY
    0U,	// IIFMux
    18879464U,	// IIHF
    0U,	// IIHF64
    20976945U,	// IIHH
    0U,	// IIHH64
    20977935U,	// IIHL
    0U,	// IIHL64
    0U,	// IIHMux
    18879501U,	// IILF
    0U,	// IILF64
    20977098U,	// IILH
    0U,	// IILH64
    20978022U,	// IILL
    0U,	// IILL64
    0U,	// IILMux
    268945U,	// IPM
    18481U,	// J
    17519U,	// JG
    13637857U,	// L
    0U,	// L128
    13635585U,	// LA
    11540998U,	// LARL
    13639223U,	// LAY
    13635716U,	// LB
    13636846U,	// LBH
    0U,	// LBMux
    4201484U,	// LBR
    4201241U,	// LCDBR
    4201344U,	// LCEBR
    4201680U,	// LCGFR
    4201763U,	// LCGR
    4201590U,	// LCR
    4201495U,	// LCXBR
    13635784U,	// LD
    13635674U,	// LDEB
    4201351U,	// LDEBR
    4201776U,	// LDGR
    4201613U,	// LDR
    4201502U,	// LDXBR
    13639239U,	// LDY
    13636138U,	// LE
    4201254U,	// LEDBR
    4201650U,	// LER
    4201509U,	// LEXBR
    13639250U,	// LEY
    13636876U,	// LFH
    13636724U,	// LG
    13635710U,	// LGB
    4201470U,	// LGBR
    4201607U,	// LGDR
    13636538U,	// LGF
    15734639U,	// LGFI
    4201688U,	// LGFR
    11541026U,	// LGFRL
    13636908U,	// LGH
    16783288U,	// LGHI
    4201867U,	// LGHR
    11541077U,	// LGHRL
    4201783U,	// LGR
    11541050U,	// LGRL
    13637031U,	// LH
    13636939U,	// LHH
    16783314U,	// LHI
    0U,	// LHIMux
    0U,	// LHMux
    4201874U,	// LHR
    11541093U,	// LHRL
    13639271U,	// LHY
    13635740U,	// LLC
    13636851U,	// LLCH
    0U,	// LLCMux
    4201595U,	// LLCR
    0U,	// LLCRMux
    13635720U,	// LLGC
    4201582U,	// LLGCR
    13636549U,	// LLGF
    4201701U,	// LLGFR
    11541033U,	// LLGFRL
    13636907U,	// LLGH
    4201866U,	// LLGHR
    11541084U,	// LLGHRL
    13637155U,	// LLH
    13636938U,	// LLHH
    0U,	// LLHMux
    4201879U,	// LLHR
    11541099U,	// LLHRL
    0U,	// LLHRMux
    18879470U,	// LLIHF
    22025527U,	// LLIHH
    22026517U,	// LLIHL
    18879507U,	// LLILF
    22025680U,	// LLILH
    22026604U,	// LLILL
    977278118U,	// LMG
    0U,	// LMux
    4201288U,	// LNDBR
    4201393U,	// LNEBR
    4201715U,	// LNGFR
    4201812U,	// LNGR
    4201929U,	// LNR
    4201543U,	// LNXBR
    36595U,	// LOC
    36604U,	// LOCG
    40759U,	// LOCGR
    40754U,	// LOCR
    4201295U,	// LPDBR
    4201400U,	// LPEBR
    4201722U,	// LPGFR
    4201825U,	// LPGR
    4201945U,	// LPR
    4201550U,	// LPXBR
    4201899U,	// LR
    11541114U,	// LRL
    0U,	// LRMux
    13639209U,	// LRV
    13636825U,	// LRVG
    4201849U,	// LRVGR
    4201966U,	// LRVR
    13639187U,	// LT
    4201316U,	// LTDBR
    4201316U,	// LTDBRCompare
    4201421U,	// LTEBR
    4201421U,	// LTEBRCompare
    13636815U,	// LTG
    13636573U,	// LTGF
    4201743U,	// LTGFR
    4201843U,	// LTGR
    4201961U,	// LTR
    4201570U,	// LTXBR
    4201570U,	// LTXBRCompare
    0U,	// LX
    13635651U,	// LXDB
    4201323U,	// LXDBR
    13635704U,	// LXEB
    4201428U,	// LXEBR
    4201972U,	// LXR
    13639320U,	// LY
    269465U,	// LZDR
    269508U,	// LZER
    269817U,	// LZXR
    1108348962U,	// MADB
    1242569490U,	// MADBR
    1108349007U,	// MAEB
    1242569593U,	// MAEBR
    4146U,	// MDB
    1055554U,	// MDBR
    4192U,	// MDEB
    1055630U,	// MDEBR
    4198U,	// MEEB
    1055637U,	// MEEBR
    3151806U,	// MGHI
    5829U,	// MH
    3151831U,	// MHI
    7788U,	// MHY
    5270U,	// MLG
    1056072U,	// MLGR
    7689U,	// MS
    1108348989U,	// MSDB
    1242569565U,	// MSDBR
    1108349042U,	// MSEB
    1242569670U,	// MSEBR
    2103196U,	// MSFI
    5315U,	// MSG
    5079U,	// MSGF
    2103171U,	// MSGFI
    1056008U,	// MSGFR
    1056109U,	// MSGR
    1056228U,	// MSR
    7864U,	// MSY
    28858U,	// MVC
    0U,	// MVCLoop
    0U,	// MVCSequence
    337860U,	// MVGHI
    337867U,	// MVHHI
    337884U,	// MVHI
    600102U,	// MVI
    601740U,	// MVIY
    4202019U,	// MVST
    0U,	// MVSTLoop
    1055809U,	// MXBR
    4169U,	// MXDB
    1055602U,	// MXDBR
    6810U,	// N
    28833U,	// NC
    0U,	// NCLoop
    0U,	// NCSequence
    5297U,	// NG
    1056085U,	// NGR
    171972776U,	// NGRK
    600039U,	// NI
    0U,	// NIFMux
    5247989U,	// NIHF
    0U,	// NIHF64
    20976958U,	// NIHH
    0U,	// NIHH64
    20977948U,	// NIHL
    0U,	// NIHL64
    0U,	// NIHMux
    5248026U,	// NILF
    0U,	// NILF64
    20977111U,	// NILH
    0U,	// NILH64
    20978035U,	// NILL
    0U,	// NILL64
    0U,	// NILMux
    601730U,	// NIY
    1056202U,	// NR
    171972812U,	// NRK
    7851U,	// NY
    6816U,	// O
    28838U,	// OC
    0U,	// OCLoop
    0U,	// OCSequence
    5301U,	// OG
    1056092U,	// OGR
    171972782U,	// OGRK
    600043U,	// OI
    0U,	// OIFMux
    5247995U,	// OIHF
    0U,	// OIHF64
    20976964U,	// OIHH
    0U,	// OIHH64
    20977954U,	// OIHL
    0U,	// OIHL64
    0U,	// OIHMux
    5248032U,	// OILF
    0U,	// OILF64
    20977117U,	// OILH
    0U,	// OILH64
    20978041U,	// OILL
    0U,	// OILL64
    0U,	// OILMux
    601735U,	// OIY
    1056207U,	// OR
    171972817U,	// ORK
    7855U,	// OY
    667843U,	// PFD
    211475U,	// PFDRL
    1376785464U,	// RISBG
    1376785464U,	// RISBG32
    1376785511U,	// RISBHG
    0U,	// RISBHH
    0U,	// RISBHL
    1376785528U,	// RISBLG
    0U,	// RISBLH
    0U,	// RISBLL
    0U,	// RISBMux
    977279365U,	// RLL
    977278090U,	// RLLG
    1376785471U,	// RNSBG
    1376785478U,	// ROSBG
    1376785485U,	// RXSBG
    0U,	// Return
    7682U,	// S
    4158U,	// SDB
    1055582U,	// SDBR
    4211U,	// SEB
    1055687U,	// SEBR
    5306U,	// SG
    5074U,	// SGF
    1056002U,	// SGFR
    1056104U,	// SGR
    171972788U,	// SGRK
    5967U,	// SH
    7793U,	// SHY
    6797U,	// SL
    4227U,	// SLB
    5170U,	// SLBG
    1055755U,	// SLBR
    5248918U,	// SLFI
    5281U,	// SLG
    1056027U,	// SLGBR
    5067U,	// SLGF
    5248892U,	// SLGFI
    1055980U,	// SLGFR
    1056078U,	// SLGR
    171972769U,	// SLGRK
    9443722U,	// SLL
    977278096U,	// SLLG
    977279107U,	// SLLK
    1056196U,	// SLR
    171972806U,	// SLRK
    7841U,	// SLY
    13635639U,	// SQDB
    4201302U,	// SQDBR
    13635692U,	// SQEB
    4201407U,	// SQEBR
    4201557U,	// SQXBR
    1056224U,	// SR
    9441309U,	// SRA
    977277996U,	// SRAG
    977279071U,	// SRAK
    171972822U,	// SRK
    9443967U,	// SRL
    977278107U,	// SRLG
    977279113U,	// SRLK
    4202013U,	// SRST
    0U,	// SRSTLoop
    13639193U,	// ST
    0U,	// ST128
    13635765U,	// STC
    13636870U,	// STCH
    0U,	// STCMux
    13639233U,	// STCY
    13635788U,	// STD
    13639244U,	// STDY
    13636522U,	// STE
    13639255U,	// STEY
    13636881U,	// STFH
    13636820U,	// STG
    11541056U,	// STGRL
    13637459U,	// STH
    13636950U,	// STHH
    0U,	// STHMux
    11541106U,	// STHRL
    13639286U,	// STHY
    977278123U,	// STMG
    0U,	// STMux
    44791U,	// STOC
    44801U,	// STOCG
    11541124U,	// STRL
    13639214U,	// STRV
    13636831U,	// STRVG
    0U,	// STX
    13639357U,	// STY
    1055836U,	// SXBR
    7860U,	// SY
    0U,	// Select32
    0U,	// Select32Mux
    0U,	// Select64
    0U,	// SelectF128
    0U,	// SelectF32
    0U,	// SelectF64
    600726U,	// TM
    22025552U,	// TMHH
    0U,	// TMHH64
    22026536U,	// TMHL
    0U,	// TMHL64
    0U,	// TMHMux
    22025768U,	// TMLH
    0U,	// TMLH64
    22026623U,	// TMLL
    0U,	// TMLL64
    0U,	// TMLMux
    601766U,	// TMY
    7732U,	// X
    28863U,	// XC
    0U,	// XCLoop
    0U,	// XCSequence
    5350U,	// XG
    1056128U,	// XGR
    171972794U,	// XGRK
    600107U,	// XI
    0U,	// XIFMux
    5248001U,	// XIHF
    0U,	// XIHF64
    5248038U,	// XILF
    0U,	// XILF64
    601746U,	// XIY
    1056245U,	// XR
    171972827U,	// XRK
    7874U,	// XY
    0U,	// ZEXT128_32
    0U,	// ZEXT128_64
    0U
  };

  const char AsmStrs[] = {
  /* 0 */ 'l', 'a', 9, 0,
  /* 4 */ 'f', 'i', 'd', 'b', 'r', 'a', 9, 0,
  /* 12 */ 'f', 'i', 'e', 'b', 'r', 'a', 9, 0,
  /* 20 */ 'f', 'i', 'x', 'b', 'r', 'a', 9, 0,
  /* 28 */ 's', 'r', 'a', 9, 0,
  /* 33 */ 'm', 'a', 'd', 'b', 9, 0,
  /* 39 */ 'c', 'd', 'b', 9, 0,
  /* 44 */ 'd', 'd', 'b', 9, 0,
  /* 49 */ 'm', 'd', 'b', 9, 0,
  /* 54 */ 's', 'q', 'd', 'b', 9, 0,
  /* 60 */ 'm', 's', 'd', 'b', 9, 0,
  /* 66 */ 'l', 'x', 'd', 'b', 9, 0,
  /* 72 */ 'm', 'x', 'd', 'b', 9, 0,
  /* 78 */ 'm', 'a', 'e', 'b', 9, 0,
  /* 84 */ 'c', 'e', 'b', 9, 0,
  /* 89 */ 'l', 'd', 'e', 'b', 9, 0,
  /* 95 */ 'm', 'd', 'e', 'b', 9, 0,
  /* 101 */ 'm', 'e', 'e', 'b', 9, 0,
  /* 107 */ 's', 'q', 'e', 'b', 9, 0,
  /* 113 */ 'm', 's', 'e', 'b', 9, 0,
  /* 119 */ 'l', 'x', 'e', 'b', 9, 0,
  /* 125 */ 'l', 'g', 'b', 9, 0,
  /* 130 */ 's', 'l', 'b', 9, 0,
  /* 135 */ 'l', 'l', 'g', 'c', 9, 0,
  /* 141 */ 'i', 'c', 9, 0,
  /* 145 */ 'a', 'l', 'c', 9, 0,
  /* 150 */ 'c', 'l', 'c', 9, 0,
  /* 155 */ 'l', 'l', 'c', 9, 0,
  /* 160 */ 'n', 'c', 9, 0,
  /* 164 */ 'l', 'o', 'c', 9, 0,
  /* 169 */ 's', 't', 'o', 'c', 9, 0,
  /* 175 */ 'b', 'r', 'c', 9, 0,
  /* 180 */ 's', 't', 'c', 9, 0,
  /* 185 */ 'm', 'v', 'c', 9, 0,
  /* 190 */ 'x', 'c', 9, 0,
  /* 194 */ 'p', 'f', 'd', 9, 0,
  /* 199 */ 'l', 'd', 9, 0,
  /* 203 */ 's', 't', 'd', 9, 0,
  /* 208 */ 'l', 'o', 'c', 'e', 9, 0,
  /* 214 */ 's', 't', 'o', 'c', 'e', 9, 0,
  /* 221 */ 'l', 'o', 'c', 'g', 'e', 9, 0,
  /* 228 */ 's', 't', 'o', 'c', 'g', 'e', 9, 0,
  /* 236 */ 'j', 'g', 'e', 9, 0,
  /* 241 */ 'l', 'o', 'c', 'h', 'e', 9, 0,
  /* 248 */ 's', 't', 'o', 'c', 'h', 'e', 9, 0,
  /* 256 */ 'l', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 264 */ 's', 't', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 273 */ 'j', 'g', 'h', 'e', 9, 0,
  /* 279 */ 'c', 'i', 'j', 'h', 'e', 9, 0,
  /* 286 */ 'c', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 294 */ 'c', 'l', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 303 */ 'c', 'l', 'i', 'j', 'h', 'e', 9, 0,
  /* 311 */ 'c', 'r', 'j', 'h', 'e', 9, 0,
  /* 318 */ 'c', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 326 */ 'c', 'l', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 335 */ 'c', 'l', 'r', 'j', 'h', 'e', 9, 0,
  /* 343 */ 'l', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 351 */ 's', 't', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 360 */ 'l', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 369 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 379 */ 'j', 'g', 'n', 'h', 'e', 9, 0,
  /* 386 */ 'c', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 394 */ 'c', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 403 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 413 */ 'c', 'l', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 422 */ 'c', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 430 */ 'c', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 439 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 449 */ 'c', 'l', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 458 */ 'l', 'o', 'c', 'r', 'n', 'h', 'e', 9, 0,
  /* 467 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 'e', 9, 0,
  /* 477 */ 'l', 'o', 'c', 'r', 'h', 'e', 9, 0,
  /* 485 */ 'l', 'o', 'c', 'g', 'r', 'h', 'e', 9, 0,
  /* 494 */ 'c', 'i', 'j', 'e', 9, 0,
  /* 500 */ 'c', 'g', 'i', 'j', 'e', 9, 0,
  /* 507 */ 'c', 'l', 'g', 'i', 'j', 'e', 9, 0,
  /* 515 */ 'c', 'l', 'i', 'j', 'e', 9, 0,
  /* 522 */ 'c', 'r', 'j', 'e', 9, 0,
  /* 528 */ 'c', 'g', 'r', 'j', 'e', 9, 0,
  /* 535 */ 'c', 'l', 'g', 'r', 'j', 'e', 9, 0,
  /* 543 */ 'c', 'l', 'r', 'j', 'e', 9, 0,
  /* 550 */ 'l', 'o', 'c', 'l', 'e', 9, 0,
  /* 557 */ 's', 't', 'o', 'c', 'l', 'e', 9, 0,
  /* 565 */ 'l', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 573 */ 's', 't', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 582 */ 'j', 'g', 'l', 'e', 9, 0,
  /* 588 */ 'c', 'i', 'j', 'l', 'e', 9, 0,
  /* 595 */ 'c', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 603 */ 'c', 'l', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 612 */ 'c', 'l', 'i', 'j', 'l', 'e', 9, 0,
  /* 620 */ 'c', 'r', 'j', 'l', 'e', 9, 0,
  /* 627 */ 'c', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 635 */ 'c', 'l', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 644 */ 'c', 'l', 'r', 'j', 'l', 'e', 9, 0,
  /* 652 */ 'l', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 660 */ 's', 't', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 669 */ 'l', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 678 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 688 */ 'j', 'g', 'n', 'l', 'e', 9, 0,
  /* 695 */ 'c', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 703 */ 'c', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 712 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 722 */ 'c', 'l', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 731 */ 'c', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 739 */ 'c', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 748 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 758 */ 'c', 'l', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 767 */ 'l', 'o', 'c', 'r', 'n', 'l', 'e', 9, 0,
  /* 776 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'e', 9, 0,
  /* 786 */ 'l', 'o', 'c', 'r', 'l', 'e', 9, 0,
  /* 794 */ 'l', 'o', 'c', 'g', 'r', 'l', 'e', 9, 0,
  /* 803 */ 'l', 'o', 'c', 'n', 'e', 9, 0,
  /* 810 */ 's', 't', 'o', 'c', 'n', 'e', 9, 0,
  /* 818 */ 'l', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 826 */ 's', 't', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 835 */ 'j', 'g', 'n', 'e', 9, 0,
  /* 841 */ 'c', 'i', 'j', 'n', 'e', 9, 0,
  /* 848 */ 'c', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 856 */ 'c', 'l', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 865 */ 'c', 'l', 'i', 'j', 'n', 'e', 9, 0,
  /* 873 */ 'c', 'r', 'j', 'n', 'e', 9, 0,
  /* 880 */ 'c', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 888 */ 'c', 'l', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 897 */ 'c', 'l', 'r', 'j', 'n', 'e', 9, 0,
  /* 905 */ 'l', 'o', 'c', 'r', 'n', 'e', 9, 0,
  /* 913 */ 'l', 'o', 'c', 'g', 'r', 'n', 'e', 9, 0,
  /* 922 */ 'l', 'o', 'c', 'r', 'e', 9, 0,
  /* 929 */ 'l', 'o', 'c', 'g', 'r', 'e', 9, 0,
  /* 937 */ 's', 't', 'e', 9, 0,
  /* 942 */ 'a', 'g', 'f', 9, 0,
  /* 947 */ 'c', 'g', 'f', 9, 0,
  /* 952 */ 'a', 'l', 'g', 'f', 9, 0,
  /* 958 */ 'c', 'l', 'g', 'f', 9, 0,
  /* 964 */ 'l', 'l', 'g', 'f', 9, 0,
  /* 970 */ 's', 'l', 'g', 'f', 9, 0,
  /* 976 */ 'd', 's', 'g', 'f', 9, 0,
  /* 982 */ 'm', 's', 'g', 'f', 9, 0,
  /* 988 */ 'l', 't', 'g', 'f', 9, 0,
  /* 994 */ 'c', 'h', 'f', 9, 0,
  /* 999 */ 'i', 'i', 'h', 'f', 9, 0,
  /* 1005 */ 'l', 'l', 'i', 'h', 'f', 9, 0,
  /* 1012 */ 'n', 'i', 'h', 'f', 9, 0,
  /* 1018 */ 'o', 'i', 'h', 'f', 9, 0,
  /* 1024 */ 'x', 'i', 'h', 'f', 9, 0,
  /* 1030 */ 'c', 'l', 'h', 'f', 9, 0,
  /* 1036 */ 'i', 'i', 'l', 'f', 9, 0,
  /* 1042 */ 'l', 'l', 'i', 'l', 'f', 9, 0,
  /* 1049 */ 'n', 'i', 'l', 'f', 9, 0,
  /* 1055 */ 'o', 'i', 'l', 'f', 9, 0,
  /* 1061 */ 'x', 'i', 'l', 'f', 9, 0,
  /* 1067 */ 's', 'r', 'a', 'g', 9, 0,
  /* 1073 */ 's', 'l', 'b', 'g', 9, 0,
  /* 1079 */ 'r', 'i', 's', 'b', 'g', 9, 0,
  /* 1086 */ 'r', 'n', 's', 'b', 'g', 9, 0,
  /* 1093 */ 'r', 'o', 's', 'b', 'g', 9, 0,
  /* 1100 */ 'r', 'x', 's', 'b', 'g', 9, 0,
  /* 1107 */ 'a', 'l', 'c', 'g', 9, 0,
  /* 1113 */ 'l', 'o', 'c', 'g', 9, 0,
  /* 1119 */ 's', 't', 'o', 'c', 'g', 9, 0,
  /* 1126 */ 'r', 'i', 's', 'b', 'h', 'g', 9, 0,
  /* 1134 */ 'j', 'g', 9, 0,
  /* 1138 */ 'a', 'l', 'g', 9, 0,
  /* 1143 */ 'r', 'i', 's', 'b', 'l', 'g', 9, 0,
  /* 1151 */ 'c', 'l', 'g', 9, 0,
  /* 1156 */ 'd', 'l', 'g', 9, 0,
  /* 1161 */ 'r', 'l', 'l', 'g', 9, 0,
  /* 1167 */ 's', 'l', 'l', 'g', 9, 0,
  /* 1173 */ 'm', 'l', 'g', 9, 0,
  /* 1178 */ 's', 'r', 'l', 'g', 9, 0,
  /* 1184 */ 's', 'l', 'g', 9, 0,
  /* 1189 */ 'l', 'm', 'g', 9, 0,
  /* 1194 */ 's', 't', 'm', 'g', 9, 0,
  /* 1200 */ 'n', 'g', 9, 0,
  /* 1204 */ 'o', 'g', 9, 0,
  /* 1208 */ 'c', 's', 'g', 9, 0,
  /* 1213 */ 'd', 's', 'g', 9, 0,
  /* 1218 */ 'm', 's', 'g', 9, 0,
  /* 1223 */ 'b', 'r', 'c', 't', 'g', 9, 0,
  /* 1230 */ 'l', 't', 'g', 9, 0,
  /* 1235 */ 's', 't', 'g', 9, 0,
  /* 1240 */ 'l', 'r', 'v', 'g', 9, 0,
  /* 1246 */ 's', 't', 'r', 'v', 'g', 9, 0,
  /* 1253 */ 'x', 'g', 9, 0,
  /* 1257 */ 'a', 'h', 9, 0,
  /* 1261 */ 'l', 'b', 'h', 9, 0,
  /* 1266 */ 'l', 'l', 'c', 'h', 9, 0,
  /* 1272 */ 'l', 'o', 'c', 'h', 9, 0,
  /* 1278 */ 's', 't', 'o', 'c', 'h', 9, 0,
  /* 1285 */ 's', 't', 'c', 'h', 9, 0,
  /* 1291 */ 'l', 'f', 'h', 9, 0,
  /* 1296 */ 's', 't', 'f', 'h', 9, 0,
  /* 1302 */ 'l', 'o', 'c', 'g', 'h', 9, 0,
  /* 1309 */ 's', 't', 'o', 'c', 'g', 'h', 9, 0,
  /* 1317 */ 'j', 'g', 'h', 9, 0,
  /* 1322 */ 'l', 'l', 'g', 'h', 9, 0,
  /* 1328 */ 'i', 'i', 'h', 'h', 9, 0,
  /* 1334 */ 'l', 'l', 'i', 'h', 'h', 9, 0,
  /* 1341 */ 'n', 'i', 'h', 'h', 9, 0,
  /* 1347 */ 'o', 'i', 'h', 'h', 9, 0,
  /* 1353 */ 'l', 'l', 'h', 'h', 9, 0,
  /* 1359 */ 't', 'm', 'h', 'h', 9, 0,
  /* 1365 */ 's', 't', 'h', 'h', 9, 0,
  /* 1371 */ 'a', 'i', 'h', 9, 0,
  /* 1376 */ 'c', 'i', 'h', 9, 0,
  /* 1381 */ 'c', 'l', 'i', 'h', 9, 0,
  /* 1387 */ 'c', 'i', 'j', 'h', 9, 0,
  /* 1393 */ 'c', 'g', 'i', 'j', 'h', 9, 0,
  /* 1400 */ 'c', 'l', 'g', 'i', 'j', 'h', 9, 0,
  /* 1408 */ 'c', 'l', 'i', 'j', 'h', 9, 0,
  /* 1415 */ 'c', 'r', 'j', 'h', 9, 0,
  /* 1421 */ 'c', 'g', 'r', 'j', 'h', 9, 0,
  /* 1428 */ 'c', 'l', 'g', 'r', 'j', 'h', 9, 0,
  /* 1436 */ 'c', 'l', 'r', 'j', 'h', 9, 0,
  /* 1443 */ 'l', 'o', 'c', 'l', 'h', 9, 0,
  /* 1450 */ 's', 't', 'o', 'c', 'l', 'h', 9, 0,
  /* 1458 */ 'l', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 1466 */ 's', 't', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 1475 */ 'j', 'g', 'l', 'h', 9, 0,
  /* 1481 */ 'i', 'i', 'l', 'h', 9, 0,
  /* 1487 */ 'l', 'l', 'i', 'l', 'h', 9, 0,
  /* 1494 */ 'n', 'i', 'l', 'h', 9, 0,
  /* 1500 */ 'o', 'i', 'l', 'h', 9, 0,
  /* 1506 */ 'c', 'i', 'j', 'l', 'h', 9, 0,
  /* 1513 */ 'c', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 1521 */ 'c', 'l', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 1530 */ 'c', 'l', 'i', 'j', 'l', 'h', 9, 0,
  /* 1538 */ 'c', 'r', 'j', 'l', 'h', 9, 0,
  /* 1545 */ 'c', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 1553 */ 'c', 'l', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 1562 */ 'c', 'l', 'r', 'j', 'l', 'h', 9, 0,
  /* 1570 */ 'l', 'l', 'h', 9, 0,
  /* 1575 */ 't', 'm', 'l', 'h', 9, 0,
  /* 1581 */ 'l', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 1589 */ 's', 't', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 1598 */ 'l', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 1607 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 1617 */ 'j', 'g', 'n', 'l', 'h', 9, 0,
  /* 1624 */ 'c', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1632 */ 'c', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1641 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1651 */ 'c', 'l', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 1660 */ 'c', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1668 */ 'c', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1677 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1687 */ 'c', 'l', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 1696 */ 'l', 'o', 'c', 'r', 'n', 'l', 'h', 9, 0,
  /* 1705 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'h', 9, 0,
  /* 1715 */ 'l', 'o', 'c', 'r', 'l', 'h', 9, 0,
  /* 1723 */ 'l', 'o', 'c', 'g', 'r', 'l', 'h', 9, 0,
  /* 1732 */ 'm', 'h', 9, 0,
  /* 1736 */ 'l', 'o', 'c', 'n', 'h', 9, 0,
  /* 1743 */ 's', 't', 'o', 'c', 'n', 'h', 9, 0,
  /* 1751 */ 'l', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 1759 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 1768 */ 'j', 'g', 'n', 'h', 9, 0,
  /* 1774 */ 'c', 'i', 'j', 'n', 'h', 9, 0,
  /* 1781 */ 'c', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 1789 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 1798 */ 'c', 'l', 'i', 'j', 'n', 'h', 9, 0,
  /* 1806 */ 'c', 'r', 'j', 'n', 'h', 9, 0,
  /* 1813 */ 'c', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 1821 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 1830 */ 'c', 'l', 'r', 'j', 'n', 'h', 9, 0,
  /* 1838 */ 'l', 'o', 'c', 'r', 'n', 'h', 9, 0,
  /* 1846 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 9, 0,
  /* 1855 */ 'l', 'o', 'c', 'r', 'h', 9, 0,
  /* 1862 */ 'l', 'o', 'c', 'g', 'r', 'h', 9, 0,
  /* 1870 */ 's', 'h', 9, 0,
  /* 1874 */ 's', 't', 'h', 9, 0,
  /* 1879 */ 'a', 'f', 'i', 9, 0,
  /* 1884 */ 'c', 'f', 'i', 9, 0,
  /* 1889 */ 'a', 'g', 'f', 'i', 9, 0,
  /* 1895 */ 'c', 'g', 'f', 'i', 9, 0,
  /* 1901 */ 'a', 'l', 'g', 'f', 'i', 9, 0,
  /* 1908 */ 'c', 'l', 'g', 'f', 'i', 9, 0,
  /* 1915 */ 's', 'l', 'g', 'f', 'i', 9, 0,
  /* 1922 */ 'm', 's', 'g', 'f', 'i', 9, 0,
  /* 1929 */ 'a', 'l', 'f', 'i', 9, 0,
  /* 1935 */ 'c', 'l', 'f', 'i', 9, 0,
  /* 1941 */ 's', 'l', 'f', 'i', 9, 0,
  /* 1947 */ 'm', 's', 'f', 'i', 9, 0,
  /* 1953 */ 'a', 'h', 'i', 9, 0,
  /* 1958 */ 'c', 'h', 'i', 9, 0,
  /* 1963 */ 'a', 'g', 'h', 'i', 9, 0,
  /* 1969 */ 'c', 'g', 'h', 'i', 9, 0,
  /* 1975 */ 'l', 'g', 'h', 'i', 9, 0,
  /* 1981 */ 'm', 'g', 'h', 'i', 9, 0,
  /* 1987 */ 'm', 'v', 'g', 'h', 'i', 9, 0,
  /* 1994 */ 'm', 'v', 'h', 'h', 'i', 9, 0,
  /* 2001 */ 'l', 'h', 'i', 9, 0,
  /* 2006 */ 'm', 'h', 'i', 9, 0,
  /* 2011 */ 'm', 'v', 'h', 'i', 9, 0,
  /* 2017 */ 'c', 'l', 'i', 9, 0,
  /* 2022 */ 'n', 'i', 9, 0,
  /* 2026 */ 'o', 'i', 9, 0,
  /* 2030 */ 'a', 's', 'i', 9, 0,
  /* 2035 */ 'a', 'g', 's', 'i', 9, 0,
  /* 2041 */ 'c', 'h', 's', 'i', 9, 0,
  /* 2047 */ 'c', 'l', 'f', 'h', 's', 'i', 9, 0,
  /* 2055 */ 'c', 'g', 'h', 's', 'i', 9, 0,
  /* 2062 */ 'c', 'l', 'g', 'h', 's', 'i', 9, 0,
  /* 2070 */ 'c', 'h', 'h', 's', 'i', 9, 0,
  /* 2077 */ 'c', 'l', 'h', 'h', 's', 'i', 9, 0,
  /* 2085 */ 'm', 'v', 'i', 9, 0,
  /* 2090 */ 'x', 'i', 9, 0,
  /* 2094 */ 'c', 'i', 'j', 9, 0,
  /* 2099 */ 'c', 'g', 'i', 'j', 9, 0,
  /* 2105 */ 'c', 'l', 'g', 'i', 'j', 9, 0,
  /* 2112 */ 'c', 'l', 'i', 'j', 9, 0,
  /* 2118 */ 'c', 'r', 'j', 9, 0,
  /* 2123 */ 'c', 'g', 'r', 'j', 9, 0,
  /* 2129 */ 'c', 'l', 'g', 'r', 'j', 9, 0,
  /* 2136 */ 'c', 'l', 'r', 'j', 9, 0,
  /* 2142 */ 's', 'r', 'a', 'k', 9, 0,
  /* 2148 */ 'a', 'h', 'i', 'k', 9, 0,
  /* 2154 */ 'a', 'g', 'h', 'i', 'k', 9, 0,
  /* 2161 */ 'a', 'l', 'g', 'h', 's', 'i', 'k', 9, 0,
  /* 2170 */ 'a', 'l', 'h', 's', 'i', 'k', 9, 0,
  /* 2178 */ 's', 'l', 'l', 'k', 9, 0,
  /* 2184 */ 's', 'r', 'l', 'k', 9, 0,
  /* 2190 */ 'a', 'r', 'k', 9, 0,
  /* 2195 */ 'a', 'g', 'r', 'k', 9, 0,
  /* 2201 */ 'a', 'l', 'g', 'r', 'k', 9, 0,
  /* 2208 */ 's', 'l', 'g', 'r', 'k', 9, 0,
  /* 2215 */ 'n', 'g', 'r', 'k', 9, 0,
  /* 2221 */ 'o', 'g', 'r', 'k', 9, 0,
  /* 2227 */ 's', 'g', 'r', 'k', 9, 0,
  /* 2233 */ 'x', 'g', 'r', 'k', 9, 0,
  /* 2239 */ 'a', 'l', 'r', 'k', 9, 0,
  /* 2245 */ 's', 'l', 'r', 'k', 9, 0,
  /* 2251 */ 'n', 'r', 'k', 9, 0,
  /* 2256 */ 'o', 'r', 'k', 9, 0,
  /* 2261 */ 's', 'r', 'k', 9, 0,
  /* 2266 */ 'x', 'r', 'k', 9, 0,
  /* 2271 */ 'a', 'l', 9, 0,
  /* 2275 */ 'l', 'o', 'c', 'l', 9, 0,
  /* 2281 */ 's', 't', 'o', 'c', 'l', 9, 0,
  /* 2288 */ 'b', 'r', 'c', 'l', 9, 0,
  /* 2294 */ 'd', 'l', 9, 0,
  /* 2298 */ 'l', 'o', 'c', 'g', 'l', 9, 0,
  /* 2305 */ 's', 't', 'o', 'c', 'g', 'l', 9, 0,
  /* 2313 */ 'j', 'g', 'l', 9, 0,
  /* 2318 */ 'i', 'i', 'h', 'l', 9, 0,
  /* 2324 */ 'l', 'l', 'i', 'h', 'l', 9, 0,
  /* 2331 */ 'n', 'i', 'h', 'l', 9, 0,
  /* 2337 */ 'o', 'i', 'h', 'l', 9, 0,
  /* 2343 */ 't', 'm', 'h', 'l', 9, 0,
  /* 2349 */ 'c', 'i', 'j', 'l', 9, 0,
  /* 2355 */ 'c', 'g', 'i', 'j', 'l', 9, 0,
  /* 2362 */ 'c', 'l', 'g', 'i', 'j', 'l', 9, 0,
  /* 2370 */ 'c', 'l', 'i', 'j', 'l', 9, 0,
  /* 2377 */ 'c', 'r', 'j', 'l', 9, 0,
  /* 2383 */ 'c', 'g', 'r', 'j', 'l', 9, 0,
  /* 2390 */ 'c', 'l', 'g', 'r', 'j', 'l', 9, 0,
  /* 2398 */ 'c', 'l', 'r', 'j', 'l', 9, 0,
  /* 2405 */ 'i', 'i', 'l', 'l', 9, 0,
  /* 2411 */ 'l', 'l', 'i', 'l', 'l', 9, 0,
  /* 2418 */ 'n', 'i', 'l', 'l', 9, 0,
  /* 2424 */ 'o', 'i', 'l', 'l', 9, 0,
  /* 2430 */ 't', 'm', 'l', 'l', 9, 0,
  /* 2436 */ 'r', 'l', 'l', 9, 0,
  /* 2441 */ 's', 'l', 'l', 9, 0,
  /* 2446 */ 'l', 'o', 'c', 'n', 'l', 9, 0,
  /* 2453 */ 's', 't', 'o', 'c', 'n', 'l', 9, 0,
  /* 2461 */ 'l', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 2469 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 2478 */ 'j', 'g', 'n', 'l', 9, 0,
  /* 2484 */ 'c', 'i', 'j', 'n', 'l', 9, 0,
  /* 2491 */ 'c', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 2499 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 2508 */ 'c', 'l', 'i', 'j', 'n', 'l', 9, 0,
  /* 2516 */ 'c', 'r', 'j', 'n', 'l', 9, 0,
  /* 2523 */ 'c', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 2531 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 2540 */ 'c', 'l', 'r', 'j', 'n', 'l', 9, 0,
  /* 2548 */ 'l', 'o', 'c', 'r', 'n', 'l', 9, 0,
  /* 2556 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 9, 0,
  /* 2565 */ 'l', 'a', 'r', 'l', 9, 0,
  /* 2571 */ 'l', 'o', 'c', 'r', 'l', 9, 0,
  /* 2578 */ 'p', 'f', 'd', 'r', 'l', 9, 0,
  /* 2585 */ 'c', 'g', 'f', 'r', 'l', 9, 0,
  /* 2592 */ 'c', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 2600 */ 'l', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 2608 */ 'l', 'o', 'c', 'g', 'r', 'l', 9, 0,
  /* 2616 */ 'c', 'l', 'g', 'r', 'l', 9, 0,
  /* 2623 */ 's', 't', 'g', 'r', 'l', 9, 0,
  /* 2630 */ 'c', 'h', 'r', 'l', 9, 0,
  /* 2636 */ 'c', 'g', 'h', 'r', 'l', 9, 0,
  /* 2643 */ 'c', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 2651 */ 'l', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 2659 */ 'c', 'l', 'h', 'r', 'l', 9, 0,
  /* 2666 */ 'l', 'l', 'h', 'r', 'l', 9, 0,
  /* 2673 */ 's', 't', 'h', 'r', 'l', 9, 0,
  /* 2680 */ 'c', 'l', 'r', 'l', 9, 0,
  /* 2686 */ 's', 'r', 'l', 9, 0,
  /* 2691 */ 's', 't', 'r', 'l', 9, 0,
  /* 2697 */ 'b', 'r', 'a', 's', 'l', 9, 0,
  /* 2704 */ 'i', 'p', 'm', 9, 0,
  /* 2709 */ 't', 'm', 9, 0,
  /* 2713 */ 'n', 9, 0,
  /* 2716 */ 'l', 'o', 'c', 'o', 9, 0,
  /* 2722 */ 's', 't', 'o', 'c', 'o', 9, 0,
  /* 2729 */ 'l', 'o', 'c', 'g', 'o', 9, 0,
  /* 2736 */ 's', 't', 'o', 'c', 'g', 'o', 9, 0,
  /* 2744 */ 'j', 'g', 'o', 9, 0,
  /* 2749 */ 'j', 'o', 9, 0,
  /* 2753 */ 'l', 'o', 'c', 'n', 'o', 9, 0,
  /* 2760 */ 's', 't', 'o', 'c', 'n', 'o', 9, 0,
  /* 2768 */ 'l', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 2776 */ 's', 't', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 2785 */ 'j', 'g', 'n', 'o', 9, 0,
  /* 2791 */ 'j', 'n', 'o', 9, 0,
  /* 2796 */ 'l', 'o', 'c', 'r', 'n', 'o', 9, 0,
  /* 2804 */ 'l', 'o', 'c', 'g', 'r', 'n', 'o', 9, 0,
  /* 2813 */ 'l', 'o', 'c', 'r', 'o', 9, 0,
  /* 2820 */ 'l', 'o', 'c', 'g', 'r', 'o', 9, 0,
  /* 2828 */ 'e', 'a', 'r', 9, 0,
  /* 2833 */ 'm', 'a', 'd', 'b', 'r', 9, 0,
  /* 2840 */ 'l', 'c', 'd', 'b', 'r', 9, 0,
  /* 2847 */ 'd', 'd', 'b', 'r', 9, 0,
  /* 2853 */ 'l', 'e', 'd', 'b', 'r', 9, 0,
  /* 2860 */ 'c', 'f', 'd', 'b', 'r', 9, 0,
  /* 2867 */ 'c', 'g', 'd', 'b', 'r', 9, 0,
  /* 2874 */ 'f', 'i', 'd', 'b', 'r', 9, 0,
  /* 2881 */ 'm', 'd', 'b', 'r', 9, 0,
  /* 2887 */ 'l', 'n', 'd', 'b', 'r', 9, 0,
  /* 2894 */ 'l', 'p', 'd', 'b', 'r', 9, 0,
  /* 2901 */ 's', 'q', 'd', 'b', 'r', 9, 0,
  /* 2908 */ 'm', 's', 'd', 'b', 'r', 9, 0,
  /* 2915 */ 'l', 't', 'd', 'b', 'r', 9, 0,
  /* 2922 */ 'l', 'x', 'd', 'b', 'r', 9, 0,
  /* 2929 */ 'm', 'x', 'd', 'b', 'r', 9, 0,
  /* 2936 */ 'm', 'a', 'e', 'b', 'r', 9, 0,
  /* 2943 */ 'l', 'c', 'e', 'b', 'r', 9, 0,
  /* 2950 */ 'l', 'd', 'e', 'b', 'r', 9, 0,
  /* 2957 */ 'm', 'd', 'e', 'b', 'r', 9, 0,
  /* 2964 */ 'm', 'e', 'e', 'b', 'r', 9, 0,
  /* 2971 */ 'c', 'f', 'e', 'b', 'r', 9, 0,
  /* 2978 */ 'c', 'g', 'e', 'b', 'r', 9, 0,
  /* 2985 */ 'f', 'i', 'e', 'b', 'r', 9, 0,
  /* 2992 */ 'l', 'n', 'e', 'b', 'r', 9, 0,
  /* 2999 */ 'l', 'p', 'e', 'b', 'r', 9, 0,
  /* 3006 */ 's', 'q', 'e', 'b', 'r', 9, 0,
  /* 3013 */ 'm', 's', 'e', 'b', 'r', 9, 0,
  /* 3020 */ 'l', 't', 'e', 'b', 'r', 9, 0,
  /* 3027 */ 'l', 'x', 'e', 'b', 'r', 9, 0,
  /* 3034 */ 'c', 'd', 'f', 'b', 'r', 9, 0,
  /* 3041 */ 'c', 'e', 'f', 'b', 'r', 9, 0,
  /* 3048 */ 'c', 'x', 'f', 'b', 'r', 9, 0,
  /* 3055 */ 'c', 'd', 'g', 'b', 'r', 9, 0,
  /* 3062 */ 'c', 'e', 'g', 'b', 'r', 9, 0,
  /* 3069 */ 'l', 'g', 'b', 'r', 9, 0,
  /* 3075 */ 'c', 'x', 'g', 'b', 'r', 9, 0,
  /* 3082 */ 's', 'l', 'b', 'r', 9, 0,
  /* 3088 */ 'a', 'x', 'b', 'r', 9, 0,
  /* 3094 */ 'l', 'c', 'x', 'b', 'r', 9, 0,
  /* 3101 */ 'l', 'd', 'x', 'b', 'r', 9, 0,
  /* 3108 */ 'l', 'e', 'x', 'b', 'r', 9, 0,
  /* 3115 */ 'c', 'f', 'x', 'b', 'r', 9, 0,
  /* 3122 */ 'c', 'g', 'x', 'b', 'r', 9, 0,
  /* 3129 */ 'f', 'i', 'x', 'b', 'r', 9, 0,
  /* 3136 */ 'm', 'x', 'b', 'r', 9, 0,
  /* 3142 */ 'l', 'n', 'x', 'b', 'r', 9, 0,
  /* 3149 */ 'l', 'p', 'x', 'b', 'r', 9, 0,
  /* 3156 */ 's', 'q', 'x', 'b', 'r', 9, 0,
  /* 3163 */ 's', 'x', 'b', 'r', 9, 0,
  /* 3169 */ 'l', 't', 'x', 'b', 'r', 9, 0,
  /* 3176 */ 'b', 'c', 'r', 9, 0,
  /* 3181 */ 'l', 'l', 'g', 'c', 'r', 9, 0,
  /* 3188 */ 'a', 'l', 'c', 'r', 9, 0,
  /* 3194 */ 'l', 'l', 'c', 'r', 9, 0,
  /* 3200 */ 'l', 'o', 'c', 'r', 9, 0,
  /* 3206 */ 'l', 'g', 'd', 'r', 9, 0,
  /* 3212 */ 'l', 'd', 'r', 9, 0,
  /* 3217 */ 'c', 'p', 's', 'd', 'r', 9, 0,
  /* 3224 */ 'l', 'z', 'd', 'r', 9, 0,
  /* 3230 */ 'b', 'e', 'r', 9, 0,
  /* 3235 */ 'b', 'h', 'e', 'r', 9, 0,
  /* 3241 */ 'b', 'n', 'h', 'e', 'r', 9, 0,
  /* 3248 */ 'b', 'l', 'e', 'r', 9, 0,
  /* 3254 */ 'b', 'n', 'l', 'e', 'r', 9, 0,
  /* 3261 */ 'b', 'n', 'e', 'r', 9, 0,
  /* 3267 */ 'l', 'z', 'e', 'r', 9, 0,
  /* 3273 */ 'a', 'g', 'f', 'r', 9, 0,
  /* 3279 */ 'l', 'c', 'g', 'f', 'r', 9, 0,
  /* 3286 */ 'a', 'l', 'g', 'f', 'r', 9, 0,
  /* 3293 */ 'c', 'l', 'g', 'f', 'r', 9, 0,
  /* 3300 */ 'l', 'l', 'g', 'f', 'r', 9, 0,
  /* 3307 */ 's', 'l', 'g', 'f', 'r', 9, 0,
  /* 3314 */ 'l', 'n', 'g', 'f', 'r', 9, 0,
  /* 3321 */ 'l', 'p', 'g', 'f', 'r', 9, 0,
  /* 3328 */ 'd', 's', 'g', 'f', 'r', 9, 0,
  /* 3335 */ 'm', 's', 'g', 'f', 'r', 9, 0,
  /* 3342 */ 'l', 't', 'g', 'f', 'r', 9, 0,
  /* 3349 */ 'a', 'g', 'r', 9, 0,
  /* 3354 */ 's', 'l', 'b', 'g', 'r', 9, 0,
  /* 3361 */ 'a', 'l', 'c', 'g', 'r', 9, 0,
  /* 3368 */ 'l', 'o', 'c', 'g', 'r', 9, 0,
  /* 3375 */ 'l', 'd', 'g', 'r', 9, 0,
  /* 3381 */ 'a', 'l', 'g', 'r', 9, 0,
  /* 3387 */ 'c', 'l', 'g', 'r', 9, 0,
  /* 3393 */ 'd', 'l', 'g', 'r', 9, 0,
  /* 3399 */ 'm', 'l', 'g', 'r', 9, 0,
  /* 3405 */ 's', 'l', 'g', 'r', 9, 0,
  /* 3411 */ 'l', 'n', 'g', 'r', 9, 0,
  /* 3417 */ 'f', 'l', 'o', 'g', 'r', 9, 0,
  /* 3424 */ 'l', 'p', 'g', 'r', 9, 0,
  /* 3430 */ 'd', 's', 'g', 'r', 9, 0,
  /* 3436 */ 'm', 's', 'g', 'r', 9, 0,
  /* 3442 */ 'l', 't', 'g', 'r', 9, 0,
  /* 3448 */ 'l', 'r', 'v', 'g', 'r', 9, 0,
  /* 3455 */ 'x', 'g', 'r', 9, 0,
  /* 3460 */ 'b', 'h', 'r', 9, 0,
  /* 3465 */ 'l', 'l', 'g', 'h', 'r', 9, 0,
  /* 3472 */ 'b', 'l', 'h', 'r', 9, 0,
  /* 3478 */ 'l', 'l', 'h', 'r', 9, 0,
  /* 3484 */ 'b', 'n', 'l', 'h', 'r', 9, 0,
  /* 3491 */ 'b', 'n', 'h', 'r', 9, 0,
  /* 3497 */ 'a', 'l', 'r', 9, 0,
  /* 3502 */ 'b', 'l', 'r', 9, 0,
  /* 3507 */ 'c', 'l', 'r', 9, 0,
  /* 3512 */ 'd', 'l', 'r', 9, 0,
  /* 3517 */ 'b', 'n', 'l', 'r', 9, 0,
  /* 3523 */ 's', 'l', 'r', 9, 0,
  /* 3528 */ 'l', 'n', 'r', 9, 0,
  /* 3533 */ 'b', 'o', 'r', 9, 0,
  /* 3538 */ 'b', 'n', 'o', 'r', 9, 0,
  /* 3544 */ 'l', 'p', 'r', 9, 0,
  /* 3549 */ 'b', 'a', 's', 'r', 9, 0,
  /* 3555 */ 'm', 's', 'r', 9, 0,
  /* 3560 */ 'l', 't', 'r', 9, 0,
  /* 3565 */ 'l', 'r', 'v', 'r', 9, 0,
  /* 3571 */ 'l', 'x', 'r', 9, 0,
  /* 3576 */ 'l', 'z', 'x', 'r', 9, 0,
  /* 3582 */ 'b', 'r', 'a', 's', 9, 0,
  /* 3588 */ 'c', 's', 9, 0,
  /* 3592 */ 'm', 's', 9, 0,
  /* 3596 */ 'b', 'r', 'c', 't', 9, 0,
  /* 3602 */ 'l', 't', 9, 0,
  /* 3606 */ 'c', 'l', 's', 't', 9, 0,
  /* 3612 */ 's', 'r', 's', 't', 9, 0,
  /* 3618 */ 'm', 'v', 's', 't', 9, 0,
  /* 3624 */ 'l', 'r', 'v', 9, 0,
  /* 3629 */ 's', 't', 'r', 'v', 9, 0,
  /* 3635 */ 'x', 9, 0,
  /* 3638 */ 'l', 'a', 'y', 9, 0,
  /* 3643 */ 'i', 'c', 'y', 9, 0,
  /* 3648 */ 's', 't', 'c', 'y', 9, 0,
  /* 3654 */ 'l', 'd', 'y', 9, 0,
  /* 3659 */ 's', 't', 'd', 'y', 9, 0,
  /* 3665 */ 'l', 'e', 'y', 9, 0,
  /* 3670 */ 's', 't', 'e', 'y', 9, 0,
  /* 3676 */ 'a', 'h', 'y', 9, 0,
  /* 3681 */ 'c', 'h', 'y', 9, 0,
  /* 3686 */ 'l', 'h', 'y', 9, 0,
  /* 3691 */ 'm', 'h', 'y', 9, 0,
  /* 3696 */ 's', 'h', 'y', 9, 0,
  /* 3701 */ 's', 't', 'h', 'y', 9, 0,
  /* 3707 */ 'c', 'l', 'i', 'y', 9, 0,
  /* 3713 */ 'n', 'i', 'y', 9, 0,
  /* 3718 */ 'o', 'i', 'y', 9, 0,
  /* 3723 */ 'm', 'v', 'i', 'y', 9, 0,
  /* 3729 */ 'x', 'i', 'y', 9, 0,
  /* 3734 */ 'a', 'l', 'y', 9, 0,
  /* 3739 */ 'c', 'l', 'y', 9, 0,
  /* 3744 */ 's', 'l', 'y', 9, 0,
  /* 3749 */ 't', 'm', 'y', 9, 0,
  /* 3754 */ 'n', 'y', 9, 0,
  /* 3758 */ 'o', 'y', 9, 0,
  /* 3762 */ 'c', 's', 'y', 9, 0,
  /* 3767 */ 'm', 's', 'y', 9, 0,
  /* 3772 */ 's', 't', 'y', 9, 0,
  /* 3777 */ 'x', 'y', 9, 0,
  /* 3781 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 3794 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 3801 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 3811 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 3826 */ 'l', 'o', 'c', 0,
  /* 3830 */ 's', 't', 'o', 'c', 0,
  /* 3835 */ 'l', 'o', 'c', 'g', 0,
  /* 3840 */ 's', 't', 'o', 'c', 'g', 0,
  /* 3846 */ 'j', 'g', 0,
  /* 3849 */ 'c', 'i', 'j', 0,
  /* 3853 */ 'c', 'g', 'i', 'j', 0,
  /* 3858 */ 'c', 'l', 'g', 'i', 'j', 0,
  /* 3864 */ 'c', 'l', 'i', 'j', 0,
  /* 3869 */ 'c', 'r', 'j', 0,
  /* 3873 */ 'c', 'g', 'r', 'j', 0,
  /* 3878 */ 'c', 'l', 'g', 'r', 'j', 0,
  /* 3884 */ 'c', 'l', 'r', 'j', 0,
  /* 3889 */ 'l', 'o', 'c', 'r', 0,
  /* 3894 */ 'l', 'o', 'c', 'g', 'r', 0,
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint32_t Bits = OpInfo[MI->getOpcode()];
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 4095)-1;


  // Fragment 0 encoded into 4 bits for 11 unique commands.
  switch ((Bits >> 12) & 15) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END
    return;
    break;
  case 1:
    // A, ADB, ADBR, AEB, AEBR, AFI, AG, AGF, AGFI, AGFR, AGHI, AGHIK, AGR, A...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // AGSI, ASI, CGHSI, CHHSI, CHSI, CLFHSI, CLGHSI, CLHHSI, CLI, CLIY, MVGH...
    printBDAddrOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 3:
    // AsmBCR, AsmBRC, AsmBRCL, PFD, PFDRL
    printU4ImmOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 4:
    // AsmEJ, AsmEJG, AsmHEJ, AsmHEJG, AsmHJ, AsmHJG, AsmLEJ, AsmLEJG, AsmLHJ...
    printPCRelOperand(MI, 0, O); 
    return;
    break;
  case 5:
    // BRC, BRCL
    printCond4Operand(MI, 1, O); 
    O << "\t"; 
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // CGIJ, CGRJ, CIJ, CLGIJ, CLGRJ, CLIJ, CLRJ, CRJ
    printCond4Operand(MI, 2, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    break;
  case 7:
    // CLC, MVC, NC, OC, XC
    printBDLAddrOperand(MI, 0, O); 
    O << ", "; 
    printBDAddrOperand(MI, 3, O); 
    return;
    break;
  case 8:
    // LOC, LOCG
    printCond4Operand(MI, 5, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printBDAddrOperand(MI, 2, O); 
    return;
    break;
  case 9:
    // LOCGR, LOCR
    printCond4Operand(MI, 3, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 10:
    // STOC, STOCG
    printCond4Operand(MI, 4, O); 
    O << "\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printBDAddrOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 1 encoded into 4 bits for 11 unique commands.
  switch ((Bits >> 16) & 15) {
  default:   // unreachable.
  case 0:
    // A, ADB, ADBR, AEB, AEBR, AFI, AG, AGF, AGFI, AGFR, AGHI, AGHIK, AGR, A...
    O << ", "; 
    break;
  case 1:
    // AGSI, ASI
    printS8ImmOperand(MI, 2, O); 
    return;
    break;
  case 2:
    // AsmBCR, CGRJ, CLGRJ, CLRJ, CRJ
    printOperand(MI, 1, O); 
    break;
  case 3:
    // AsmBRC, AsmBRCL, PFDRL
    printPCRelOperand(MI, 1, O); 
    return;
    break;
  case 4:
    // AsmEBR, AsmHBR, AsmHEBR, AsmLBR, AsmLEBR, AsmLHBR, AsmNEBR, AsmNHBR, A...
    return;
    break;
  case 5:
    // CGHSI, CHHSI, CHSI, MVGHI, MVHHI, MVHI
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // CGIJ, CIJ
    printS8ImmOperand(MI, 1, O); 
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 7:
    // CLFHSI, CLGHSI, CLHHSI
    printU16ImmOperand(MI, 2, O); 
    return;
    break;
  case 8:
    // CLGIJ, CLIJ
    printU8ImmOperand(MI, 1, O); 
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 9:
    // CLI, CLIY, MVI, MVIY, NI, NIY, OI, OIY, TM, TMY, XI, XIY
    printU8ImmOperand(MI, 2, O); 
    return;
    break;
  case 10:
    // PFD
    printBDXAddrOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 22 unique commands.
  switch ((Bits >> 20) & 31) {
  default:   // unreachable.
  case 0:
    // A, ADB, AEB, AG, AGF, AH, AHY, AL, ALC, ALCG, ALG, ALGF, ALY, AY, DDB,...
    printBDXAddrOperand(MI, 2, O); 
    return;
    break;
  case 1:
    // ADBR, AEBR, AGFR, AGR, ALCGR, ALCR, ALGFR, ALGR, ALR, AR, AXBR, AsmELO...
    printOperand(MI, 2, O); 
    break;
  case 2:
    // AFI, AGFI, AIH, MSFI, MSGFI
    printS32ImmOperand(MI, 2, O); 
    return;
    break;
  case 3:
    // AGHI, AHI, MGHI, MHI
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AsmCGRJ, AsmCLGR...
    printOperand(MI, 1, O); 
    break;
  case 5:
    // ALFI, ALGFI, NIHF, NILF, OIHF, OILF, SLFI, SLGFI, XIHF, XILF
    printU32ImmOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // AsmBCR
    return;
    break;
  case 7:
    // AsmCGIJ, AsmCIJ, AsmJEAltCGI, AsmJEAltCI, AsmJECGI, AsmJECI, AsmJHAltC...
    printS8ImmOperand(MI, 1, O); 
    O << ", "; 
    break;
  case 8:
    // AsmCLGIJ, AsmCLIJ, AsmJEAltCLGI, AsmJEAltCLI, AsmJECLGI, AsmJECLI, Asm...
    printU8ImmOperand(MI, 1, O); 
    O << ", "; 
    break;
  case 9:
    // AsmELOC, AsmELOCG, AsmHELOC, AsmHELOCG, AsmHLOC, AsmHLOCG, AsmLELOC, A...
    printBDAddrOperand(MI, 2, O); 
    break;
  case 10:
    // AsmESTOC, AsmESTOCG, AsmHESTOC, AsmHESTOCG, AsmHSTOC, AsmHSTOCG, AsmLE...
    printBDAddrOperand(MI, 1, O); 
    break;
  case 11:
    // BRAS, BRASL, CGFRL, CGHRL, CGRL, CHRL, CLGFRL, CLGHRL, CLGRL, CLHRL, C...
    printPCRelOperand(MI, 1, O); 
    return;
    break;
  case 12:
    // BRCT, BRCTG
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 13:
    // C, CDB, CEB, CG, CGF, CGH, CH, CHF, CHY, CL, CLG, CLGF, CLHF, CLY, CY,...
    printBDXAddrOperand(MI, 1, O); 
    return;
    break;
  case 14:
    // CFDBR, CFEBR, CFXBR, CGDBR, CGEBR, CGXBR, FIDBR, FIDBRA, FIEBR, FIEBRA...
    printU4ImmOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    break;
  case 15:
    // CFI, CGFI, CIH, LGFI
    printS32ImmOperand(MI, 1, O); 
    return;
    break;
  case 16:
    // CGHI, CHI, LGHI, LHI
    printS16ImmOperand(MI, 1, O); 
    return;
    break;
  case 17:
    // CGRJ, CLGRJ, CLRJ, CRJ
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 18:
    // CLFI, CLGFI, CLIH, IIHF, IILF, LLIHF, LLILF
    printU32ImmOperand(MI, 1, O); 
    return;
    break;
  case 19:
    // EAR
    printAccessRegOperand(MI, 1, O); 
    return;
    break;
  case 20:
    // IIHH, IIHL, IILH, IILL, NIHH, NIHL, NILH, NILL, OIHH, OIHL, OILH, OILL
    printU16ImmOperand(MI, 2, O); 
    return;
    break;
  case 21:
    // LLIHH, LLIHL, LLILH, LLILL, TMHH, TMHL, TMLH, TMLL
    printU16ImmOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 3 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 25) & 3) {
  default:   // unreachable.
  case 0:
    // ADBR, AEBR, AGFR, AGR, ALCGR, ALCR, ALGFR, ALGR, ALR, AR, AXBR, AsmELO...
    return;
    break;
  case 1:
    // AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AsmCGRJ, AsmCLGR...
    O << ", "; 
    break;
  case 2:
    // AsmCGIJ, AsmCIJ, AsmCLGIJ, AsmCLIJ
    printU4ImmOperand(MI, 2, O); 
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 3:
    // AsmJEAltCGI, AsmJEAltCI, AsmJEAltCLGI, AsmJEAltCLI, AsmJECGI, AsmJECI,...
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 4 encoded into 4 bits for 11 unique commands.
  switch ((Bits >> 27) & 15) {
  default:   // unreachable.
  case 0:
    // AGHIK, AHIK, ALGHSIK, ALHSIK
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 1:
    // AGRK, ALGRK, ALRK, ARK, CPSDRdd, CPSDRds, CPSDRsd, CPSDRss, NGRK, NRK,...
    printOperand(MI, 2, O); 
    return;
    break;
  case 2:
    // AsmCGRJ, AsmCLGRJ, AsmCLRJ, AsmCRJ
    printU4ImmOperand(MI, 2, O); 
    O << ", "; 
    printPCRelOperand(MI, 3, O); 
    return;
    break;
  case 3:
    // AsmJEAltCGR, AsmJEAltCLGR, AsmJEAltCLR, AsmJEAltCR, AsmJECGR, AsmJECLG...
    printPCRelOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // AsmLOC, AsmLOCG
    printU4ImmOperand(MI, 4, O); 
    return;
    break;
  case 5:
    // AsmLOCGR, AsmLOCR, AsmSTOC, AsmSTOCG, FIDBRA, FIEBRA, FIXBRA
    printU4ImmOperand(MI, 3, O); 
    return;
    break;
  case 6:
    // CS, CSG, CSY
    printBDAddrOperand(MI, 3, O); 
    return;
    break;
  case 7:
    // LMG, RLL, RLLG, SLLG, SLLK, SRAG, SRAK, SRLG, SRLK, STMG
    printBDAddrOperand(MI, 2, O); 
    return;
    break;
  case 8:
    // MADB, MAEB, MSDB, MSEB
    printBDXAddrOperand(MI, 3, O); 
    return;
    break;
  case 9:
    // MADBR, MAEBR, MSDBR, MSEBR
    printOperand(MI, 3, O); 
    return;
    break;
  case 10:
    // RISBG, RISBG32, RISBHG, RISBLG, RNSBG, ROSBG, RXSBG
    printU8ImmOperand(MI, 3, O); 
    O << ", "; 
    printU8ImmOperand(MI, 4, O); 
    O << ", "; 
    printU6ImmOperand(MI, 5, O); 
    return;
    break;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *SystemZInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 98 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'f', '1', '0', 0,
  /* 4 */ 'r', '1', '0', 0,
  /* 8 */ 'f', '0', 0,
  /* 11 */ 'r', '0', 0,
  /* 14 */ 'f', '1', '1', 0,
  /* 18 */ 'r', '1', '1', 0,
  /* 22 */ 'f', '1', 0,
  /* 25 */ 'r', '1', 0,
  /* 28 */ 'f', '1', '2', 0,
  /* 32 */ 'r', '1', '2', 0,
  /* 36 */ 'f', '2', 0,
  /* 39 */ 'r', '2', 0,
  /* 42 */ 'f', '1', '3', 0,
  /* 46 */ 'r', '1', '3', 0,
  /* 50 */ 'f', '3', 0,
  /* 53 */ 'r', '3', 0,
  /* 56 */ 'f', '1', '4', 0,
  /* 60 */ 'r', '1', '4', 0,
  /* 64 */ 'f', '4', 0,
  /* 67 */ 'r', '4', 0,
  /* 70 */ 'f', '1', '5', 0,
  /* 74 */ 'r', '1', '5', 0,
  /* 78 */ 'f', '5', 0,
  /* 81 */ 'r', '5', 0,
  /* 84 */ 'f', '6', 0,
  /* 87 */ 'r', '6', 0,
  /* 90 */ 'f', '7', 0,
  /* 93 */ 'r', '7', 0,
  /* 96 */ 'f', '8', 0,
  /* 99 */ 'r', '8', 0,
  /* 102 */ 'f', '9', 0,
  /* 105 */ 'r', '9', 0,
  /* 108 */ 'c', 'c', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    108, 8, 22, 36, 50, 64, 78, 84, 90, 96, 102, 0, 14, 28, 
    42, 56, 70, 8, 22, 64, 78, 96, 102, 28, 42, 8, 22, 36, 
    50, 64, 78, 84, 90, 96, 102, 0, 14, 28, 42, 56, 70, 11, 
    25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 18, 32, 46, 60, 
    74, 11, 25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 18, 32, 
    46, 60, 74, 11, 25, 39, 53, 67, 81, 87, 93, 99, 105, 4, 
    18, 32, 46, 60, 74, 11, 39, 67, 87, 99, 4, 32, 60, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool SystemZInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  return false;
}

#endif // PRINT_ALIAS_INSTR
