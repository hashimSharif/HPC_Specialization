/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Enum Values                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Mips {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    PATCHPOINT	= 18,
    ABSQ_S_PH	= 19,
    ABSQ_S_QB	= 20,
    ABSQ_S_W	= 21,
    ADD	= 22,
    ADDQH_PH	= 23,
    ADDQH_R_PH	= 24,
    ADDQH_R_W	= 25,
    ADDQH_W	= 26,
    ADDQ_PH	= 27,
    ADDQ_S_PH	= 28,
    ADDQ_S_W	= 29,
    ADDSC	= 30,
    ADDS_A_B	= 31,
    ADDS_A_D	= 32,
    ADDS_A_H	= 33,
    ADDS_A_W	= 34,
    ADDS_S_B	= 35,
    ADDS_S_D	= 36,
    ADDS_S_H	= 37,
    ADDS_S_W	= 38,
    ADDS_U_B	= 39,
    ADDS_U_D	= 40,
    ADDS_U_H	= 41,
    ADDS_U_W	= 42,
    ADDUH_QB	= 43,
    ADDUH_R_QB	= 44,
    ADDU_PH	= 45,
    ADDU_QB	= 46,
    ADDU_S_PH	= 47,
    ADDU_S_QB	= 48,
    ADDVI_B	= 49,
    ADDVI_D	= 50,
    ADDVI_H	= 51,
    ADDVI_W	= 52,
    ADDV_B	= 53,
    ADDV_D	= 54,
    ADDV_H	= 55,
    ADDV_W	= 56,
    ADDWC	= 57,
    ADD_A_B	= 58,
    ADD_A_D	= 59,
    ADD_A_H	= 60,
    ADD_A_W	= 61,
    ADD_MM	= 62,
    ADDi	= 63,
    ADDi_MM	= 64,
    ADDiu	= 65,
    ADDiu_MM	= 66,
    ADDu	= 67,
    ADDu_MM	= 68,
    ADJCALLSTACKDOWN	= 69,
    ADJCALLSTACKUP	= 70,
    AND	= 71,
    AND64	= 72,
    ANDI_B	= 73,
    AND_MM	= 74,
    AND_V	= 75,
    AND_V_D_PSEUDO	= 76,
    AND_V_H_PSEUDO	= 77,
    AND_V_W_PSEUDO	= 78,
    ANDi	= 79,
    ANDi64	= 80,
    ANDi_MM	= 81,
    APPEND	= 82,
    ASUB_S_B	= 83,
    ASUB_S_D	= 84,
    ASUB_S_H	= 85,
    ASUB_S_W	= 86,
    ASUB_U_B	= 87,
    ASUB_U_D	= 88,
    ASUB_U_H	= 89,
    ASUB_U_W	= 90,
    ATOMIC_CMP_SWAP_I16	= 91,
    ATOMIC_CMP_SWAP_I32	= 92,
    ATOMIC_CMP_SWAP_I64	= 93,
    ATOMIC_CMP_SWAP_I8	= 94,
    ATOMIC_LOAD_ADD_I16	= 95,
    ATOMIC_LOAD_ADD_I32	= 96,
    ATOMIC_LOAD_ADD_I64	= 97,
    ATOMIC_LOAD_ADD_I8	= 98,
    ATOMIC_LOAD_AND_I16	= 99,
    ATOMIC_LOAD_AND_I32	= 100,
    ATOMIC_LOAD_AND_I64	= 101,
    ATOMIC_LOAD_AND_I8	= 102,
    ATOMIC_LOAD_NAND_I16	= 103,
    ATOMIC_LOAD_NAND_I32	= 104,
    ATOMIC_LOAD_NAND_I64	= 105,
    ATOMIC_LOAD_NAND_I8	= 106,
    ATOMIC_LOAD_OR_I16	= 107,
    ATOMIC_LOAD_OR_I32	= 108,
    ATOMIC_LOAD_OR_I64	= 109,
    ATOMIC_LOAD_OR_I8	= 110,
    ATOMIC_LOAD_SUB_I16	= 111,
    ATOMIC_LOAD_SUB_I32	= 112,
    ATOMIC_LOAD_SUB_I64	= 113,
    ATOMIC_LOAD_SUB_I8	= 114,
    ATOMIC_LOAD_XOR_I16	= 115,
    ATOMIC_LOAD_XOR_I32	= 116,
    ATOMIC_LOAD_XOR_I64	= 117,
    ATOMIC_LOAD_XOR_I8	= 118,
    ATOMIC_SWAP_I16	= 119,
    ATOMIC_SWAP_I32	= 120,
    ATOMIC_SWAP_I64	= 121,
    ATOMIC_SWAP_I8	= 122,
    AVER_S_B	= 123,
    AVER_S_D	= 124,
    AVER_S_H	= 125,
    AVER_S_W	= 126,
    AVER_U_B	= 127,
    AVER_U_D	= 128,
    AVER_U_H	= 129,
    AVER_U_W	= 130,
    AVE_S_B	= 131,
    AVE_S_D	= 132,
    AVE_S_H	= 133,
    AVE_S_W	= 134,
    AVE_U_B	= 135,
    AVE_U_D	= 136,
    AVE_U_H	= 137,
    AVE_U_W	= 138,
    AddiuRxImmX16	= 139,
    AddiuRxPcImmX16	= 140,
    AddiuRxRxImm16	= 141,
    AddiuRxRxImmX16	= 142,
    AddiuRxRyOffMemX16	= 143,
    AddiuSpImm16	= 144,
    AddiuSpImmX16	= 145,
    AdduRxRyRz16	= 146,
    AndRxRxRy16	= 147,
    B	= 148,
    BALIGN	= 149,
    BAL_BR	= 150,
    BC1F	= 151,
    BC1T	= 152,
    BCLRI_B	= 153,
    BCLRI_D	= 154,
    BCLRI_H	= 155,
    BCLRI_W	= 156,
    BCLR_B	= 157,
    BCLR_D	= 158,
    BCLR_H	= 159,
    BCLR_W	= 160,
    BEQ	= 161,
    BEQ64	= 162,
    BEQ_MM	= 163,
    BGEZ	= 164,
    BGEZ64	= 165,
    BGEZAL	= 166,
    BGEZAL_MM	= 167,
    BGEZ_MM	= 168,
    BGTZ	= 169,
    BGTZ64	= 170,
    BGTZ_MM	= 171,
    BINSLI_B	= 172,
    BINSLI_D	= 173,
    BINSLI_H	= 174,
    BINSLI_W	= 175,
    BINSL_B	= 176,
    BINSL_D	= 177,
    BINSL_H	= 178,
    BINSL_W	= 179,
    BINSRI_B	= 180,
    BINSRI_D	= 181,
    BINSRI_H	= 182,
    BINSRI_W	= 183,
    BINSR_B	= 184,
    BINSR_D	= 185,
    BINSR_H	= 186,
    BINSR_W	= 187,
    BITREV	= 188,
    BLEZ	= 189,
    BLEZ64	= 190,
    BLEZ_MM	= 191,
    BLTZ	= 192,
    BLTZ64	= 193,
    BLTZAL	= 194,
    BLTZAL_MM	= 195,
    BLTZ_MM	= 196,
    BMNZI_B	= 197,
    BMNZ_V	= 198,
    BMZI_B	= 199,
    BMZ_V	= 200,
    BNE	= 201,
    BNE64	= 202,
    BNEGI_B	= 203,
    BNEGI_D	= 204,
    BNEGI_H	= 205,
    BNEGI_W	= 206,
    BNEG_B	= 207,
    BNEG_D	= 208,
    BNEG_H	= 209,
    BNEG_W	= 210,
    BNE_MM	= 211,
    BNZ_B	= 212,
    BNZ_D	= 213,
    BNZ_H	= 214,
    BNZ_V	= 215,
    BNZ_W	= 216,
    BPOSGE32	= 217,
    BPOSGE32_PSEUDO	= 218,
    BREAK	= 219,
    BSELI_B	= 220,
    BSEL_D_PSEUDO	= 221,
    BSEL_FD_PSEUDO	= 222,
    BSEL_FW_PSEUDO	= 223,
    BSEL_H_PSEUDO	= 224,
    BSEL_V	= 225,
    BSEL_W_PSEUDO	= 226,
    BSETI_B	= 227,
    BSETI_D	= 228,
    BSETI_H	= 229,
    BSETI_W	= 230,
    BSET_B	= 231,
    BSET_D	= 232,
    BSET_H	= 233,
    BSET_W	= 234,
    BZ_B	= 235,
    BZ_D	= 236,
    BZ_H	= 237,
    BZ_V	= 238,
    BZ_W	= 239,
    BeqzRxImm16	= 240,
    BeqzRxImmX16	= 241,
    Bimm16	= 242,
    BimmX16	= 243,
    BnezRxImm16	= 244,
    BnezRxImmX16	= 245,
    Break16	= 246,
    Bteqz16	= 247,
    BteqzT8CmpX16	= 248,
    BteqzT8CmpiX16	= 249,
    BteqzT8SltX16	= 250,
    BteqzT8SltiX16	= 251,
    BteqzT8SltiuX16	= 252,
    BteqzT8SltuX16	= 253,
    BteqzX16	= 254,
    Btnez16	= 255,
    BtnezT8CmpX16	= 256,
    BtnezT8CmpiX16	= 257,
    BtnezT8SltX16	= 258,
    BtnezT8SltiX16	= 259,
    BtnezT8SltiuX16	= 260,
    BtnezT8SltuX16	= 261,
    BtnezX16	= 262,
    BuildPairF64	= 263,
    BuildPairF64_64	= 264,
    CEIL_L_D64	= 265,
    CEIL_L_S	= 266,
    CEIL_W_D32	= 267,
    CEIL_W_D64	= 268,
    CEIL_W_S	= 269,
    CEQI_B	= 270,
    CEQI_D	= 271,
    CEQI_H	= 272,
    CEQI_W	= 273,
    CEQ_B	= 274,
    CEQ_D	= 275,
    CEQ_H	= 276,
    CEQ_W	= 277,
    CFC1	= 278,
    CFCMSA	= 279,
    CLEI_S_B	= 280,
    CLEI_S_D	= 281,
    CLEI_S_H	= 282,
    CLEI_S_W	= 283,
    CLEI_U_B	= 284,
    CLEI_U_D	= 285,
    CLEI_U_H	= 286,
    CLEI_U_W	= 287,
    CLE_S_B	= 288,
    CLE_S_D	= 289,
    CLE_S_H	= 290,
    CLE_S_W	= 291,
    CLE_U_B	= 292,
    CLE_U_D	= 293,
    CLE_U_H	= 294,
    CLE_U_W	= 295,
    CLO	= 296,
    CLO_MM	= 297,
    CLTI_S_B	= 298,
    CLTI_S_D	= 299,
    CLTI_S_H	= 300,
    CLTI_S_W	= 301,
    CLTI_U_B	= 302,
    CLTI_U_D	= 303,
    CLTI_U_H	= 304,
    CLTI_U_W	= 305,
    CLT_S_B	= 306,
    CLT_S_D	= 307,
    CLT_S_H	= 308,
    CLT_S_W	= 309,
    CLT_U_B	= 310,
    CLT_U_D	= 311,
    CLT_U_H	= 312,
    CLT_U_W	= 313,
    CLZ	= 314,
    CLZ_MM	= 315,
    CMPGDU_EQ_QB	= 316,
    CMPGDU_LE_QB	= 317,
    CMPGDU_LT_QB	= 318,
    CMPGU_EQ_QB	= 319,
    CMPGU_LE_QB	= 320,
    CMPGU_LT_QB	= 321,
    CMPU_EQ_QB	= 322,
    CMPU_LE_QB	= 323,
    CMPU_LT_QB	= 324,
    CMP_EQ_PH	= 325,
    CMP_LE_PH	= 326,
    CMP_LT_PH	= 327,
    CONSTPOOL_ENTRY	= 328,
    COPY_FD_PSEUDO	= 329,
    COPY_FW_PSEUDO	= 330,
    COPY_S_B	= 331,
    COPY_S_H	= 332,
    COPY_S_W	= 333,
    COPY_U_B	= 334,
    COPY_U_H	= 335,
    COPY_U_W	= 336,
    CTC1	= 337,
    CTCMSA	= 338,
    CVT_D32_S	= 339,
    CVT_D32_W	= 340,
    CVT_D64_L	= 341,
    CVT_D64_S	= 342,
    CVT_D64_W	= 343,
    CVT_L_D64	= 344,
    CVT_L_S	= 345,
    CVT_S_D32	= 346,
    CVT_S_D64	= 347,
    CVT_S_L	= 348,
    CVT_S_W	= 349,
    CVT_W_D32	= 350,
    CVT_W_D64	= 351,
    CVT_W_S	= 352,
    C_EQ_D32	= 353,
    C_EQ_D64	= 354,
    C_EQ_S	= 355,
    C_F_D32	= 356,
    C_F_D64	= 357,
    C_F_S	= 358,
    C_LE_D32	= 359,
    C_LE_D64	= 360,
    C_LE_S	= 361,
    C_LT_D32	= 362,
    C_LT_D64	= 363,
    C_LT_S	= 364,
    C_NGE_D32	= 365,
    C_NGE_D64	= 366,
    C_NGE_S	= 367,
    C_NGLE_D32	= 368,
    C_NGLE_D64	= 369,
    C_NGLE_S	= 370,
    C_NGL_D32	= 371,
    C_NGL_D64	= 372,
    C_NGL_S	= 373,
    C_NGT_D32	= 374,
    C_NGT_D64	= 375,
    C_NGT_S	= 376,
    C_OLE_D32	= 377,
    C_OLE_D64	= 378,
    C_OLE_S	= 379,
    C_OLT_D32	= 380,
    C_OLT_D64	= 381,
    C_OLT_S	= 382,
    C_SEQ_D32	= 383,
    C_SEQ_D64	= 384,
    C_SEQ_S	= 385,
    C_SF_D32	= 386,
    C_SF_D64	= 387,
    C_SF_S	= 388,
    C_UEQ_D32	= 389,
    C_UEQ_D64	= 390,
    C_UEQ_S	= 391,
    C_ULE_D32	= 392,
    C_ULE_D64	= 393,
    C_ULE_S	= 394,
    C_ULT_D32	= 395,
    C_ULT_D64	= 396,
    C_ULT_S	= 397,
    C_UN_D32	= 398,
    C_UN_D64	= 399,
    C_UN_S	= 400,
    CmpRxRy16	= 401,
    CmpiRxImm16	= 402,
    CmpiRxImmX16	= 403,
    Constant32	= 404,
    DADD	= 405,
    DADDi	= 406,
    DADDiu	= 407,
    DADDu	= 408,
    DCLO	= 409,
    DCLZ	= 410,
    DERET	= 411,
    DEXT	= 412,
    DEXTM	= 413,
    DEXTU	= 414,
    DI	= 415,
    DINS	= 416,
    DINSM	= 417,
    DINSU	= 418,
    DIV_S_B	= 419,
    DIV_S_D	= 420,
    DIV_S_H	= 421,
    DIV_S_W	= 422,
    DIV_U_B	= 423,
    DIV_U_D	= 424,
    DIV_U_H	= 425,
    DIV_U_W	= 426,
    DMFC0	= 427,
    DMFC1	= 428,
    DMFC2	= 429,
    DMTC0	= 430,
    DMTC1	= 431,
    DMTC2	= 432,
    DMULT	= 433,
    DMULTu	= 434,
    DOTP_S_D	= 435,
    DOTP_S_H	= 436,
    DOTP_S_W	= 437,
    DOTP_U_D	= 438,
    DOTP_U_H	= 439,
    DOTP_U_W	= 440,
    DPADD_S_D	= 441,
    DPADD_S_H	= 442,
    DPADD_S_W	= 443,
    DPADD_U_D	= 444,
    DPADD_U_H	= 445,
    DPADD_U_W	= 446,
    DPAQX_SA_W_PH	= 447,
    DPAQX_S_W_PH	= 448,
    DPAQ_SA_L_W	= 449,
    DPAQ_S_W_PH	= 450,
    DPAU_H_QBL	= 451,
    DPAU_H_QBR	= 452,
    DPAX_W_PH	= 453,
    DPA_W_PH	= 454,
    DPSQX_SA_W_PH	= 455,
    DPSQX_S_W_PH	= 456,
    DPSQ_SA_L_W	= 457,
    DPSQ_S_W_PH	= 458,
    DPSUB_S_D	= 459,
    DPSUB_S_H	= 460,
    DPSUB_S_W	= 461,
    DPSUB_U_D	= 462,
    DPSUB_U_H	= 463,
    DPSUB_U_W	= 464,
    DPSU_H_QBL	= 465,
    DPSU_H_QBR	= 466,
    DPSX_W_PH	= 467,
    DPS_W_PH	= 468,
    DROTR	= 469,
    DROTR32	= 470,
    DROTRV	= 471,
    DSBH	= 472,
    DSDIV	= 473,
    DSHD	= 474,
    DSLL	= 475,
    DSLL32	= 476,
    DSLL64_32	= 477,
    DSLLV	= 478,
    DSRA	= 479,
    DSRA32	= 480,
    DSRAV	= 481,
    DSRL	= 482,
    DSRL32	= 483,
    DSRLV	= 484,
    DSUBu	= 485,
    DUDIV	= 486,
    DivRxRy16	= 487,
    DivuRxRy16	= 488,
    EI	= 489,
    ERET	= 490,
    EXT	= 491,
    EXTP	= 492,
    EXTPDP	= 493,
    EXTPDPV	= 494,
    EXTPV	= 495,
    EXTRV_RS_W	= 496,
    EXTRV_R_W	= 497,
    EXTRV_S_H	= 498,
    EXTRV_W	= 499,
    EXTR_RS_W	= 500,
    EXTR_R_W	= 501,
    EXTR_S_H	= 502,
    EXTR_W	= 503,
    EXT_MM	= 504,
    ExtractElementF64	= 505,
    ExtractElementF64_64	= 506,
    FABS_D	= 507,
    FABS_D32	= 508,
    FABS_D64	= 509,
    FABS_S	= 510,
    FABS_W	= 511,
    FADD_D	= 512,
    FADD_D32	= 513,
    FADD_D64	= 514,
    FADD_S	= 515,
    FADD_W	= 516,
    FCAF_D	= 517,
    FCAF_W	= 518,
    FCEQ_D	= 519,
    FCEQ_W	= 520,
    FCLASS_D	= 521,
    FCLASS_W	= 522,
    FCLE_D	= 523,
    FCLE_W	= 524,
    FCLT_D	= 525,
    FCLT_W	= 526,
    FCMP_D32	= 527,
    FCMP_D64	= 528,
    FCMP_S32	= 529,
    FCNE_D	= 530,
    FCNE_W	= 531,
    FCOR_D	= 532,
    FCOR_W	= 533,
    FCUEQ_D	= 534,
    FCUEQ_W	= 535,
    FCULE_D	= 536,
    FCULE_W	= 537,
    FCULT_D	= 538,
    FCULT_W	= 539,
    FCUNE_D	= 540,
    FCUNE_W	= 541,
    FCUN_D	= 542,
    FCUN_W	= 543,
    FDIV_D	= 544,
    FDIV_D32	= 545,
    FDIV_D64	= 546,
    FDIV_S	= 547,
    FDIV_W	= 548,
    FEXDO_H	= 549,
    FEXDO_W	= 550,
    FEXP2_D	= 551,
    FEXP2_D_1_PSEUDO	= 552,
    FEXP2_W	= 553,
    FEXP2_W_1_PSEUDO	= 554,
    FEXUPL_D	= 555,
    FEXUPL_W	= 556,
    FEXUPR_D	= 557,
    FEXUPR_W	= 558,
    FFINT_S_D	= 559,
    FFINT_S_W	= 560,
    FFINT_U_D	= 561,
    FFINT_U_W	= 562,
    FFQL_D	= 563,
    FFQL_W	= 564,
    FFQR_D	= 565,
    FFQR_W	= 566,
    FILL_B	= 567,
    FILL_FD_PSEUDO	= 568,
    FILL_FW_PSEUDO	= 569,
    FILL_H	= 570,
    FILL_W	= 571,
    FLOG2_D	= 572,
    FLOG2_W	= 573,
    FLOOR_L_D64	= 574,
    FLOOR_L_S	= 575,
    FLOOR_W_D32	= 576,
    FLOOR_W_D64	= 577,
    FLOOR_W_S	= 578,
    FMADD_D	= 579,
    FMADD_W	= 580,
    FMAX_A_D	= 581,
    FMAX_A_W	= 582,
    FMAX_D	= 583,
    FMAX_W	= 584,
    FMIN_A_D	= 585,
    FMIN_A_W	= 586,
    FMIN_D	= 587,
    FMIN_W	= 588,
    FMOV_D32	= 589,
    FMOV_D64	= 590,
    FMOV_S	= 591,
    FMSUB_D	= 592,
    FMSUB_W	= 593,
    FMUL_D	= 594,
    FMUL_D32	= 595,
    FMUL_D64	= 596,
    FMUL_S	= 597,
    FMUL_W	= 598,
    FNEG_D32	= 599,
    FNEG_D64	= 600,
    FNEG_S	= 601,
    FRCP_D	= 602,
    FRCP_W	= 603,
    FRINT_D	= 604,
    FRINT_W	= 605,
    FRSQRT_D	= 606,
    FRSQRT_W	= 607,
    FSAF_D	= 608,
    FSAF_W	= 609,
    FSEQ_D	= 610,
    FSEQ_W	= 611,
    FSLE_D	= 612,
    FSLE_W	= 613,
    FSLT_D	= 614,
    FSLT_W	= 615,
    FSNE_D	= 616,
    FSNE_W	= 617,
    FSOR_D	= 618,
    FSOR_W	= 619,
    FSQRT_D	= 620,
    FSQRT_D32	= 621,
    FSQRT_D64	= 622,
    FSQRT_S	= 623,
    FSQRT_W	= 624,
    FSUB_D	= 625,
    FSUB_D32	= 626,
    FSUB_D64	= 627,
    FSUB_S	= 628,
    FSUB_W	= 629,
    FSUEQ_D	= 630,
    FSUEQ_W	= 631,
    FSULE_D	= 632,
    FSULE_W	= 633,
    FSULT_D	= 634,
    FSULT_W	= 635,
    FSUNE_D	= 636,
    FSUNE_W	= 637,
    FSUN_D	= 638,
    FSUN_W	= 639,
    FTINT_S_D	= 640,
    FTINT_S_W	= 641,
    FTINT_U_D	= 642,
    FTINT_U_W	= 643,
    FTQ_H	= 644,
    FTQ_W	= 645,
    FTRUNC_S_D	= 646,
    FTRUNC_S_W	= 647,
    FTRUNC_U_D	= 648,
    FTRUNC_U_W	= 649,
    GotPrologue16	= 650,
    HADD_S_D	= 651,
    HADD_S_H	= 652,
    HADD_S_W	= 653,
    HADD_U_D	= 654,
    HADD_U_H	= 655,
    HADD_U_W	= 656,
    HSUB_S_D	= 657,
    HSUB_S_H	= 658,
    HSUB_S_W	= 659,
    HSUB_U_D	= 660,
    HSUB_U_H	= 661,
    HSUB_U_W	= 662,
    ILVEV_B	= 663,
    ILVEV_D	= 664,
    ILVEV_H	= 665,
    ILVEV_W	= 666,
    ILVL_B	= 667,
    ILVL_D	= 668,
    ILVL_H	= 669,
    ILVL_W	= 670,
    ILVOD_B	= 671,
    ILVOD_D	= 672,
    ILVOD_H	= 673,
    ILVOD_W	= 674,
    ILVR_B	= 675,
    ILVR_D	= 676,
    ILVR_H	= 677,
    ILVR_W	= 678,
    INS	= 679,
    INSERT_B	= 680,
    INSERT_FD_PSEUDO	= 681,
    INSERT_FW_PSEUDO	= 682,
    INSERT_H	= 683,
    INSERT_W	= 684,
    INSV	= 685,
    INSVE_B	= 686,
    INSVE_D	= 687,
    INSVE_H	= 688,
    INSVE_W	= 689,
    INS_MM	= 690,
    J	= 691,
    JAL	= 692,
    JALR	= 693,
    JALR64	= 694,
    JALR64Pseudo	= 695,
    JALRPseudo	= 696,
    JALR_MM	= 697,
    JAL_MM	= 698,
    JR	= 699,
    JR64	= 700,
    JR_MM	= 701,
    J_MM	= 702,
    Jal16	= 703,
    JrRa16	= 704,
    JrcRa16	= 705,
    JrcRx16	= 706,
    JumpLinkReg16	= 707,
    LB	= 708,
    LB64	= 709,
    LBUX	= 710,
    LB_MM	= 711,
    LBu	= 712,
    LBu64	= 713,
    LBu_MM	= 714,
    LD	= 715,
    LDC1	= 716,
    LDC164	= 717,
    LDC2	= 718,
    LDI_B	= 719,
    LDI_D	= 720,
    LDI_H	= 721,
    LDI_W	= 722,
    LDL	= 723,
    LDR	= 724,
    LDXC1	= 725,
    LDXC164	= 726,
    LD_B	= 727,
    LD_D	= 728,
    LD_H	= 729,
    LD_W	= 730,
    LEA_ADDiu	= 731,
    LEA_ADDiu64	= 732,
    LH	= 733,
    LH64	= 734,
    LHX	= 735,
    LH_MM	= 736,
    LHu	= 737,
    LHu64	= 738,
    LHu_MM	= 739,
    LL	= 740,
    LLD	= 741,
    LOAD_ACC128	= 742,
    LOAD_ACC64	= 743,
    LOAD_ACC64DSP	= 744,
    LOAD_CCOND_DSP	= 745,
    LSA	= 746,
    LUXC1	= 747,
    LUXC164	= 748,
    LUi	= 749,
    LUi64	= 750,
    LUi_MM	= 751,
    LW	= 752,
    LW64	= 753,
    LWC1	= 754,
    LWC2	= 755,
    LWL	= 756,
    LWL64	= 757,
    LWL_MM	= 758,
    LWR	= 759,
    LWR64	= 760,
    LWR_MM	= 761,
    LWX	= 762,
    LWXC1	= 763,
    LW_MM	= 764,
    LWu	= 765,
    LbRxRyOffMemX16	= 766,
    LbuRxRyOffMemX16	= 767,
    LhRxRyOffMemX16	= 768,
    LhuRxRyOffMemX16	= 769,
    LiRxImm16	= 770,
    LiRxImmAlignX16	= 771,
    LiRxImmX16	= 772,
    LoadAddr32Imm	= 773,
    LoadAddr32Reg	= 774,
    LoadImm32Reg	= 775,
    LwConstant32	= 776,
    LwRxPcTcp16	= 777,
    LwRxPcTcpX16	= 778,
    LwRxRyOffMemX16	= 779,
    LwRxSpImmX16	= 780,
    MADD	= 781,
    MADDR_Q_H	= 782,
    MADDR_Q_W	= 783,
    MADDU	= 784,
    MADDU_DSP	= 785,
    MADDU_MM	= 786,
    MADDV_B	= 787,
    MADDV_D	= 788,
    MADDV_H	= 789,
    MADDV_W	= 790,
    MADD_D32	= 791,
    MADD_D64	= 792,
    MADD_DSP	= 793,
    MADD_MM	= 794,
    MADD_Q_H	= 795,
    MADD_Q_W	= 796,
    MADD_S	= 797,
    MAQ_SA_W_PHL	= 798,
    MAQ_SA_W_PHR	= 799,
    MAQ_S_W_PHL	= 800,
    MAQ_S_W_PHR	= 801,
    MAXI_S_B	= 802,
    MAXI_S_D	= 803,
    MAXI_S_H	= 804,
    MAXI_S_W	= 805,
    MAXI_U_B	= 806,
    MAXI_U_D	= 807,
    MAXI_U_H	= 808,
    MAXI_U_W	= 809,
    MAX_A_B	= 810,
    MAX_A_D	= 811,
    MAX_A_H	= 812,
    MAX_A_W	= 813,
    MAX_S_B	= 814,
    MAX_S_D	= 815,
    MAX_S_H	= 816,
    MAX_S_W	= 817,
    MAX_U_B	= 818,
    MAX_U_D	= 819,
    MAX_U_H	= 820,
    MAX_U_W	= 821,
    MFC0	= 822,
    MFC1	= 823,
    MFC2	= 824,
    MFHC1	= 825,
    MFHI	= 826,
    MFHI64	= 827,
    MFHI_DSP	= 828,
    MFHI_MM	= 829,
    MFLO	= 830,
    MFLO64	= 831,
    MFLO_DSP	= 832,
    MFLO_MM	= 833,
    MINI_S_B	= 834,
    MINI_S_D	= 835,
    MINI_S_H	= 836,
    MINI_S_W	= 837,
    MINI_U_B	= 838,
    MINI_U_D	= 839,
    MINI_U_H	= 840,
    MINI_U_W	= 841,
    MIN_A_B	= 842,
    MIN_A_D	= 843,
    MIN_A_H	= 844,
    MIN_A_W	= 845,
    MIN_S_B	= 846,
    MIN_S_D	= 847,
    MIN_S_H	= 848,
    MIN_S_W	= 849,
    MIN_U_B	= 850,
    MIN_U_D	= 851,
    MIN_U_H	= 852,
    MIN_U_W	= 853,
    MIPSeh_return32	= 854,
    MIPSeh_return64	= 855,
    MODSUB	= 856,
    MOD_S_B	= 857,
    MOD_S_D	= 858,
    MOD_S_H	= 859,
    MOD_S_W	= 860,
    MOD_U_B	= 861,
    MOD_U_D	= 862,
    MOD_U_H	= 863,
    MOD_U_W	= 864,
    MOVE_V	= 865,
    MOVF_D32	= 866,
    MOVF_D64	= 867,
    MOVF_I	= 868,
    MOVF_I64	= 869,
    MOVF_I_MM	= 870,
    MOVF_S	= 871,
    MOVN_I64_D64	= 872,
    MOVN_I64_I	= 873,
    MOVN_I64_I64	= 874,
    MOVN_I64_S	= 875,
    MOVN_I_D32	= 876,
    MOVN_I_D64	= 877,
    MOVN_I_I	= 878,
    MOVN_I_I64	= 879,
    MOVN_I_MM	= 880,
    MOVN_I_S	= 881,
    MOVT_D32	= 882,
    MOVT_D64	= 883,
    MOVT_I	= 884,
    MOVT_I64	= 885,
    MOVT_I_MM	= 886,
    MOVT_S	= 887,
    MOVZ_I64_D64	= 888,
    MOVZ_I64_I	= 889,
    MOVZ_I64_I64	= 890,
    MOVZ_I64_S	= 891,
    MOVZ_I_D32	= 892,
    MOVZ_I_D64	= 893,
    MOVZ_I_I	= 894,
    MOVZ_I_I64	= 895,
    MOVZ_I_MM	= 896,
    MOVZ_I_S	= 897,
    MSUB	= 898,
    MSUBR_Q_H	= 899,
    MSUBR_Q_W	= 900,
    MSUBU	= 901,
    MSUBU_DSP	= 902,
    MSUBU_MM	= 903,
    MSUBV_B	= 904,
    MSUBV_D	= 905,
    MSUBV_H	= 906,
    MSUBV_W	= 907,
    MSUB_D32	= 908,
    MSUB_D64	= 909,
    MSUB_DSP	= 910,
    MSUB_MM	= 911,
    MSUB_Q_H	= 912,
    MSUB_Q_W	= 913,
    MSUB_S	= 914,
    MTC0	= 915,
    MTC1	= 916,
    MTC2	= 917,
    MTHC1	= 918,
    MTHI	= 919,
    MTHI64	= 920,
    MTHI_DSP	= 921,
    MTHI_MM	= 922,
    MTHLIP	= 923,
    MTLO	= 924,
    MTLO64	= 925,
    MTLO_DSP	= 926,
    MTLO_MM	= 927,
    MUL	= 928,
    MULEQ_S_W_PHL	= 929,
    MULEQ_S_W_PHR	= 930,
    MULEU_S_PH_QBL	= 931,
    MULEU_S_PH_QBR	= 932,
    MULQ_RS_PH	= 933,
    MULQ_RS_W	= 934,
    MULQ_S_PH	= 935,
    MULQ_S_W	= 936,
    MULR_Q_H	= 937,
    MULR_Q_W	= 938,
    MULSAQ_S_W_PH	= 939,
    MULSA_W_PH	= 940,
    MULT	= 941,
    MULTU_DSP	= 942,
    MULT_DSP	= 943,
    MULT_MM	= 944,
    MULTu	= 945,
    MULTu_MM	= 946,
    MULV_B	= 947,
    MULV_D	= 948,
    MULV_H	= 949,
    MULV_W	= 950,
    MUL_MM	= 951,
    MUL_PH	= 952,
    MUL_Q_H	= 953,
    MUL_Q_W	= 954,
    MUL_S_PH	= 955,
    Mfhi16	= 956,
    Mflo16	= 957,
    Move32R16	= 958,
    MoveR3216	= 959,
    MultRxRy16	= 960,
    MultRxRyRz16	= 961,
    MultuRxRy16	= 962,
    MultuRxRyRz16	= 963,
    NLOC_B	= 964,
    NLOC_D	= 965,
    NLOC_H	= 966,
    NLOC_W	= 967,
    NLZC_B	= 968,
    NLZC_D	= 969,
    NLZC_H	= 970,
    NLZC_W	= 971,
    NMADD_D32	= 972,
    NMADD_D64	= 973,
    NMADD_S	= 974,
    NMSUB_D32	= 975,
    NMSUB_D64	= 976,
    NMSUB_S	= 977,
    NOP	= 978,
    NOR	= 979,
    NOR64	= 980,
    NORI_B	= 981,
    NOR_MM	= 982,
    NOR_V	= 983,
    NOR_V_D_PSEUDO	= 984,
    NOR_V_H_PSEUDO	= 985,
    NOR_V_W_PSEUDO	= 986,
    NegRxRy16	= 987,
    NotRxRy16	= 988,
    OR	= 989,
    OR64	= 990,
    ORI_B	= 991,
    OR_MM	= 992,
    OR_V	= 993,
    OR_V_D_PSEUDO	= 994,
    OR_V_H_PSEUDO	= 995,
    OR_V_W_PSEUDO	= 996,
    ORi	= 997,
    ORi64	= 998,
    ORi_MM	= 999,
    OrRxRxRy16	= 1000,
    PACKRL_PH	= 1001,
    PCKEV_B	= 1002,
    PCKEV_D	= 1003,
    PCKEV_H	= 1004,
    PCKEV_W	= 1005,
    PCKOD_B	= 1006,
    PCKOD_D	= 1007,
    PCKOD_H	= 1008,
    PCKOD_W	= 1009,
    PCNT_B	= 1010,
    PCNT_D	= 1011,
    PCNT_H	= 1012,
    PCNT_W	= 1013,
    PICK_PH	= 1014,
    PICK_QB	= 1015,
    PRECEQU_PH_QBL	= 1016,
    PRECEQU_PH_QBLA	= 1017,
    PRECEQU_PH_QBR	= 1018,
    PRECEQU_PH_QBRA	= 1019,
    PRECEQ_W_PHL	= 1020,
    PRECEQ_W_PHR	= 1021,
    PRECEU_PH_QBL	= 1022,
    PRECEU_PH_QBLA	= 1023,
    PRECEU_PH_QBR	= 1024,
    PRECEU_PH_QBRA	= 1025,
    PRECRQU_S_QB_PH	= 1026,
    PRECRQ_PH_W	= 1027,
    PRECRQ_QB_PH	= 1028,
    PRECRQ_RS_PH_W	= 1029,
    PRECR_QB_PH	= 1030,
    PRECR_SRA_PH_W	= 1031,
    PRECR_SRA_R_PH_W	= 1032,
    PREPEND	= 1033,
    PseudoCMPU_EQ_QB	= 1034,
    PseudoCMPU_LE_QB	= 1035,
    PseudoCMPU_LT_QB	= 1036,
    PseudoCMP_EQ_PH	= 1037,
    PseudoCMP_LE_PH	= 1038,
    PseudoCMP_LT_PH	= 1039,
    PseudoCVT_D32_W	= 1040,
    PseudoCVT_D64_L	= 1041,
    PseudoCVT_D64_W	= 1042,
    PseudoCVT_S_L	= 1043,
    PseudoCVT_S_W	= 1044,
    PseudoDMULT	= 1045,
    PseudoDMULTu	= 1046,
    PseudoDSDIV	= 1047,
    PseudoDUDIV	= 1048,
    PseudoMADD	= 1049,
    PseudoMADDU	= 1050,
    PseudoMFHI	= 1051,
    PseudoMFHI64	= 1052,
    PseudoMFLO	= 1053,
    PseudoMFLO64	= 1054,
    PseudoMSUB	= 1055,
    PseudoMSUBU	= 1056,
    PseudoMTLOHI	= 1057,
    PseudoMTLOHI64	= 1058,
    PseudoMTLOHI_DSP	= 1059,
    PseudoMULT	= 1060,
    PseudoMULTu	= 1061,
    PseudoPICK_PH	= 1062,
    PseudoPICK_QB	= 1063,
    PseudoSDIV	= 1064,
    PseudoUDIV	= 1065,
    RADDU_W_QB	= 1066,
    RDDSP	= 1067,
    RDHWR	= 1068,
    RDHWR64	= 1069,
    REPLV_PH	= 1070,
    REPLV_QB	= 1071,
    REPL_PH	= 1072,
    REPL_QB	= 1073,
    RET	= 1074,
    RET_MM	= 1075,
    ROTR	= 1076,
    ROTRV	= 1077,
    ROTRV_MM	= 1078,
    ROTR_MM	= 1079,
    ROUND_L_D64	= 1080,
    ROUND_L_S	= 1081,
    ROUND_W_D32	= 1082,
    ROUND_W_D64	= 1083,
    ROUND_W_S	= 1084,
    RestoreIncSpF16	= 1085,
    RestoreRaF16	= 1086,
    RetRA	= 1087,
    RetRA16	= 1088,
    SAT_S_B	= 1089,
    SAT_S_D	= 1090,
    SAT_S_H	= 1091,
    SAT_S_W	= 1092,
    SAT_U_B	= 1093,
    SAT_U_D	= 1094,
    SAT_U_H	= 1095,
    SAT_U_W	= 1096,
    SB	= 1097,
    SB64	= 1098,
    SB_MM	= 1099,
    SC	= 1100,
    SCD	= 1101,
    SD	= 1102,
    SDC1	= 1103,
    SDC164	= 1104,
    SDC2	= 1105,
    SDIV	= 1106,
    SDIV_MM	= 1107,
    SDL	= 1108,
    SDR	= 1109,
    SDXC1	= 1110,
    SDXC164	= 1111,
    SEB	= 1112,
    SEB64	= 1113,
    SEB_MM	= 1114,
    SEH	= 1115,
    SEH64	= 1116,
    SEH_MM	= 1117,
    SH	= 1118,
    SH64	= 1119,
    SHF_B	= 1120,
    SHF_H	= 1121,
    SHF_W	= 1122,
    SHILO	= 1123,
    SHILOV	= 1124,
    SHLLV_PH	= 1125,
    SHLLV_QB	= 1126,
    SHLLV_S_PH	= 1127,
    SHLLV_S_W	= 1128,
    SHLL_PH	= 1129,
    SHLL_QB	= 1130,
    SHLL_S_PH	= 1131,
    SHLL_S_W	= 1132,
    SHRAV_PH	= 1133,
    SHRAV_QB	= 1134,
    SHRAV_R_PH	= 1135,
    SHRAV_R_QB	= 1136,
    SHRAV_R_W	= 1137,
    SHRA_PH	= 1138,
    SHRA_QB	= 1139,
    SHRA_R_PH	= 1140,
    SHRA_R_QB	= 1141,
    SHRA_R_W	= 1142,
    SHRLV_PH	= 1143,
    SHRLV_QB	= 1144,
    SHRL_PH	= 1145,
    SHRL_QB	= 1146,
    SH_MM	= 1147,
    SLDI_B	= 1148,
    SLDI_D	= 1149,
    SLDI_H	= 1150,
    SLDI_W	= 1151,
    SLD_B	= 1152,
    SLD_D	= 1153,
    SLD_H	= 1154,
    SLD_W	= 1155,
    SLL	= 1156,
    SLL64_32	= 1157,
    SLL64_64	= 1158,
    SLLI_B	= 1159,
    SLLI_D	= 1160,
    SLLI_H	= 1161,
    SLLI_W	= 1162,
    SLLV	= 1163,
    SLLV_MM	= 1164,
    SLL_B	= 1165,
    SLL_D	= 1166,
    SLL_H	= 1167,
    SLL_MM	= 1168,
    SLL_W	= 1169,
    SLT	= 1170,
    SLT64	= 1171,
    SLT_MM	= 1172,
    SLTi	= 1173,
    SLTi64	= 1174,
    SLTi_MM	= 1175,
    SLTiu	= 1176,
    SLTiu64	= 1177,
    SLTiu_MM	= 1178,
    SLTu	= 1179,
    SLTu64	= 1180,
    SLTu_MM	= 1181,
    SNZ_B_PSEUDO	= 1182,
    SNZ_D_PSEUDO	= 1183,
    SNZ_H_PSEUDO	= 1184,
    SNZ_V_PSEUDO	= 1185,
    SNZ_W_PSEUDO	= 1186,
    SPLATI_B	= 1187,
    SPLATI_D	= 1188,
    SPLATI_H	= 1189,
    SPLATI_W	= 1190,
    SPLAT_B	= 1191,
    SPLAT_D	= 1192,
    SPLAT_H	= 1193,
    SPLAT_W	= 1194,
    SRA	= 1195,
    SRAI_B	= 1196,
    SRAI_D	= 1197,
    SRAI_H	= 1198,
    SRAI_W	= 1199,
    SRARI_B	= 1200,
    SRARI_D	= 1201,
    SRARI_H	= 1202,
    SRARI_W	= 1203,
    SRAR_B	= 1204,
    SRAR_D	= 1205,
    SRAR_H	= 1206,
    SRAR_W	= 1207,
    SRAV	= 1208,
    SRAV_MM	= 1209,
    SRA_B	= 1210,
    SRA_D	= 1211,
    SRA_H	= 1212,
    SRA_MM	= 1213,
    SRA_W	= 1214,
    SRL	= 1215,
    SRLI_B	= 1216,
    SRLI_D	= 1217,
    SRLI_H	= 1218,
    SRLI_W	= 1219,
    SRLRI_B	= 1220,
    SRLRI_D	= 1221,
    SRLRI_H	= 1222,
    SRLRI_W	= 1223,
    SRLR_B	= 1224,
    SRLR_D	= 1225,
    SRLR_H	= 1226,
    SRLR_W	= 1227,
    SRLV	= 1228,
    SRLV_MM	= 1229,
    SRL_B	= 1230,
    SRL_D	= 1231,
    SRL_H	= 1232,
    SRL_MM	= 1233,
    SRL_W	= 1234,
    STORE_ACC128	= 1235,
    STORE_ACC64	= 1236,
    STORE_ACC64DSP	= 1237,
    STORE_CCOND_DSP	= 1238,
    ST_B	= 1239,
    ST_D	= 1240,
    ST_H	= 1241,
    ST_W	= 1242,
    SUB	= 1243,
    SUBQH_PH	= 1244,
    SUBQH_R_PH	= 1245,
    SUBQH_R_W	= 1246,
    SUBQH_W	= 1247,
    SUBQ_PH	= 1248,
    SUBQ_S_PH	= 1249,
    SUBQ_S_W	= 1250,
    SUBSUS_U_B	= 1251,
    SUBSUS_U_D	= 1252,
    SUBSUS_U_H	= 1253,
    SUBSUS_U_W	= 1254,
    SUBSUU_S_B	= 1255,
    SUBSUU_S_D	= 1256,
    SUBSUU_S_H	= 1257,
    SUBSUU_S_W	= 1258,
    SUBS_S_B	= 1259,
    SUBS_S_D	= 1260,
    SUBS_S_H	= 1261,
    SUBS_S_W	= 1262,
    SUBS_U_B	= 1263,
    SUBS_U_D	= 1264,
    SUBS_U_H	= 1265,
    SUBS_U_W	= 1266,
    SUBUH_QB	= 1267,
    SUBUH_R_QB	= 1268,
    SUBU_PH	= 1269,
    SUBU_QB	= 1270,
    SUBU_S_PH	= 1271,
    SUBU_S_QB	= 1272,
    SUBVI_B	= 1273,
    SUBVI_D	= 1274,
    SUBVI_H	= 1275,
    SUBVI_W	= 1276,
    SUBV_B	= 1277,
    SUBV_D	= 1278,
    SUBV_H	= 1279,
    SUBV_W	= 1280,
    SUB_MM	= 1281,
    SUBu	= 1282,
    SUBu_MM	= 1283,
    SUXC1	= 1284,
    SUXC164	= 1285,
    SW	= 1286,
    SW64	= 1287,
    SWC1	= 1288,
    SWC2	= 1289,
    SWL	= 1290,
    SWL64	= 1291,
    SWL_MM	= 1292,
    SWR	= 1293,
    SWR64	= 1294,
    SWR_MM	= 1295,
    SWXC1	= 1296,
    SW_MM	= 1297,
    SYNC	= 1298,
    SYSCALL	= 1299,
    SZ_B_PSEUDO	= 1300,
    SZ_D_PSEUDO	= 1301,
    SZ_H_PSEUDO	= 1302,
    SZ_V_PSEUDO	= 1303,
    SZ_W_PSEUDO	= 1304,
    SaveDecSpF16	= 1305,
    SaveRaF16	= 1306,
    SbRxRyOffMemX16	= 1307,
    SebRx16	= 1308,
    SehRx16	= 1309,
    SelBeqZ	= 1310,
    SelBneZ	= 1311,
    SelTBteqZCmp	= 1312,
    SelTBteqZCmpi	= 1313,
    SelTBteqZSlt	= 1314,
    SelTBteqZSlti	= 1315,
    SelTBteqZSltiu	= 1316,
    SelTBteqZSltu	= 1317,
    SelTBtneZCmp	= 1318,
    SelTBtneZCmpi	= 1319,
    SelTBtneZSlt	= 1320,
    SelTBtneZSlti	= 1321,
    SelTBtneZSltiu	= 1322,
    SelTBtneZSltu	= 1323,
    ShRxRyOffMemX16	= 1324,
    SllX16	= 1325,
    SllvRxRy16	= 1326,
    SltCCRxRy16	= 1327,
    SltRxRy16	= 1328,
    SltiCCRxImmX16	= 1329,
    SltiRxImm16	= 1330,
    SltiRxImmX16	= 1331,
    SltiuCCRxImmX16	= 1332,
    SltiuRxImm16	= 1333,
    SltiuRxImmX16	= 1334,
    SltuCCRxRy16	= 1335,
    SltuRxRy16	= 1336,
    SltuRxRyRz16	= 1337,
    SraX16	= 1338,
    SravRxRy16	= 1339,
    SrlX16	= 1340,
    SrlvRxRy16	= 1341,
    SubuRxRyRz16	= 1342,
    SwRxRyOffMemX16	= 1343,
    SwRxSpImmX16	= 1344,
    TAILCALL	= 1345,
    TAILCALL64_R	= 1346,
    TAILCALL_MM	= 1347,
    TAILCALL_R	= 1348,
    TAILCALL_R_MM	= 1349,
    TEQ	= 1350,
    TEQI	= 1351,
    TEQI_MM	= 1352,
    TEQ_MM	= 1353,
    TGE	= 1354,
    TGEI	= 1355,
    TGEIU	= 1356,
    TGEIU_MM	= 1357,
    TGEI_MM	= 1358,
    TGEU	= 1359,
    TGEU_MM	= 1360,
    TGE_MM	= 1361,
    TLT	= 1362,
    TLTI	= 1363,
    TLTIU_MM	= 1364,
    TLTI_MM	= 1365,
    TLTU	= 1366,
    TLTU_MM	= 1367,
    TLT_MM	= 1368,
    TNE	= 1369,
    TNEI	= 1370,
    TNEI_MM	= 1371,
    TNE_MM	= 1372,
    TRAP	= 1373,
    TRUNC_L_D64	= 1374,
    TRUNC_L_S	= 1375,
    TRUNC_W_D32	= 1376,
    TRUNC_W_D64	= 1377,
    TRUNC_W_S	= 1378,
    TTLTIU	= 1379,
    UDIV	= 1380,
    UDIV_MM	= 1381,
    VSHF_B	= 1382,
    VSHF_D	= 1383,
    VSHF_H	= 1384,
    VSHF_W	= 1385,
    WAIT	= 1386,
    WRDSP	= 1387,
    WSBH	= 1388,
    WSBH_MM	= 1389,
    XOR	= 1390,
    XOR64	= 1391,
    XORI_B	= 1392,
    XOR_MM	= 1393,
    XOR_V	= 1394,
    XOR_V_D_PSEUDO	= 1395,
    XOR_V_H_PSEUDO	= 1396,
    XOR_V_W_PSEUDO	= 1397,
    XORi	= 1398,
    XORi64	= 1399,
    XORi_MM	= 1400,
    XorRxRxRy16	= 1401,
    INSTRUCTION_LIST_END = 1402
  };
namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIArith	= 1,
    IIPseudo	= 2,
    IILogic	= 3,
    IIAlu	= 4,
    IIBranch	= 5,
    IIFcvt	= 6,
    IIFmove	= 7,
    IIFcmp	= 8,
    IIFmoveC1	= 9,
    IIImult	= 10,
    IIIdiv	= 11,
    IIFadd	= 12,
    IIFdivDouble	= 13,
    IIFdivSingle	= 14,
    IIFmulDouble	= 15,
    IIFmulSingle	= 16,
    IIFsqrtDouble	= 17,
    IIFsqrtSingle	= 18,
    IILoad	= 19,
    IIFLoad	= 20,
    IIHiLo	= 21,
    IIImul	= 22,
    IIStore	= 23,
    IIFStore	= 24,
    IIseb	= 25,
    IIslt	= 26,
    SCHED_LIST_END = 27
  };
}
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Descriptors                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { Mips::DSPOutFlag20, 0 };
static const uint16_t ImplicitList2[] = { Mips::DSPCarry, 0 };
static const uint16_t ImplicitList3[] = { Mips::SP, 0 };
static const uint16_t ImplicitList4[] = { Mips::AT, 0 };
static const uint16_t ImplicitList5[] = { Mips::RA, 0 };
static const uint16_t ImplicitList6[] = { Mips::DSPPos, 0 };
static const uint16_t ImplicitList7[] = { Mips::T8, 0 };
static const uint16_t ImplicitList8[] = { Mips::DSPCCond, 0 };
static const uint16_t ImplicitList9[] = { Mips::HI0_64, Mips::LO0_64, 0 };
static const uint16_t ImplicitList10[] = { Mips::DSPOutFlag16_19, 0 };
static const uint16_t ImplicitList11[] = { Mips::HI0, Mips::LO0, 0 };
static const uint16_t ImplicitList12[] = { Mips::DSPEFI, 0 };
static const uint16_t ImplicitList13[] = { Mips::DSPPos, Mips::DSPEFI, 0 };
static const uint16_t ImplicitList14[] = { Mips::DSPOutFlag23, 0 };
static const uint16_t ImplicitList15[] = { Mips::FCC0, 0 };
static const uint16_t ImplicitList16[] = { Mips::DSPPos, Mips::DSPSCount, 0 };
static const uint16_t ImplicitList17[] = { Mips::AC0, 0 };
static const uint16_t ImplicitList18[] = { Mips::AC0_64, 0 };
static const uint16_t ImplicitList19[] = { Mips::V0, Mips::V1, 0 };
static const uint16_t ImplicitList20[] = { Mips::HI0, 0 };
static const uint16_t ImplicitList21[] = { Mips::HI0_64, 0 };
static const uint16_t ImplicitList22[] = { Mips::LO0, 0 };
static const uint16_t ImplicitList23[] = { Mips::LO0_64, 0 };
static const uint16_t ImplicitList24[] = { Mips::DSPOutFlag21, 0 };
static const uint16_t ImplicitList25[] = { Mips::DSPOutFlag22, 0 };
static const uint16_t ImplicitList26[] = { Mips::S0, Mips::S1, Mips::S2, Mips::RA, Mips::SP, 0 };
static const uint16_t ImplicitList27[] = { Mips::RA, Mips::SP, Mips::S0, Mips::S1, Mips::S2, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo26[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsPlusSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::CCRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSACtrlRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { Mips::CCRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { Mips::MSACtrlRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo80[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo89[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo117[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo140[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo155[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo156[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::CPU16RegsPlusSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPUSPRegRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGRH32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo171[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo172[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo173[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo174[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo175[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo176[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo177[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo178[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo179[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo180[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo181[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo182[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo183[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo184[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { Mips::FGRH32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { Mips::HI32DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo188[] = { { Mips::LO32DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo196[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo201[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo215[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo229[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };

extern const MCInstrDesc MipsInsts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2,0,0 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2,0,0 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2,0,0 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3,0,0 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4,0,0 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5,0,0 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6,0,0 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3,0,0 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5,0,0 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7,0,0 },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2,0,0 },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2,0,0 },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8,0,0 },  // Inst #17 = STACKMAP
  { 18,	6,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo9,0,0 },  // Inst #18 = PATCHPOINT
  { 19,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo10,0,0 },  // Inst #19 = ABSQ_S_PH
  { 20,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo10,0,0 },  // Inst #20 = ABSQ_S_QB
  { 21,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo11,0,0 },  // Inst #21 = ABSQ_S_W
  { 22,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #22 = ADD
  { 23,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #23 = ADDQH_PH
  { 24,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #24 = ADDQH_R_PH
  { 25,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #25 = ADDQH_R_W
  { 26,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #26 = ADDQH_W
  { 27,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #27 = ADDQ_PH
  { 28,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #28 = ADDQ_S_PH
  { 29,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo12,0,0 },  // Inst #29 = ADDQ_S_W
  { 30,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList2, OperandInfo12,0,0 },  // Inst #30 = ADDSC
  { 31,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #31 = ADDS_A_B
  { 32,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #32 = ADDS_A_D
  { 33,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #33 = ADDS_A_H
  { 34,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #34 = ADDS_A_W
  { 35,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #35 = ADDS_S_B
  { 36,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #36 = ADDS_S_D
  { 37,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #37 = ADDS_S_H
  { 38,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #38 = ADDS_S_W
  { 39,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #39 = ADDS_U_B
  { 40,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #40 = ADDS_U_D
  { 41,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #41 = ADDS_U_H
  { 42,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #42 = ADDS_U_W
  { 43,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #43 = ADDUH_QB
  { 44,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #44 = ADDUH_R_QB
  { 45,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #45 = ADDU_PH
  { 46,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #46 = ADDU_QB
  { 47,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #47 = ADDU_S_PH
  { 48,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #48 = ADDU_S_QB
  { 49,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #49 = ADDVI_B
  { 50,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #50 = ADDVI_D
  { 51,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #51 = ADDVI_H
  { 52,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #52 = ADDVI_W
  { 53,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #53 = ADDV_B
  { 54,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #54 = ADDV_D
  { 55,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #55 = ADDV_H
  { 56,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #56 = ADDV_W
  { 57,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, ImplicitList1, OperandInfo12,0,0 },  // Inst #57 = ADDWC
  { 58,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #58 = ADD_A_B
  { 59,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #59 = ADD_A_D
  { 60,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #60 = ADD_A_H
  { 61,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #61 = ADD_A_W
  { 62,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #62 = ADD_MM
  { 63,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #63 = ADDi
  { 64,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #64 = ADDi_MM
  { 65,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #65 = ADDiu
  { 66,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #66 = ADDiu_MM
  { 67,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #67 = ADDu
  { 68,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #68 = ADDu_MM
  { 69,	1,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo2,0,0 },  // Inst #69 = ADJCALLSTACKDOWN
  { 70,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo8,0,0 },  // Inst #70 = ADJCALLSTACKUP
  { 71,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #71 = AND
  { 72,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo23,0,0 },  // Inst #72 = AND64
  { 73,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #73 = ANDI_B
  { 74,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #74 = AND_MM
  { 75,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #75 = AND_V
  { 76,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #76 = AND_V_D_PSEUDO
  { 77,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #77 = AND_V_H_PSEUDO
  { 78,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #78 = AND_V_W_PSEUDO
  { 79,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #79 = ANDi
  { 80,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #80 = ANDi64
  { 81,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #81 = ANDi_MM
  { 82,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo25,0,0 },  // Inst #82 = APPEND
  { 83,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #83 = ASUB_S_B
  { 84,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #84 = ASUB_S_D
  { 85,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #85 = ASUB_S_H
  { 86,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #86 = ASUB_S_W
  { 87,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #87 = ASUB_U_B
  { 88,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #88 = ASUB_U_D
  { 89,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #89 = ASUB_U_H
  { 90,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #90 = ASUB_U_W
  { 91,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo26,0,0 },  // Inst #91 = ATOMIC_CMP_SWAP_I16
  { 92,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo26,0,0 },  // Inst #92 = ATOMIC_CMP_SWAP_I32
  { 93,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo27,0,0 },  // Inst #93 = ATOMIC_CMP_SWAP_I64
  { 94,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo26,0,0 },  // Inst #94 = ATOMIC_CMP_SWAP_I8
  { 95,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #95 = ATOMIC_LOAD_ADD_I16
  { 96,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #96 = ATOMIC_LOAD_ADD_I32
  { 97,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo29,0,0 },  // Inst #97 = ATOMIC_LOAD_ADD_I64
  { 98,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #98 = ATOMIC_LOAD_ADD_I8
  { 99,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #99 = ATOMIC_LOAD_AND_I16
  { 100,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #100 = ATOMIC_LOAD_AND_I32
  { 101,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo29,0,0 },  // Inst #101 = ATOMIC_LOAD_AND_I64
  { 102,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #102 = ATOMIC_LOAD_AND_I8
  { 103,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #103 = ATOMIC_LOAD_NAND_I16
  { 104,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #104 = ATOMIC_LOAD_NAND_I32
  { 105,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo29,0,0 },  // Inst #105 = ATOMIC_LOAD_NAND_I64
  { 106,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #106 = ATOMIC_LOAD_NAND_I8
  { 107,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #107 = ATOMIC_LOAD_OR_I16
  { 108,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #108 = ATOMIC_LOAD_OR_I32
  { 109,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo29,0,0 },  // Inst #109 = ATOMIC_LOAD_OR_I64
  { 110,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #110 = ATOMIC_LOAD_OR_I8
  { 111,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #111 = ATOMIC_LOAD_SUB_I16
  { 112,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #112 = ATOMIC_LOAD_SUB_I32
  { 113,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo29,0,0 },  // Inst #113 = ATOMIC_LOAD_SUB_I64
  { 114,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #114 = ATOMIC_LOAD_SUB_I8
  { 115,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #115 = ATOMIC_LOAD_XOR_I16
  { 116,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #116 = ATOMIC_LOAD_XOR_I32
  { 117,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo29,0,0 },  // Inst #117 = ATOMIC_LOAD_XOR_I64
  { 118,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #118 = ATOMIC_LOAD_XOR_I8
  { 119,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #119 = ATOMIC_SWAP_I16
  { 120,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #120 = ATOMIC_SWAP_I32
  { 121,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo29,0,0 },  // Inst #121 = ATOMIC_SWAP_I64
  { 122,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo28,0,0 },  // Inst #122 = ATOMIC_SWAP_I8
  { 123,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #123 = AVER_S_B
  { 124,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #124 = AVER_S_D
  { 125,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #125 = AVER_S_H
  { 126,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #126 = AVER_S_W
  { 127,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #127 = AVER_U_B
  { 128,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #128 = AVER_U_D
  { 129,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #129 = AVER_U_H
  { 130,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #130 = AVER_U_W
  { 131,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #131 = AVE_S_B
  { 132,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #132 = AVE_S_D
  { 133,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #133 = AVE_S_H
  { 134,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #134 = AVE_S_W
  { 135,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #135 = AVE_U_B
  { 136,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #136 = AVE_U_D
  { 137,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #137 = AVE_U_H
  { 138,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #138 = AVE_U_W
  { 139,	2,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo30,0,0 },  // Inst #139 = AddiuRxImmX16
  { 140,	2,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo30,0,0 },  // Inst #140 = AddiuRxPcImmX16
  { 141,	3,	1,	4,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo31,0,0 },  // Inst #141 = AddiuRxRxImm16
  { 142,	3,	1,	4,	4,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo31,0,0 },  // Inst #142 = AddiuRxRxImmX16
  { 143,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo32,0,0 },  // Inst #143 = AddiuRxRyOffMemX16
  { 144,	1,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5,0,0 },  // Inst #144 = AddiuSpImm16
  { 145,	1,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5,0,0 },  // Inst #145 = AddiuSpImmX16
  { 146,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo33,0,0 },  // Inst #146 = AdduRxRyRz16
  { 147,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo34,0,0 },  // Inst #147 = AndRxRxRy16
  { 148,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, ImplicitList4, OperandInfo35,0,0 },  // Inst #148 = B
  { 149,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo25,0,0 },  // Inst #149 = BALIGN
  { 150,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList5, OperandInfo35,0,0 },  // Inst #150 = BAL_BR
  { 151,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x5ULL, NULL, ImplicitList4, OperandInfo36,0,0 },  // Inst #151 = BC1F
  { 152,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x5ULL, NULL, ImplicitList4, OperandInfo36,0,0 },  // Inst #152 = BC1T
  { 153,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #153 = BCLRI_B
  { 154,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #154 = BCLRI_D
  { 155,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #155 = BCLRI_H
  { 156,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #156 = BCLRI_W
  { 157,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #157 = BCLR_B
  { 158,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #158 = BCLR_D
  { 159,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #159 = BCLR_H
  { 160,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #160 = BCLR_W
  { 161,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo37,0,0 },  // Inst #161 = BEQ
  { 162,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo38,0,0 },  // Inst #162 = BEQ64
  { 163,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList4, OperandInfo37,0,0 },  // Inst #163 = BEQ_MM
  { 164,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo39,0,0 },  // Inst #164 = BGEZ
  { 165,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo40,0,0 },  // Inst #165 = BGEZ64
  { 166,	2,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList5, OperandInfo39,0,0 },  // Inst #166 = BGEZAL
  { 167,	2,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList5, OperandInfo39,0,0 },  // Inst #167 = BGEZAL_MM
  { 168,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList4, OperandInfo39,0,0 },  // Inst #168 = BGEZ_MM
  { 169,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo39,0,0 },  // Inst #169 = BGTZ
  { 170,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo40,0,0 },  // Inst #170 = BGTZ64
  { 171,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList4, OperandInfo39,0,0 },  // Inst #171 = BGTZ_MM
  { 172,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo41,0,0 },  // Inst #172 = BINSLI_B
  { 173,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo42,0,0 },  // Inst #173 = BINSLI_D
  { 174,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo43,0,0 },  // Inst #174 = BINSLI_H
  { 175,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo44,0,0 },  // Inst #175 = BINSLI_W
  { 176,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo45,0,0 },  // Inst #176 = BINSL_B
  { 177,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #177 = BINSL_D
  { 178,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #178 = BINSL_H
  { 179,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #179 = BINSL_W
  { 180,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo41,0,0 },  // Inst #180 = BINSRI_B
  { 181,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo42,0,0 },  // Inst #181 = BINSRI_D
  { 182,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo43,0,0 },  // Inst #182 = BINSRI_H
  { 183,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo44,0,0 },  // Inst #183 = BINSRI_W
  { 184,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo45,0,0 },  // Inst #184 = BINSR_B
  { 185,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #185 = BINSR_D
  { 186,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #186 = BINSR_H
  { 187,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #187 = BINSR_W
  { 188,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #188 = BITREV
  { 189,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo39,0,0 },  // Inst #189 = BLEZ
  { 190,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo40,0,0 },  // Inst #190 = BLEZ64
  { 191,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList4, OperandInfo39,0,0 },  // Inst #191 = BLEZ_MM
  { 192,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo39,0,0 },  // Inst #192 = BLTZ
  { 193,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo40,0,0 },  // Inst #193 = BLTZ64
  { 194,	2,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList5, OperandInfo39,0,0 },  // Inst #194 = BLTZAL
  { 195,	2,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList5, OperandInfo39,0,0 },  // Inst #195 = BLTZAL_MM
  { 196,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList4, OperandInfo39,0,0 },  // Inst #196 = BLTZ_MM
  { 197,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo41,0,0 },  // Inst #197 = BMNZI_B
  { 198,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo45,0,0 },  // Inst #198 = BMNZ_V
  { 199,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo41,0,0 },  // Inst #199 = BMZI_B
  { 200,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo45,0,0 },  // Inst #200 = BMZ_V
  { 201,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo37,0,0 },  // Inst #201 = BNE
  { 202,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x2ULL, NULL, ImplicitList4, OperandInfo38,0,0 },  // Inst #202 = BNE64
  { 203,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #203 = BNEGI_B
  { 204,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #204 = BNEGI_D
  { 205,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #205 = BNEGI_H
  { 206,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #206 = BNEGI_W
  { 207,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #207 = BNEG_B
  { 208,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #208 = BNEG_D
  { 209,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #209 = BNEG_H
  { 210,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #210 = BNEG_W
  { 211,	3,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, ImplicitList4, OperandInfo37,0,0 },  // Inst #211 = BNE_MM
  { 212,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo49,0,0 },  // Inst #212 = BNZ_B
  { 213,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo50,0,0 },  // Inst #213 = BNZ_D
  { 214,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo51,0,0 },  // Inst #214 = BNZ_H
  { 215,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo49,0,0 },  // Inst #215 = BNZ_V
  { 216,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo52,0,0 },  // Inst #216 = BNZ_W
  { 217,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo35,0,0 },  // Inst #217 = BPOSGE32
  { 218,	1,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList6, NULL, OperandInfo53,0,0 },  // Inst #218 = BPOSGE32_PSEUDO
  { 219,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo7,0,0 },  // Inst #219 = BREAK
  { 220,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo41,0,0 },  // Inst #220 = BSELI_B
  { 221,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #221 = BSEL_D_PSEUDO
  { 222,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #222 = BSEL_FD_PSEUDO
  { 223,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #223 = BSEL_FW_PSEUDO
  { 224,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #224 = BSEL_H_PSEUDO
  { 225,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo45,0,0 },  // Inst #225 = BSEL_V
  { 226,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #226 = BSEL_W_PSEUDO
  { 227,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #227 = BSETI_B
  { 228,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #228 = BSETI_D
  { 229,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #229 = BSETI_H
  { 230,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #230 = BSETI_W
  { 231,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #231 = BSET_B
  { 232,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #232 = BSET_D
  { 233,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #233 = BSET_H
  { 234,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #234 = BSET_W
  { 235,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo49,0,0 },  // Inst #235 = BZ_B
  { 236,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo50,0,0 },  // Inst #236 = BZ_D
  { 237,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo51,0,0 },  // Inst #237 = BZ_H
  { 238,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo49,0,0 },  // Inst #238 = BZ_V
  { 239,	2,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList4, OperandInfo52,0,0 },  // Inst #239 = BZ_W
  { 240,	2,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo54,0,0 },  // Inst #240 = BeqzRxImm16
  { 241,	2,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo54,0,0 },  // Inst #241 = BeqzRxImmX16
  { 242,	1,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo35,0,0 },  // Inst #242 = Bimm16
  { 243,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo35,0,0 },  // Inst #243 = BimmX16
  { 244,	2,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo54,0,0 },  // Inst #244 = BnezRxImm16
  { 245,	2,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo54,0,0 },  // Inst #245 = BnezRxImmX16
  { 246,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #246 = Break16
  { 247,	1,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo5,0,0 },  // Inst #247 = Bteqz16
  { 248,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo55,0,0 },  // Inst #248 = BteqzT8CmpX16
  { 249,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo56,0,0 },  // Inst #249 = BteqzT8CmpiX16
  { 250,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo55,0,0 },  // Inst #250 = BteqzT8SltX16
  { 251,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo56,0,0 },  // Inst #251 = BteqzT8SltiX16
  { 252,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo56,0,0 },  // Inst #252 = BteqzT8SltiuX16
  { 253,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo55,0,0 },  // Inst #253 = BteqzT8SltuX16
  { 254,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo5,0,0 },  // Inst #254 = BteqzX16
  { 255,	1,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo5,0,0 },  // Inst #255 = Btnez16
  { 256,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo55,0,0 },  // Inst #256 = BtnezT8CmpX16
  { 257,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo56,0,0 },  // Inst #257 = BtnezT8CmpiX16
  { 258,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo55,0,0 },  // Inst #258 = BtnezT8SltX16
  { 259,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo56,0,0 },  // Inst #259 = BtnezT8SltiX16
  { 260,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo56,0,0 },  // Inst #260 = BtnezT8SltiuX16
  { 261,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo55,0,0 },  // Inst #261 = BtnezT8SltuX16
  { 262,	1,	0,	4,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, NULL, OperandInfo5,0,0 },  // Inst #262 = BtnezX16
  { 263,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo57,0,0 },  // Inst #263 = BuildPairF64
  { 264,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo58,0,0 },  // Inst #264 = BuildPairF64_64
  { 265,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #265 = CEIL_L_D64
  { 266,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo60,0,0 },  // Inst #266 = CEIL_L_S
  { 267,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo61,0,0 },  // Inst #267 = CEIL_W_D32
  { 268,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo62,0,0 },  // Inst #268 = CEIL_W_D64
  { 269,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #269 = CEIL_W_S
  { 270,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #270 = CEQI_B
  { 271,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #271 = CEQI_D
  { 272,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #272 = CEQI_H
  { 273,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #273 = CEQI_W
  { 274,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #274 = CEQ_B
  { 275,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #275 = CEQ_D
  { 276,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #276 = CEQ_H
  { 277,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #277 = CEQ_W
  { 278,	2,	1,	7,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo64,0,0 },  // Inst #278 = CFC1
  { 279,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo65,0,0 },  // Inst #279 = CFCMSA
  { 280,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #280 = CLEI_S_B
  { 281,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #281 = CLEI_S_D
  { 282,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #282 = CLEI_S_H
  { 283,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #283 = CLEI_S_W
  { 284,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #284 = CLEI_U_B
  { 285,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #285 = CLEI_U_D
  { 286,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #286 = CLEI_U_H
  { 287,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #287 = CLEI_U_W
  { 288,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #288 = CLE_S_B
  { 289,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #289 = CLE_S_D
  { 290,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #290 = CLE_S_H
  { 291,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #291 = CLE_S_W
  { 292,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #292 = CLE_U_B
  { 293,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #293 = CLE_U_D
  { 294,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #294 = CLE_U_H
  { 295,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #295 = CLE_U_W
  { 296,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #296 = CLO
  { 297,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #297 = CLO_MM
  { 298,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #298 = CLTI_S_B
  { 299,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #299 = CLTI_S_D
  { 300,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #300 = CLTI_S_H
  { 301,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #301 = CLTI_S_W
  { 302,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #302 = CLTI_U_B
  { 303,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #303 = CLTI_U_D
  { 304,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #304 = CLTI_U_H
  { 305,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #305 = CLTI_U_W
  { 306,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #306 = CLT_S_B
  { 307,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #307 = CLT_S_D
  { 308,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #308 = CLT_S_H
  { 309,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #309 = CLT_S_W
  { 310,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #310 = CLT_U_B
  { 311,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #311 = CLT_U_D
  { 312,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #312 = CLT_U_H
  { 313,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #313 = CLT_U_W
  { 314,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #314 = CLZ
  { 315,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #315 = CLZ_MM
  { 316,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo66,0,0 },  // Inst #316 = CMPGDU_EQ_QB
  { 317,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo66,0,0 },  // Inst #317 = CMPGDU_LE_QB
  { 318,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo66,0,0 },  // Inst #318 = CMPGDU_LT_QB
  { 319,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo66,0,0 },  // Inst #319 = CMPGU_EQ_QB
  { 320,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo66,0,0 },  // Inst #320 = CMPGU_LE_QB
  { 321,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo66,0,0 },  // Inst #321 = CMPGU_LT_QB
  { 322,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo10,0,0 },  // Inst #322 = CMPU_EQ_QB
  { 323,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo10,0,0 },  // Inst #323 = CMPU_LE_QB
  { 324,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo10,0,0 },  // Inst #324 = CMPU_LT_QB
  { 325,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo10,0,0 },  // Inst #325 = CMP_EQ_PH
  { 326,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo10,0,0 },  // Inst #326 = CMP_LE_PH
  { 327,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList8, OperandInfo10,0,0 },  // Inst #327 = CMP_LT_PH
  { 328,	3,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable), 0x0ULL, NULL, NULL, OperandInfo3,0,0 },  // Inst #328 = CONSTPOOL_ENTRY
  { 329,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo67,0,0 },  // Inst #329 = COPY_FD_PSEUDO
  { 330,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo68,0,0 },  // Inst #330 = COPY_FW_PSEUDO
  { 331,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo69,0,0 },  // Inst #331 = COPY_S_B
  { 332,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo70,0,0 },  // Inst #332 = COPY_S_H
  { 333,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo71,0,0 },  // Inst #333 = COPY_S_W
  { 334,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo69,0,0 },  // Inst #334 = COPY_U_B
  { 335,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo70,0,0 },  // Inst #335 = COPY_U_H
  { 336,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo71,0,0 },  // Inst #336 = COPY_U_W
  { 337,	2,	1,	7,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo72,0,0 },  // Inst #337 = CTC1
  { 338,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo73,0,0 },  // Inst #338 = CTCMSA
  { 339,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo74,0,0 },  // Inst #339 = CVT_D32_S
  { 340,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo74,0,0 },  // Inst #340 = CVT_D32_W
  { 341,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #341 = CVT_D64_L
  { 342,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo60,0,0 },  // Inst #342 = CVT_D64_S
  { 343,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo60,0,0 },  // Inst #343 = CVT_D64_W
  { 344,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #344 = CVT_L_D64
  { 345,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo60,0,0 },  // Inst #345 = CVT_L_S
  { 346,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo61,0,0 },  // Inst #346 = CVT_S_D32
  { 347,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo62,0,0 },  // Inst #347 = CVT_S_D64
  { 348,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo62,0,0 },  // Inst #348 = CVT_S_L
  { 349,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #349 = CVT_S_W
  { 350,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo61,0,0 },  // Inst #350 = CVT_W_D32
  { 351,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo62,0,0 },  // Inst #351 = CVT_W_D64
  { 352,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #352 = CVT_W_S
  { 353,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #353 = C_EQ_D32
  { 354,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #354 = C_EQ_D64
  { 355,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #355 = C_EQ_S
  { 356,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #356 = C_F_D32
  { 357,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #357 = C_F_D64
  { 358,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #358 = C_F_S
  { 359,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #359 = C_LE_D32
  { 360,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #360 = C_LE_D64
  { 361,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #361 = C_LE_S
  { 362,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #362 = C_LT_D32
  { 363,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #363 = C_LT_D64
  { 364,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #364 = C_LT_S
  { 365,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #365 = C_NGE_D32
  { 366,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #366 = C_NGE_D64
  { 367,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #367 = C_NGE_S
  { 368,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #368 = C_NGLE_D32
  { 369,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #369 = C_NGLE_D64
  { 370,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #370 = C_NGLE_S
  { 371,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #371 = C_NGL_D32
  { 372,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #372 = C_NGL_D64
  { 373,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #373 = C_NGL_S
  { 374,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #374 = C_NGT_D32
  { 375,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #375 = C_NGT_D64
  { 376,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #376 = C_NGT_S
  { 377,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #377 = C_OLE_D32
  { 378,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #378 = C_OLE_D64
  { 379,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #379 = C_OLE_S
  { 380,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #380 = C_OLT_D32
  { 381,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #381 = C_OLT_D64
  { 382,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #382 = C_OLT_S
  { 383,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #383 = C_SEQ_D32
  { 384,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #384 = C_SEQ_D64
  { 385,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #385 = C_SEQ_S
  { 386,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #386 = C_SF_D32
  { 387,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #387 = C_SF_D64
  { 388,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #388 = C_SF_S
  { 389,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #389 = C_UEQ_D32
  { 390,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #390 = C_UEQ_D64
  { 391,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #391 = C_UEQ_S
  { 392,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #392 = C_ULE_D32
  { 393,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #393 = C_ULE_D64
  { 394,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #394 = C_ULE_S
  { 395,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #395 = C_ULT_D32
  { 396,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #396 = C_ULT_D64
  { 397,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #397 = C_ULT_S
  { 398,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #398 = C_UN_D32
  { 399,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #399 = C_UN_D64
  { 400,	2,	0,	8,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #400 = C_UN_S
  { 401,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo76,0,0 },  // Inst #401 = CmpRxRy16
  { 402,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo30,0,0 },  // Inst #402 = CmpiRxImm16
  { 403,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo30,0,0 },  // Inst #403 = CmpiRxImmX16
  { 404,	1,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5,0,0 },  // Inst #404 = Constant32
  { 405,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo23,0,0 },  // Inst #405 = DADD
  { 406,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #406 = DADDi
  { 407,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #407 = DADDiu
  { 408,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo23,0,0 },  // Inst #408 = DADDu
  { 409,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo77,0,0 },  // Inst #409 = DCLO
  { 410,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo77,0,0 },  // Inst #410 = DCLZ
  { 411,	0,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0,0,0 },  // Inst #411 = DERET
  { 412,	4,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo78,0,0 },  // Inst #412 = DEXT
  { 413,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo78,0,0 },  // Inst #413 = DEXTM
  { 414,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo78,0,0 },  // Inst #414 = DEXTU
  { 415,	1,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo53,0,0 },  // Inst #415 = DI
  { 416,	5,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo79,0,0 },  // Inst #416 = DINS
  { 417,	5,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo79,0,0 },  // Inst #417 = DINSM
  { 418,	5,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo79,0,0 },  // Inst #418 = DINSU
  { 419,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #419 = DIV_S_B
  { 420,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #420 = DIV_S_D
  { 421,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #421 = DIV_S_H
  { 422,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #422 = DIV_S_W
  { 423,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #423 = DIV_U_B
  { 424,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #424 = DIV_U_D
  { 425,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #425 = DIV_U_H
  { 426,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #426 = DIV_U_W
  { 427,	3,	3,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #427 = DMFC0
  { 428,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo80,0,0 },  // Inst #428 = DMFC1
  { 429,	3,	3,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #429 = DMFC2
  { 430,	3,	3,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #430 = DMTC0
  { 431,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo81,0,0 },  // Inst #431 = DMTC1
  { 432,	3,	3,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #432 = DMTC2
  { 433,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList9, OperandInfo77,0,0 },  // Inst #433 = DMULT
  { 434,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList9, OperandInfo77,0,0 },  // Inst #434 = DMULTu
  { 435,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo82,0,0 },  // Inst #435 = DOTP_S_D
  { 436,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo83,0,0 },  // Inst #436 = DOTP_S_H
  { 437,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo84,0,0 },  // Inst #437 = DOTP_S_W
  { 438,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo82,0,0 },  // Inst #438 = DOTP_U_D
  { 439,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo83,0,0 },  // Inst #439 = DOTP_U_H
  { 440,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo84,0,0 },  // Inst #440 = DOTP_U_W
  { 441,	4,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo85,0,0 },  // Inst #441 = DPADD_S_D
  { 442,	4,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo86,0,0 },  // Inst #442 = DPADD_S_H
  { 443,	4,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo87,0,0 },  // Inst #443 = DPADD_S_W
  { 444,	4,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo85,0,0 },  // Inst #444 = DPADD_U_D
  { 445,	4,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo86,0,0 },  // Inst #445 = DPADD_U_H
  { 446,	4,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo87,0,0 },  // Inst #446 = DPADD_U_W
  { 447,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #447 = DPAQX_SA_W_PH
  { 448,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #448 = DPAQX_S_W_PH
  { 449,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #449 = DPAQ_SA_L_W
  { 450,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #450 = DPAQ_S_W_PH
  { 451,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #451 = DPAU_H_QBL
  { 452,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #452 = DPAU_H_QBR
  { 453,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #453 = DPAX_W_PH
  { 454,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #454 = DPA_W_PH
  { 455,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #455 = DPSQX_SA_W_PH
  { 456,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #456 = DPSQX_S_W_PH
  { 457,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #457 = DPSQ_SA_L_W
  { 458,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #458 = DPSQ_S_W_PH
  { 459,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo85,0,0 },  // Inst #459 = DPSUB_S_D
  { 460,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo86,0,0 },  // Inst #460 = DPSUB_S_H
  { 461,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo87,0,0 },  // Inst #461 = DPSUB_S_W
  { 462,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo85,0,0 },  // Inst #462 = DPSUB_U_D
  { 463,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo86,0,0 },  // Inst #463 = DPSUB_U_H
  { 464,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo87,0,0 },  // Inst #464 = DPSUB_U_W
  { 465,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #465 = DPSU_H_QBL
  { 466,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #466 = DPSU_H_QBR
  { 467,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #467 = DPSX_W_PH
  { 468,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #468 = DPS_W_PH
  { 469,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #469 = DROTR
  { 470,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #470 = DROTR32
  { 471,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo89,0,0 },  // Inst #471 = DROTRV
  { 472,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo77,0,0 },  // Inst #472 = DSBH
  { 473,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList9, OperandInfo77,0,0 },  // Inst #473 = DSDIV
  { 474,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo77,0,0 },  // Inst #474 = DSHD
  { 475,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #475 = DSLL
  { 476,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #476 = DSLL32
  { 477,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo90,0,0 },  // Inst #477 = DSLL64_32
  { 478,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo89,0,0 },  // Inst #478 = DSLLV
  { 479,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #479 = DSRA
  { 480,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #480 = DSRA32
  { 481,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo89,0,0 },  // Inst #481 = DSRAV
  { 482,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #482 = DSRL
  { 483,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #483 = DSRL32
  { 484,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo89,0,0 },  // Inst #484 = DSRLV
  { 485,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo23,0,0 },  // Inst #485 = DSUBu
  { 486,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList9, OperandInfo77,0,0 },  // Inst #486 = DUDIV
  { 487,	2,	0,	4,	2,	0, 0x0ULL, NULL, ImplicitList11, OperandInfo76,0,0 },  // Inst #487 = DivRxRy16
  { 488,	2,	0,	4,	2,	0, 0x0ULL, NULL, ImplicitList11, OperandInfo76,0,0 },  // Inst #488 = DivuRxRy16
  { 489,	1,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo53,0,0 },  // Inst #489 = EI
  { 490,	0,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0,0,0 },  // Inst #490 = ERET
  { 491,	4,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo91,0,0 },  // Inst #491 = EXT
  { 492,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList12, OperandInfo92,0,0 },  // Inst #492 = EXTP
  { 493,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList13, OperandInfo92,0,0 },  // Inst #493 = EXTPDP
  { 494,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList13, OperandInfo93,0,0 },  // Inst #494 = EXTPDPV
  { 495,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList6, ImplicitList12, OperandInfo93,0,0 },  // Inst #495 = EXTPV
  { 496,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo93,0,0 },  // Inst #496 = EXTRV_RS_W
  { 497,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo93,0,0 },  // Inst #497 = EXTRV_R_W
  { 498,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo93,0,0 },  // Inst #498 = EXTRV_S_H
  { 499,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo93,0,0 },  // Inst #499 = EXTRV_W
  { 500,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo92,0,0 },  // Inst #500 = EXTR_RS_W
  { 501,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo92,0,0 },  // Inst #501 = EXTR_R_W
  { 502,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo92,0,0 },  // Inst #502 = EXTR_S_H
  { 503,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList14, OperandInfo92,0,0 },  // Inst #503 = EXTR_W
  { 504,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo91,0,0 },  // Inst #504 = EXT_MM
  { 505,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo94,0,0 },  // Inst #505 = ExtractElementF64
  { 506,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo95,0,0 },  // Inst #506 = ExtractElementF64_64
  { 507,	2,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #507 = FABS_D
  { 508,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #508 = FABS_D32
  { 509,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #509 = FABS_D64
  { 510,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #510 = FABS_S
  { 511,	2,	1,	0,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #511 = FABS_W
  { 512,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #512 = FADD_D
  { 513,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo98,0,0 },  // Inst #513 = FADD_D32
  { 514,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo99,0,0 },  // Inst #514 = FADD_D64
  { 515,	3,	1,	12,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo100,0,0 },  // Inst #515 = FADD_S
  { 516,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #516 = FADD_W
  { 517,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #517 = FCAF_D
  { 518,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #518 = FCAF_W
  { 519,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #519 = FCEQ_D
  { 520,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #520 = FCEQ_W
  { 521,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #521 = FCLASS_D
  { 522,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #522 = FCLASS_W
  { 523,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #523 = FCLE_D
  { 524,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #524 = FCLE_W
  { 525,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #525 = FCLT_D
  { 526,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #526 = FCLT_W
  { 527,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo101,0,0 },  // Inst #527 = FCMP_D32
  { 528,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo102,0,0 },  // Inst #528 = FCMP_D64
  { 529,	3,	0,	8,	4,	0, 0x4ULL, NULL, ImplicitList15, OperandInfo103,0,0 },  // Inst #529 = FCMP_S32
  { 530,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #530 = FCNE_D
  { 531,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #531 = FCNE_W
  { 532,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #532 = FCOR_D
  { 533,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #533 = FCOR_W
  { 534,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #534 = FCUEQ_D
  { 535,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #535 = FCUEQ_W
  { 536,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #536 = FCULE_D
  { 537,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #537 = FCULE_W
  { 538,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #538 = FCULT_D
  { 539,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #539 = FCULT_W
  { 540,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #540 = FCUNE_D
  { 541,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #541 = FCUNE_W
  { 542,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #542 = FCUN_D
  { 543,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #543 = FCUN_W
  { 544,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #544 = FDIV_D
  { 545,	3,	1,	13,	4,	0, 0x4ULL, NULL, NULL, OperandInfo98,0,0 },  // Inst #545 = FDIV_D32
  { 546,	3,	1,	13,	4,	0, 0x4ULL, NULL, NULL, OperandInfo99,0,0 },  // Inst #546 = FDIV_D64
  { 547,	3,	1,	14,	4,	0, 0x4ULL, NULL, NULL, OperandInfo100,0,0 },  // Inst #547 = FDIV_S
  { 548,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #548 = FDIV_W
  { 549,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo104,0,0 },  // Inst #549 = FEXDO_H
  { 550,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo105,0,0 },  // Inst #550 = FEXDO_W
  { 551,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #551 = FEXP2_D
  { 552,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo106,0,0 },  // Inst #552 = FEXP2_D_1_PSEUDO
  { 553,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #553 = FEXP2_W
  { 554,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo107,0,0 },  // Inst #554 = FEXP2_W_1_PSEUDO
  { 555,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo108,0,0 },  // Inst #555 = FEXUPL_D
  { 556,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo109,0,0 },  // Inst #556 = FEXUPL_W
  { 557,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo108,0,0 },  // Inst #557 = FEXUPR_D
  { 558,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo109,0,0 },  // Inst #558 = FEXUPR_W
  { 559,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #559 = FFINT_S_D
  { 560,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #560 = FFINT_S_W
  { 561,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #561 = FFINT_U_D
  { 562,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #562 = FFINT_U_W
  { 563,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo108,0,0 },  // Inst #563 = FFQL_D
  { 564,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo109,0,0 },  // Inst #564 = FFQL_W
  { 565,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo108,0,0 },  // Inst #565 = FFQR_D
  { 566,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo109,0,0 },  // Inst #566 = FFQR_W
  { 567,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo110,0,0 },  // Inst #567 = FILL_B
  { 568,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo111,0,0 },  // Inst #568 = FILL_FD_PSEUDO
  { 569,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo112,0,0 },  // Inst #569 = FILL_FW_PSEUDO
  { 570,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo113,0,0 },  // Inst #570 = FILL_H
  { 571,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo114,0,0 },  // Inst #571 = FILL_W
  { 572,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #572 = FLOG2_D
  { 573,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #573 = FLOG2_W
  { 574,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #574 = FLOOR_L_D64
  { 575,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo60,0,0 },  // Inst #575 = FLOOR_L_S
  { 576,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo61,0,0 },  // Inst #576 = FLOOR_W_D32
  { 577,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo62,0,0 },  // Inst #577 = FLOOR_W_D64
  { 578,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #578 = FLOOR_W_S
  { 579,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #579 = FMADD_D
  { 580,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #580 = FMADD_W
  { 581,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #581 = FMAX_A_D
  { 582,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #582 = FMAX_A_W
  { 583,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #583 = FMAX_D
  { 584,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #584 = FMAX_W
  { 585,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #585 = FMIN_A_D
  { 586,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #586 = FMIN_A_W
  { 587,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #587 = FMIN_D
  { 588,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #588 = FMIN_W
  { 589,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #589 = FMOV_D32
  { 590,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #590 = FMOV_D64
  { 591,	2,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #591 = FMOV_S
  { 592,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #592 = FMSUB_D
  { 593,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #593 = FMSUB_W
  { 594,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #594 = FMUL_D
  { 595,	3,	1,	15,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo98,0,0 },  // Inst #595 = FMUL_D32
  { 596,	3,	1,	15,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo99,0,0 },  // Inst #596 = FMUL_D64
  { 597,	3,	1,	16,	4,	0|(1<<MCID::Commutable), 0x4ULL, NULL, NULL, OperandInfo100,0,0 },  // Inst #597 = FMUL_S
  { 598,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #598 = FMUL_W
  { 599,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #599 = FNEG_D32
  { 600,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #600 = FNEG_D64
  { 601,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #601 = FNEG_S
  { 602,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #602 = FRCP_D
  { 603,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #603 = FRCP_W
  { 604,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #604 = FRINT_D
  { 605,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #605 = FRINT_W
  { 606,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #606 = FRSQRT_D
  { 607,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #607 = FRSQRT_W
  { 608,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #608 = FSAF_D
  { 609,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #609 = FSAF_W
  { 610,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #610 = FSEQ_D
  { 611,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #611 = FSEQ_W
  { 612,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #612 = FSLE_D
  { 613,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #613 = FSLE_W
  { 614,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #614 = FSLT_D
  { 615,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #615 = FSLT_W
  { 616,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #616 = FSNE_D
  { 617,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #617 = FSNE_W
  { 618,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #618 = FSOR_D
  { 619,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #619 = FSOR_W
  { 620,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #620 = FSQRT_D
  { 621,	2,	1,	17,	4,	0, 0x4ULL, NULL, NULL, OperandInfo75,0,0 },  // Inst #621 = FSQRT_D32
  { 622,	2,	1,	17,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #622 = FSQRT_D64
  { 623,	2,	1,	18,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #623 = FSQRT_S
  { 624,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #624 = FSQRT_W
  { 625,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #625 = FSUB_D
  { 626,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo98,0,0 },  // Inst #626 = FSUB_D32
  { 627,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo99,0,0 },  // Inst #627 = FSUB_D64
  { 628,	3,	1,	12,	4,	0, 0x4ULL, NULL, NULL, OperandInfo100,0,0 },  // Inst #628 = FSUB_S
  { 629,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #629 = FSUB_W
  { 630,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #630 = FSUEQ_D
  { 631,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #631 = FSUEQ_W
  { 632,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #632 = FSULE_D
  { 633,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #633 = FSULE_W
  { 634,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #634 = FSULT_D
  { 635,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #635 = FSULT_W
  { 636,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #636 = FSUNE_D
  { 637,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #637 = FSUNE_W
  { 638,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #638 = FSUN_D
  { 639,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #639 = FSUN_W
  { 640,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #640 = FTINT_S_D
  { 641,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #641 = FTINT_S_W
  { 642,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #642 = FTINT_U_D
  { 643,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #643 = FTINT_U_W
  { 644,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo104,0,0 },  // Inst #644 = FTQ_H
  { 645,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo105,0,0 },  // Inst #645 = FTQ_W
  { 646,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #646 = FTRUNC_S_D
  { 647,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #647 = FTRUNC_S_W
  { 648,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #648 = FTRUNC_U_D
  { 649,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #649 = FTRUNC_U_W
  { 650,	4,	2,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo115,0,0 },  // Inst #650 = GotPrologue16
  { 651,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo82,0,0 },  // Inst #651 = HADD_S_D
  { 652,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo83,0,0 },  // Inst #652 = HADD_S_H
  { 653,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo84,0,0 },  // Inst #653 = HADD_S_W
  { 654,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo82,0,0 },  // Inst #654 = HADD_U_D
  { 655,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo83,0,0 },  // Inst #655 = HADD_U_H
  { 656,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo84,0,0 },  // Inst #656 = HADD_U_W
  { 657,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo82,0,0 },  // Inst #657 = HSUB_S_D
  { 658,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo83,0,0 },  // Inst #658 = HSUB_S_H
  { 659,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo84,0,0 },  // Inst #659 = HSUB_S_W
  { 660,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo82,0,0 },  // Inst #660 = HSUB_U_D
  { 661,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo83,0,0 },  // Inst #661 = HSUB_U_H
  { 662,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo84,0,0 },  // Inst #662 = HSUB_U_W
  { 663,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #663 = ILVEV_B
  { 664,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #664 = ILVEV_D
  { 665,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #665 = ILVEV_H
  { 666,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #666 = ILVEV_W
  { 667,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #667 = ILVL_B
  { 668,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #668 = ILVL_D
  { 669,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #669 = ILVL_H
  { 670,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #670 = ILVL_W
  { 671,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #671 = ILVOD_B
  { 672,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #672 = ILVOD_D
  { 673,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #673 = ILVOD_H
  { 674,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #674 = ILVOD_W
  { 675,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #675 = ILVR_B
  { 676,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #676 = ILVR_D
  { 677,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #677 = ILVR_H
  { 678,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #678 = ILVR_W
  { 679,	5,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo116,0,0 },  // Inst #679 = INS
  { 680,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo117,0,0 },  // Inst #680 = INSERT_B
  { 681,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo118,0,0 },  // Inst #681 = INSERT_FD_PSEUDO
  { 682,	4,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119,0,0 },  // Inst #682 = INSERT_FW_PSEUDO
  { 683,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo120,0,0 },  // Inst #683 = INSERT_H
  { 684,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo121,0,0 },  // Inst #684 = INSERT_W
  { 685,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList16, NULL, OperandInfo122,0,0 },  // Inst #685 = INSV
  { 686,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo123,0,0 },  // Inst #686 = INSVE_B
  { 687,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo124,0,0 },  // Inst #687 = INSVE_D
  { 688,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo125,0,0 },  // Inst #688 = INSVE_H
  { 689,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo126,0,0 },  // Inst #689 = INSVE_W
  { 690,	5,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo116,0,0 },  // Inst #690 = INS_MM
  { 691,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x3ULL, NULL, ImplicitList4, OperandInfo5,0,0 },  // Inst #691 = J
  { 692,	1,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x3ULL, NULL, ImplicitList5, OperandInfo5,0,0 },  // Inst #692 = JAL
  { 693,	2,	1,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList5, OperandInfo11,0,0 },  // Inst #693 = JALR
  { 694,	2,	1,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList5, OperandInfo77,0,0 },  // Inst #694 = JALR64
  { 695,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x0ULL, NULL, ImplicitList5, OperandInfo127,0,0 },  // Inst #695 = JALR64Pseudo
  { 696,	1,	0,	5,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::DelaySlot)|(1<<MCID::Call), 0x0ULL, NULL, ImplicitList5, OperandInfo53,0,0 },  // Inst #696 = JALRPseudo
  { 697,	2,	1,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList5, OperandInfo11,0,0 },  // Inst #697 = JALR_MM
  { 698,	1,	0,	5,	4,	0|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x3ULL, NULL, ImplicitList5, OperandInfo5,0,0 },  // Inst #698 = JAL_MM
  { 699,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo53,0,0 },  // Inst #699 = JR
  { 700,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x1ULL, NULL, NULL, OperandInfo127,0,0 },  // Inst #700 = JR64
  { 701,	1,	0,	5,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo53,0,0 },  // Inst #701 = JR_MM
  { 702,	1,	0,	5,	4,	0|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x3ULL, NULL, ImplicitList4, OperandInfo5,0,0 },  // Inst #702 = J_MM
  { 703,	1,	0,	4,	4,	0|(1<<MCID::Call), 0x0ULL, NULL, NULL, OperandInfo5,0,0 },  // Inst #703 = Jal16
  { 704,	0,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #704 = JrRa16
  { 705,	0,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #705 = JrcRa16
  { 706,	1,	0,	4,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo128,0,0 },  // Inst #706 = JrcRx16
  { 707,	1,	0,	5,	2,	0|(1<<MCID::Call), 0x0ULL, NULL, NULL, OperandInfo128,0,0 },  // Inst #707 = JumpLinkReg16
  { 708,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #708 = LB
  { 709,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #709 = LB64
  { 710,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo131,0,0 },  // Inst #710 = LBUX
  { 711,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #711 = LB_MM
  { 712,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #712 = LBu
  { 713,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #713 = LBu64
  { 714,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #714 = LBu_MM
  { 715,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #715 = LD
  { 716,	3,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo132,0,0 },  // Inst #716 = LDC1
  { 717,	3,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo133,0,0 },  // Inst #717 = LDC164
  { 718,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo134,0,0 },  // Inst #718 = LDC2
  { 719,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo135,0,0 },  // Inst #719 = LDI_B
  { 720,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo136,0,0 },  // Inst #720 = LDI_D
  { 721,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo137,0,0 },  // Inst #721 = LDI_H
  { 722,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo138,0,0 },  // Inst #722 = LDI_W
  { 723,	4,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo139,0,0 },  // Inst #723 = LDL
  { 724,	4,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo139,0,0 },  // Inst #724 = LDR
  { 725,	3,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo140,0,0 },  // Inst #725 = LDXC1
  { 726,	3,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo141,0,0 },  // Inst #726 = LDXC164
  { 727,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo142,0,0 },  // Inst #727 = LD_B
  { 728,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo143,0,0 },  // Inst #728 = LD_D
  { 729,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo144,0,0 },  // Inst #729 = LD_H
  { 730,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo145,0,0 },  // Inst #730 = LD_W
  { 731,	3,	1,	0,	4,	0, 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #731 = LEA_ADDiu
  { 732,	3,	1,	0,	4,	0, 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #732 = LEA_ADDiu64
  { 733,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #733 = LH
  { 734,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #734 = LH64
  { 735,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo131,0,0 },  // Inst #735 = LHX
  { 736,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #736 = LH_MM
  { 737,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #737 = LHu
  { 738,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #738 = LHu64
  { 739,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #739 = LHu_MM
  { 740,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #740 = LL
  { 741,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #741 = LLD
  { 742,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo146,0,0 },  // Inst #742 = LOAD_ACC128
  { 743,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo147,0,0 },  // Inst #743 = LOAD_ACC64
  { 744,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo148,0,0 },  // Inst #744 = LOAD_ACC64DSP
  { 745,	3,	1,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo149,0,0 },  // Inst #745 = LOAD_CCOND_DSP
  { 746,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo150,0,0 },  // Inst #746 = LSA
  { 747,	3,	1,	20,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo140,0,0 },  // Inst #747 = LUXC1
  { 748,	3,	1,	20,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo141,0,0 },  // Inst #748 = LUXC164
  { 749,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #749 = LUi
  { 750,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo152,0,0 },  // Inst #750 = LUi64
  { 751,	2,	1,	1,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x2ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #751 = LUi_MM
  { 752,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #752 = LW
  { 753,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #753 = LW64
  { 754,	3,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo153,0,0 },  // Inst #754 = LWC1
  { 755,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo134,0,0 },  // Inst #755 = LWC2
  { 756,	4,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo154,0,0 },  // Inst #756 = LWL
  { 757,	4,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo139,0,0 },  // Inst #757 = LWL64
  { 758,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo155,0,0 },  // Inst #758 = LWL_MM
  { 759,	4,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo154,0,0 },  // Inst #759 = LWR
  { 760,	4,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo139,0,0 },  // Inst #760 = LWR64
  { 761,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo155,0,0 },  // Inst #761 = LWR_MM
  { 762,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo131,0,0 },  // Inst #762 = LWX
  { 763,	3,	1,	20,	4,	0|(1<<MCID::MayLoad), 0x5ULL, NULL, NULL, OperandInfo156,0,0 },  // Inst #763 = LWXC1
  { 764,	3,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #764 = LW_MM
  { 765,	3,	1,	19,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #765 = LWu
  { 766,	4,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo157,0,0 },  // Inst #766 = LbRxRyOffMemX16
  { 767,	4,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo157,0,0 },  // Inst #767 = LbuRxRyOffMemX16
  { 768,	4,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo157,0,0 },  // Inst #768 = LhRxRyOffMemX16
  { 769,	4,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo157,0,0 },  // Inst #769 = LhuRxRyOffMemX16
  { 770,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo30,0,0 },  // Inst #770 = LiRxImm16
  { 771,	2,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo30,0,0 },  // Inst #771 = LiRxImmAlignX16
  { 772,	2,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo30,0,0 },  // Inst #772 = LiRxImmX16
  { 773,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #773 = LoadAddr32Imm
  { 774,	3,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #774 = LoadAddr32Reg
  { 775,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #775 = LoadImm32Reg
  { 776,	3,	1,	2,	2,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo158,0,0 },  // Inst #776 = LwConstant32
  { 777,	3,	1,	19,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo159,0,0 },  // Inst #777 = LwRxPcTcp16
  { 778,	3,	1,	19,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo159,0,0 },  // Inst #778 = LwRxPcTcpX16
  { 779,	4,	1,	19,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo157,0,0 },  // Inst #779 = LwRxRyOffMemX16
  { 780,	3,	1,	19,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, NULL, OperandInfo160,0,0 },  // Inst #780 = LwRxSpImmX16
  { 781,	2,	0,	10,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo11,0,0 },  // Inst #781 = MADD
  { 782,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #782 = MADDR_Q_H
  { 783,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #783 = MADDR_Q_W
  { 784,	2,	0,	10,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo11,0,0 },  // Inst #784 = MADDU
  { 785,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #785 = MADDU_DSP
  { 786,	2,	0,	10,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo11,0,0 },  // Inst #786 = MADDU_MM
  { 787,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo45,0,0 },  // Inst #787 = MADDV_B
  { 788,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #788 = MADDV_D
  { 789,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #789 = MADDV_H
  { 790,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #790 = MADDV_W
  { 791,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo161,0,0 },  // Inst #791 = MADD_D32
  { 792,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo162,0,0 },  // Inst #792 = MADD_D64
  { 793,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #793 = MADD_DSP
  { 794,	2,	0,	10,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo11,0,0 },  // Inst #794 = MADD_MM
  { 795,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #795 = MADD_Q_H
  { 796,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #796 = MADD_Q_W
  { 797,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo163,0,0 },  // Inst #797 = MADD_S
  { 798,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #798 = MAQ_SA_W_PHL
  { 799,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #799 = MAQ_SA_W_PHR
  { 800,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #800 = MAQ_S_W_PHL
  { 801,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #801 = MAQ_S_W_PHR
  { 802,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #802 = MAXI_S_B
  { 803,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #803 = MAXI_S_D
  { 804,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #804 = MAXI_S_H
  { 805,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #805 = MAXI_S_W
  { 806,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #806 = MAXI_U_B
  { 807,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #807 = MAXI_U_D
  { 808,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #808 = MAXI_U_H
  { 809,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #809 = MAXI_U_W
  { 810,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #810 = MAX_A_B
  { 811,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #811 = MAX_A_D
  { 812,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #812 = MAX_A_H
  { 813,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #813 = MAX_A_W
  { 814,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #814 = MAX_S_B
  { 815,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #815 = MAX_S_D
  { 816,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #816 = MAX_S_H
  { 817,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #817 = MAX_S_W
  { 818,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #818 = MAX_U_B
  { 819,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #819 = MAX_U_D
  { 820,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #820 = MAX_U_H
  { 821,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #821 = MAX_U_W
  { 822,	3,	3,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #822 = MFC0
  { 823,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo164,0,0 },  // Inst #823 = MFC1
  { 824,	3,	3,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #824 = MFC2
  { 825,	2,	1,	9,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo165,0,0 },  // Inst #825 = MFHC1
  { 826,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList17, NULL, OperandInfo53,0,0 },  // Inst #826 = MFHI
  { 827,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList18, NULL, OperandInfo127,0,0 },  // Inst #827 = MFHI64
  { 828,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo166,0,0 },  // Inst #828 = MFHI_DSP
  { 829,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList17, NULL, OperandInfo53,0,0 },  // Inst #829 = MFHI_MM
  { 830,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList17, NULL, OperandInfo53,0,0 },  // Inst #830 = MFLO
  { 831,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList18, NULL, OperandInfo127,0,0 },  // Inst #831 = MFLO64
  { 832,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo166,0,0 },  // Inst #832 = MFLO_DSP
  { 833,	1,	1,	21,	4,	0, 0x1ULL, ImplicitList17, NULL, OperandInfo53,0,0 },  // Inst #833 = MFLO_MM
  { 834,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #834 = MINI_S_B
  { 835,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #835 = MINI_S_D
  { 836,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #836 = MINI_S_H
  { 837,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #837 = MINI_S_W
  { 838,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #838 = MINI_U_B
  { 839,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #839 = MINI_U_D
  { 840,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #840 = MINI_U_H
  { 841,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #841 = MINI_U_W
  { 842,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #842 = MIN_A_B
  { 843,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #843 = MIN_A_D
  { 844,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #844 = MIN_A_H
  { 845,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #845 = MIN_A_W
  { 846,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #846 = MIN_S_B
  { 847,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #847 = MIN_S_D
  { 848,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #848 = MIN_S_H
  { 849,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #849 = MIN_S_W
  { 850,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #850 = MIN_U_B
  { 851,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #851 = MIN_U_D
  { 852,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #852 = MIN_U_H
  { 853,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #853 = MIN_U_W
  { 854,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, ImplicitList19, NULL, OperandInfo167,0,0 },  // Inst #854 = MIPSeh_return32
  { 855,	2,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, ImplicitList19, NULL, OperandInfo168,0,0 },  // Inst #855 = MIPSeh_return64
  { 856,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #856 = MODSUB
  { 857,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #857 = MOD_S_B
  { 858,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #858 = MOD_S_D
  { 859,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #859 = MOD_S_H
  { 860,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #860 = MOD_S_W
  { 861,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #861 = MOD_U_B
  { 862,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #862 = MOD_U_D
  { 863,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #863 = MOD_U_H
  { 864,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #864 = MOD_U_W
  { 865,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo169,0,0 },  // Inst #865 = MOVE_V
  { 866,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo170,0,0 },  // Inst #866 = MOVF_D32
  { 867,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo171,0,0 },  // Inst #867 = MOVF_D64
  { 868,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo172,0,0 },  // Inst #868 = MOVF_I
  { 869,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo173,0,0 },  // Inst #869 = MOVF_I64
  { 870,	4,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo172,0,0 },  // Inst #870 = MOVF_I_MM
  { 871,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo174,0,0 },  // Inst #871 = MOVF_S
  { 872,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo175,0,0 },  // Inst #872 = MOVN_I64_D64
  { 873,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo176,0,0 },  // Inst #873 = MOVN_I64_I
  { 874,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo177,0,0 },  // Inst #874 = MOVN_I64_I64
  { 875,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo178,0,0 },  // Inst #875 = MOVN_I64_S
  { 876,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo179,0,0 },  // Inst #876 = MOVN_I_D32
  { 877,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo180,0,0 },  // Inst #877 = MOVN_I_D64
  { 878,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo181,0,0 },  // Inst #878 = MOVN_I_I
  { 879,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo182,0,0 },  // Inst #879 = MOVN_I_I64
  { 880,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo181,0,0 },  // Inst #880 = MOVN_I_MM
  { 881,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo183,0,0 },  // Inst #881 = MOVN_I_S
  { 882,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo170,0,0 },  // Inst #882 = MOVT_D32
  { 883,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo171,0,0 },  // Inst #883 = MOVT_D64
  { 884,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo172,0,0 },  // Inst #884 = MOVT_I
  { 885,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo173,0,0 },  // Inst #885 = MOVT_I64
  { 886,	4,	1,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo172,0,0 },  // Inst #886 = MOVT_I_MM
  { 887,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo174,0,0 },  // Inst #887 = MOVT_S
  { 888,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo175,0,0 },  // Inst #888 = MOVZ_I64_D64
  { 889,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo176,0,0 },  // Inst #889 = MOVZ_I64_I
  { 890,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo177,0,0 },  // Inst #890 = MOVZ_I64_I64
  { 891,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo178,0,0 },  // Inst #891 = MOVZ_I64_S
  { 892,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo179,0,0 },  // Inst #892 = MOVZ_I_D32
  { 893,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo180,0,0 },  // Inst #893 = MOVZ_I_D64
  { 894,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo181,0,0 },  // Inst #894 = MOVZ_I_I
  { 895,	4,	1,	1,	4,	0, 0x4ULL, NULL, NULL, OperandInfo182,0,0 },  // Inst #895 = MOVZ_I_I64
  { 896,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo181,0,0 },  // Inst #896 = MOVZ_I_MM
  { 897,	4,	1,	7,	4,	0, 0x4ULL, NULL, NULL, OperandInfo183,0,0 },  // Inst #897 = MOVZ_I_S
  { 898,	2,	0,	10,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo11,0,0 },  // Inst #898 = MSUB
  { 899,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #899 = MSUBR_Q_H
  { 900,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #900 = MSUBR_Q_W
  { 901,	2,	0,	10,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo11,0,0 },  // Inst #901 = MSUBU
  { 902,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #902 = MSUBU_DSP
  { 903,	2,	0,	10,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo11,0,0 },  // Inst #903 = MSUBU_MM
  { 904,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo45,0,0 },  // Inst #904 = MSUBV_B
  { 905,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #905 = MSUBV_D
  { 906,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #906 = MSUBV_H
  { 907,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #907 = MSUBV_W
  { 908,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo161,0,0 },  // Inst #908 = MSUB_D32
  { 909,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo162,0,0 },  // Inst #909 = MSUB_D64
  { 910,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #910 = MSUB_DSP
  { 911,	2,	0,	10,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList11, ImplicitList11, OperandInfo11,0,0 },  // Inst #911 = MSUB_MM
  { 912,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #912 = MSUB_Q_H
  { 913,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #913 = MSUB_Q_W
  { 914,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo163,0,0 },  // Inst #914 = MSUB_S
  { 915,	3,	3,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #915 = MTC0
  { 916,	2,	1,	9,	4,	0|(1<<MCID::Bitcast), 0x4ULL, NULL, NULL, OperandInfo184,0,0 },  // Inst #916 = MTC1
  { 917,	3,	3,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #917 = MTC2
  { 918,	2,	1,	9,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo185,0,0 },  // Inst #918 = MTHC1
  { 919,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList20, OperandInfo53,0,0 },  // Inst #919 = MTHI
  { 920,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList21, OperandInfo127,0,0 },  // Inst #920 = MTHI64
  { 921,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo186,0,0 },  // Inst #921 = MTHI_DSP
  { 922,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList20, OperandInfo53,0,0 },  // Inst #922 = MTHI_MM
  { 923,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList6, OperandInfo187,0,0 },  // Inst #923 = MTHLIP
  { 924,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList22, OperandInfo53,0,0 },  // Inst #924 = MTLO
  { 925,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList23, OperandInfo127,0,0 },  // Inst #925 = MTLO64
  { 926,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo188,0,0 },  // Inst #926 = MTLO_DSP
  { 927,	1,	0,	21,	4,	0, 0x1ULL, NULL, ImplicitList22, OperandInfo53,0,0 },  // Inst #927 = MTLO_MM
  { 928,	3,	1,	22,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, ImplicitList11, OperandInfo12,0,0 },  // Inst #928 = MUL
  { 929,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo66,0,0 },  // Inst #929 = MULEQ_S_W_PHL
  { 930,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo66,0,0 },  // Inst #930 = MULEQ_S_W_PHR
  { 931,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo13,0,0 },  // Inst #931 = MULEU_S_PH_QBL
  { 932,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo13,0,0 },  // Inst #932 = MULEU_S_PH_QBR
  { 933,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo13,0,0 },  // Inst #933 = MULQ_RS_PH
  { 934,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo12,0,0 },  // Inst #934 = MULQ_RS_W
  { 935,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo13,0,0 },  // Inst #935 = MULQ_S_PH
  { 936,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo12,0,0 },  // Inst #936 = MULQ_S_W
  { 937,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #937 = MULR_Q_H
  { 938,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #938 = MULR_Q_W
  { 939,	4,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList10, OperandInfo88,0,0 },  // Inst #939 = MULSAQ_S_W_PH
  { 940,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo88,0,0 },  // Inst #940 = MULSA_W_PH
  { 941,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo11,0,0 },  // Inst #941 = MULT
  { 942,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo189,0,0 },  // Inst #942 = MULTU_DSP
  { 943,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x6ULL, NULL, NULL, OperandInfo189,0,0 },  // Inst #943 = MULT_DSP
  { 944,	2,	0,	22,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo11,0,0 },  // Inst #944 = MULT_MM
  { 945,	2,	0,	10,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo11,0,0 },  // Inst #945 = MULTu
  { 946,	2,	0,	22,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, ImplicitList11, OperandInfo11,0,0 },  // Inst #946 = MULTu_MM
  { 947,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #947 = MULV_B
  { 948,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #948 = MULV_D
  { 949,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #949 = MULV_H
  { 950,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #950 = MULV_W
  { 951,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #951 = MUL_MM
  { 952,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo13,0,0 },  // Inst #952 = MUL_PH
  { 953,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #953 = MUL_Q_H
  { 954,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #954 = MUL_Q_W
  { 955,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList24, OperandInfo13,0,0 },  // Inst #955 = MUL_S_PH
  { 956,	1,	1,	4,	2,	0, 0x0ULL, ImplicitList20, NULL, OperandInfo128,0,0 },  // Inst #956 = Mfhi16
  { 957,	1,	1,	4,	2,	0, 0x0ULL, ImplicitList22, NULL, OperandInfo128,0,0 },  // Inst #957 = Mflo16
  { 958,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo190,0,0 },  // Inst #958 = Move32R16
  { 959,	2,	1,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo191,0,0 },  // Inst #959 = MoveR3216
  { 960,	2,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo76,0,0 },  // Inst #960 = MultRxRy16
  { 961,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo33,0,0 },  // Inst #961 = MultRxRyRz16
  { 962,	2,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo76,0,0 },  // Inst #962 = MultuRxRy16
  { 963,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList11, OperandInfo33,0,0 },  // Inst #963 = MultuRxRyRz16
  { 964,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo169,0,0 },  // Inst #964 = NLOC_B
  { 965,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #965 = NLOC_D
  { 966,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo192,0,0 },  // Inst #966 = NLOC_H
  { 967,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #967 = NLOC_W
  { 968,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo169,0,0 },  // Inst #968 = NLZC_B
  { 969,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #969 = NLZC_D
  { 970,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo192,0,0 },  // Inst #970 = NLZC_H
  { 971,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #971 = NLZC_W
  { 972,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo161,0,0 },  // Inst #972 = NMADD_D32
  { 973,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo162,0,0 },  // Inst #973 = NMADD_D64
  { 974,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo163,0,0 },  // Inst #974 = NMADD_S
  { 975,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo161,0,0 },  // Inst #975 = NMSUB_D32
  { 976,	4,	1,	15,	4,	0, 0x4ULL, NULL, NULL, OperandInfo162,0,0 },  // Inst #976 = NMSUB_D64
  { 977,	4,	1,	16,	4,	0, 0x4ULL, NULL, NULL, OperandInfo163,0,0 },  // Inst #977 = NMSUB_S
  { 978,	0,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #978 = NOP
  { 979,	3,	1,	1,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #979 = NOR
  { 980,	3,	1,	1,	4,	0|(1<<MCID::Commutable), 0x1ULL, NULL, NULL, OperandInfo23,0,0 },  // Inst #980 = NOR64
  { 981,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #981 = NORI_B
  { 982,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #982 = NOR_MM
  { 983,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #983 = NOR_V
  { 984,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #984 = NOR_V_D_PSEUDO
  { 985,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #985 = NOR_V_H_PSEUDO
  { 986,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #986 = NOR_V_W_PSEUDO
  { 987,	2,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo76,0,0 },  // Inst #987 = NegRxRy16
  { 988,	2,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo76,0,0 },  // Inst #988 = NotRxRy16
  { 989,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #989 = OR
  { 990,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo23,0,0 },  // Inst #990 = OR64
  { 991,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #991 = ORI_B
  { 992,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #992 = OR_MM
  { 993,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #993 = OR_V
  { 994,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #994 = OR_V_D_PSEUDO
  { 995,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #995 = OR_V_H_PSEUDO
  { 996,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #996 = OR_V_W_PSEUDO
  { 997,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #997 = ORi
  { 998,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #998 = ORi64
  { 999,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #999 = ORi_MM
  { 1000,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo34,0,0 },  // Inst #1000 = OrRxRxRy16
  { 1001,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #1001 = PACKRL_PH
  { 1002,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1002 = PCKEV_B
  { 1003,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1003 = PCKEV_D
  { 1004,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1004 = PCKEV_H
  { 1005,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1005 = PCKEV_W
  { 1006,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1006 = PCKOD_B
  { 1007,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1007 = PCKOD_D
  { 1008,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1008 = PCKOD_H
  { 1009,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1009 = PCKOD_W
  { 1010,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo169,0,0 },  // Inst #1010 = PCNT_B
  { 1011,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo96,0,0 },  // Inst #1011 = PCNT_D
  { 1012,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo192,0,0 },  // Inst #1012 = PCNT_H
  { 1013,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo97,0,0 },  // Inst #1013 = PCNT_W
  { 1014,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList8, NULL, OperandInfo13,0,0 },  // Inst #1014 = PICK_PH
  { 1015,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, ImplicitList8, NULL, OperandInfo13,0,0 },  // Inst #1015 = PICK_QB
  { 1016,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10,0,0 },  // Inst #1016 = PRECEQU_PH_QBL
  { 1017,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10,0,0 },  // Inst #1017 = PRECEQU_PH_QBLA
  { 1018,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10,0,0 },  // Inst #1018 = PRECEQU_PH_QBR
  { 1019,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10,0,0 },  // Inst #1019 = PRECEQU_PH_QBRA
  { 1020,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo193,0,0 },  // Inst #1020 = PRECEQ_W_PHL
  { 1021,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo193,0,0 },  // Inst #1021 = PRECEQ_W_PHR
  { 1022,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10,0,0 },  // Inst #1022 = PRECEU_PH_QBL
  { 1023,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10,0,0 },  // Inst #1023 = PRECEU_PH_QBLA
  { 1024,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10,0,0 },  // Inst #1024 = PRECEU_PH_QBR
  { 1025,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo10,0,0 },  // Inst #1025 = PRECEU_PH_QBRA
  { 1026,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo13,0,0 },  // Inst #1026 = PRECRQU_S_QB_PH
  { 1027,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo194,0,0 },  // Inst #1027 = PRECRQ_PH_W
  { 1028,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #1028 = PRECRQ_QB_PH
  { 1029,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo194,0,0 },  // Inst #1029 = PRECRQ_RS_PH_W
  { 1030,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #1030 = PRECR_QB_PH
  { 1031,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo195,0,0 },  // Inst #1031 = PRECR_SRA_PH_W
  { 1032,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo195,0,0 },  // Inst #1032 = PRECR_SRA_R_PH_W
  { 1033,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo25,0,0 },  // Inst #1033 = PREPEND
  { 1034,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo196,0,0 },  // Inst #1034 = PseudoCMPU_EQ_QB
  { 1035,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo196,0,0 },  // Inst #1035 = PseudoCMPU_LE_QB
  { 1036,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo196,0,0 },  // Inst #1036 = PseudoCMPU_LT_QB
  { 1037,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo196,0,0 },  // Inst #1037 = PseudoCMP_EQ_PH
  { 1038,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo196,0,0 },  // Inst #1038 = PseudoCMP_LE_PH
  { 1039,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo196,0,0 },  // Inst #1039 = PseudoCMP_LT_PH
  { 1040,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo197,0,0 },  // Inst #1040 = PseudoCVT_D32_W
  { 1041,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo81,0,0 },  // Inst #1041 = PseudoCVT_D64_L
  { 1042,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo198,0,0 },  // Inst #1042 = PseudoCVT_D64_W
  { 1043,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo81,0,0 },  // Inst #1043 = PseudoCVT_S_L
  { 1044,	2,	1,	6,	4,	0|(1<<MCID::Pseudo), 0x4ULL, NULL, NULL, OperandInfo184,0,0 },  // Inst #1044 = PseudoCVT_S_W
  { 1045,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo199,0,0 },  // Inst #1045 = PseudoDMULT
  { 1046,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo199,0,0 },  // Inst #1046 = PseudoDMULTu
  { 1047,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo199,0,0 },  // Inst #1047 = PseudoDSDIV
  { 1048,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo199,0,0 },  // Inst #1048 = PseudoDUDIV
  { 1049,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo200,0,0 },  // Inst #1049 = PseudoMADD
  { 1050,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo200,0,0 },  // Inst #1050 = PseudoMADDU
  { 1051,	2,	1,	21,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo201,0,0 },  // Inst #1051 = PseudoMFHI
  { 1052,	2,	1,	21,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo202,0,0 },  // Inst #1052 = PseudoMFHI64
  { 1053,	2,	1,	21,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo201,0,0 },  // Inst #1053 = PseudoMFLO
  { 1054,	2,	1,	21,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo202,0,0 },  // Inst #1054 = PseudoMFLO64
  { 1055,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo200,0,0 },  // Inst #1055 = PseudoMSUB
  { 1056,	4,	1,	10,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo200,0,0 },  // Inst #1056 = PseudoMSUBU
  { 1057,	3,	1,	21,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo203,0,0 },  // Inst #1057 = PseudoMTLOHI
  { 1058,	3,	1,	21,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo204,0,0 },  // Inst #1058 = PseudoMTLOHI64
  { 1059,	3,	1,	21,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo205,0,0 },  // Inst #1059 = PseudoMTLOHI_DSP
  { 1060,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo206,0,0 },  // Inst #1060 = PseudoMULT
  { 1061,	3,	1,	10,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo206,0,0 },  // Inst #1061 = PseudoMULTu
  { 1062,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo207,0,0 },  // Inst #1062 = PseudoPICK_PH
  { 1063,	4,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo207,0,0 },  // Inst #1063 = PseudoPICK_QB
  { 1064,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo206,0,0 },  // Inst #1064 = PseudoSDIV
  { 1065,	3,	1,	11,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo206,0,0 },  // Inst #1065 = PseudoUDIV
  { 1066,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo193,0,0 },  // Inst #1066 = RADDU_W_QB
  { 1067,	2,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1067 = RDDSP
  { 1068,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo208,0,0 },  // Inst #1068 = RDHWR
  { 1069,	2,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo209,0,0 },  // Inst #1069 = RDHWR64
  { 1070,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo210,0,0 },  // Inst #1070 = REPLV_PH
  { 1071,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo210,0,0 },  // Inst #1071 = REPLV_QB
  { 1072,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo211,0,0 },  // Inst #1072 = REPL_PH
  { 1073,	2,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo211,0,0 },  // Inst #1073 = REPL_QB
  { 1074,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo53,0,0 },  // Inst #1074 = RET
  { 1075,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo53,0,0 },  // Inst #1075 = RET_MM
  { 1076,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1076 = ROTR
  { 1077,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1077 = ROTRV
  { 1078,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1078 = ROTRV_MM
  { 1079,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1079 = ROTR_MM
  { 1080,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #1080 = ROUND_L_D64
  { 1081,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo60,0,0 },  // Inst #1081 = ROUND_L_S
  { 1082,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo61,0,0 },  // Inst #1082 = ROUND_W_D32
  { 1083,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo62,0,0 },  // Inst #1083 = ROUND_W_D64
  { 1084,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #1084 = ROUND_W_S
  { 1085,	1,	0,	19,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5,0,0 },  // Inst #1085 = RestoreIncSpF16
  { 1086,	1,	0,	19,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList26, OperandInfo5,0,0 },  // Inst #1086 = RestoreRaF16
  { 1087,	0,	0,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #1087 = RetRA
  { 1088,	0,	0,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #1088 = RetRA16
  { 1089,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1089 = SAT_S_B
  { 1090,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1090 = SAT_S_D
  { 1091,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1091 = SAT_S_H
  { 1092,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1092 = SAT_S_W
  { 1093,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1093 = SAT_U_B
  { 1094,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1094 = SAT_U_D
  { 1095,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1095 = SAT_U_H
  { 1096,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1096 = SAT_U_W
  { 1097,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #1097 = SB
  { 1098,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #1098 = SB64
  { 1099,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #1099 = SB_MM
  { 1100,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo212,0,0 },  // Inst #1100 = SC
  { 1101,	4,	1,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo213,0,0 },  // Inst #1101 = SCD
  { 1102,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #1102 = SD
  { 1103,	3,	0,	24,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo132,0,0 },  // Inst #1103 = SDC1
  { 1104,	3,	0,	24,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo133,0,0 },  // Inst #1104 = SDC164
  { 1105,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo134,0,0 },  // Inst #1105 = SDC2
  { 1106,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo11,0,0 },  // Inst #1106 = SDIV
  { 1107,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo11,0,0 },  // Inst #1107 = SDIV_MM
  { 1108,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #1108 = SDL
  { 1109,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #1109 = SDR
  { 1110,	3,	0,	24,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo140,0,0 },  // Inst #1110 = SDXC1
  { 1111,	3,	0,	24,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo141,0,0 },  // Inst #1111 = SDXC164
  { 1112,	2,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #1112 = SEB
  { 1113,	2,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo77,0,0 },  // Inst #1113 = SEB64
  { 1114,	2,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #1114 = SEB_MM
  { 1115,	2,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #1115 = SEH
  { 1116,	2,	1,	25,	4,	0, 0x1ULL, NULL, NULL, OperandInfo77,0,0 },  // Inst #1116 = SEH64
  { 1117,	2,	1,	25,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #1117 = SEH_MM
  { 1118,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #1118 = SH
  { 1119,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #1119 = SH64
  { 1120,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1120 = SHF_B
  { 1121,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1121 = SHF_H
  { 1122,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1122 = SHF_W
  { 1123,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo214,0,0 },  // Inst #1123 = SHILO
  { 1124,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo187,0,0 },  // Inst #1124 = SHILOV
  { 1125,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo215,0,0 },  // Inst #1125 = SHLLV_PH
  { 1126,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo215,0,0 },  // Inst #1126 = SHLLV_QB
  { 1127,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo215,0,0 },  // Inst #1127 = SHLLV_S_PH
  { 1128,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo12,0,0 },  // Inst #1128 = SHLLV_S_W
  { 1129,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo216,0,0 },  // Inst #1129 = SHLL_PH
  { 1130,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo216,0,0 },  // Inst #1130 = SHLL_QB
  { 1131,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo216,0,0 },  // Inst #1131 = SHLL_S_PH
  { 1132,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList25, OperandInfo22,0,0 },  // Inst #1132 = SHLL_S_W
  { 1133,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo215,0,0 },  // Inst #1133 = SHRAV_PH
  { 1134,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo215,0,0 },  // Inst #1134 = SHRAV_QB
  { 1135,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo215,0,0 },  // Inst #1135 = SHRAV_R_PH
  { 1136,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo215,0,0 },  // Inst #1136 = SHRAV_R_QB
  { 1137,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1137 = SHRAV_R_W
  { 1138,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo216,0,0 },  // Inst #1138 = SHRA_PH
  { 1139,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo216,0,0 },  // Inst #1139 = SHRA_QB
  { 1140,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo216,0,0 },  // Inst #1140 = SHRA_R_PH
  { 1141,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo216,0,0 },  // Inst #1141 = SHRA_R_QB
  { 1142,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1142 = SHRA_R_W
  { 1143,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo215,0,0 },  // Inst #1143 = SHRLV_PH
  { 1144,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo215,0,0 },  // Inst #1144 = SHRLV_QB
  { 1145,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo216,0,0 },  // Inst #1145 = SHRL_PH
  { 1146,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo216,0,0 },  // Inst #1146 = SHRL_QB
  { 1147,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #1147 = SH_MM
  { 1148,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1148 = SLDI_B
  { 1149,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1149 = SLDI_D
  { 1150,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1150 = SLDI_H
  { 1151,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1151 = SLDI_W
  { 1152,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo217,0,0 },  // Inst #1152 = SLD_B
  { 1153,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo218,0,0 },  // Inst #1153 = SLD_D
  { 1154,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo219,0,0 },  // Inst #1154 = SLD_H
  { 1155,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo220,0,0 },  // Inst #1155 = SLD_W
  { 1156,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1156 = SLL
  { 1157,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo90,0,0 },  // Inst #1157 = SLL64_32
  { 1158,	2,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo168,0,0 },  // Inst #1158 = SLL64_64
  { 1159,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1159 = SLLI_B
  { 1160,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1160 = SLLI_D
  { 1161,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1161 = SLLI_H
  { 1162,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1162 = SLLI_W
  { 1163,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1163 = SLLV
  { 1164,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1164 = SLLV_MM
  { 1165,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1165 = SLL_B
  { 1166,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1166 = SLL_D
  { 1167,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1167 = SLL_H
  { 1168,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1168 = SLL_MM
  { 1169,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1169 = SLL_W
  { 1170,	3,	1,	26,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1170 = SLT
  { 1171,	3,	1,	26,	4,	0, 0x1ULL, NULL, NULL, OperandInfo221,0,0 },  // Inst #1171 = SLT64
  { 1172,	3,	1,	26,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1172 = SLT_MM
  { 1173,	3,	1,	26,	4,	0, 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1173 = SLTi
  { 1174,	3,	1,	26,	4,	0, 0x2ULL, NULL, NULL, OperandInfo222,0,0 },  // Inst #1174 = SLTi64
  { 1175,	3,	1,	26,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1175 = SLTi_MM
  { 1176,	3,	1,	26,	4,	0, 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1176 = SLTiu
  { 1177,	3,	1,	26,	4,	0, 0x2ULL, NULL, NULL, OperandInfo222,0,0 },  // Inst #1177 = SLTiu64
  { 1178,	3,	1,	26,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1178 = SLTiu_MM
  { 1179,	3,	1,	26,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1179 = SLTu
  { 1180,	3,	1,	26,	4,	0, 0x1ULL, NULL, NULL, OperandInfo221,0,0 },  // Inst #1180 = SLTu64
  { 1181,	3,	1,	26,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1181 = SLTu_MM
  { 1182,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo223,0,0 },  // Inst #1182 = SNZ_B_PSEUDO
  { 1183,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo224,0,0 },  // Inst #1183 = SNZ_D_PSEUDO
  { 1184,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo225,0,0 },  // Inst #1184 = SNZ_H_PSEUDO
  { 1185,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo223,0,0 },  // Inst #1185 = SNZ_V_PSEUDO
  { 1186,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo226,0,0 },  // Inst #1186 = SNZ_W_PSEUDO
  { 1187,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1187 = SPLATI_B
  { 1188,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1188 = SPLATI_D
  { 1189,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1189 = SPLATI_H
  { 1190,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1190 = SPLATI_W
  { 1191,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo217,0,0 },  // Inst #1191 = SPLAT_B
  { 1192,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo218,0,0 },  // Inst #1192 = SPLAT_D
  { 1193,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo219,0,0 },  // Inst #1193 = SPLAT_H
  { 1194,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo220,0,0 },  // Inst #1194 = SPLAT_W
  { 1195,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1195 = SRA
  { 1196,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1196 = SRAI_B
  { 1197,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1197 = SRAI_D
  { 1198,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1198 = SRAI_H
  { 1199,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1199 = SRAI_W
  { 1200,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1200 = SRARI_B
  { 1201,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1201 = SRARI_D
  { 1202,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1202 = SRARI_H
  { 1203,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1203 = SRARI_W
  { 1204,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1204 = SRAR_B
  { 1205,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1205 = SRAR_D
  { 1206,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1206 = SRAR_H
  { 1207,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1207 = SRAR_W
  { 1208,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1208 = SRAV
  { 1209,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1209 = SRAV_MM
  { 1210,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1210 = SRA_B
  { 1211,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1211 = SRA_D
  { 1212,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1212 = SRA_H
  { 1213,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1213 = SRA_MM
  { 1214,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1214 = SRA_W
  { 1215,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1215 = SRL
  { 1216,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1216 = SRLI_B
  { 1217,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1217 = SRLI_D
  { 1218,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1218 = SRLI_H
  { 1219,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1219 = SRLI_W
  { 1220,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1220 = SRLRI_B
  { 1221,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1221 = SRLRI_D
  { 1222,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1222 = SRLRI_H
  { 1223,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1223 = SRLRI_W
  { 1224,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1224 = SRLR_B
  { 1225,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1225 = SRLR_D
  { 1226,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1226 = SRLR_H
  { 1227,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1227 = SRLR_W
  { 1228,	3,	1,	1,	4,	0, 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1228 = SRLV
  { 1229,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1229 = SRLV_MM
  { 1230,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1230 = SRL_B
  { 1231,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1231 = SRL_D
  { 1232,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1232 = SRL_H
  { 1233,	3,	1,	1,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1233 = SRL_MM
  { 1234,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1234 = SRL_W
  { 1235,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo146,0,0 },  // Inst #1235 = STORE_ACC128
  { 1236,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo147,0,0 },  // Inst #1236 = STORE_ACC64
  { 1237,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo148,0,0 },  // Inst #1237 = STORE_ACC64DSP
  { 1238,	3,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo149,0,0 },  // Inst #1238 = STORE_CCOND_DSP
  { 1239,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x6ULL, NULL, NULL, OperandInfo142,0,0 },  // Inst #1239 = ST_B
  { 1240,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x6ULL, NULL, NULL, OperandInfo143,0,0 },  // Inst #1240 = ST_D
  { 1241,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x6ULL, NULL, NULL, OperandInfo144,0,0 },  // Inst #1241 = ST_H
  { 1242,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x6ULL, NULL, NULL, OperandInfo145,0,0 },  // Inst #1242 = ST_W
  { 1243,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1243 = SUB
  { 1244,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #1244 = SUBQH_PH
  { 1245,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #1245 = SUBQH_R_PH
  { 1246,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1246 = SUBQH_R_W
  { 1247,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1247 = SUBQH_W
  { 1248,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #1248 = SUBQ_PH
  { 1249,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #1249 = SUBQ_S_PH
  { 1250,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo12,0,0 },  // Inst #1250 = SUBQ_S_W
  { 1251,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1251 = SUBSUS_U_B
  { 1252,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1252 = SUBSUS_U_D
  { 1253,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1253 = SUBSUS_U_H
  { 1254,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1254 = SUBSUS_U_W
  { 1255,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1255 = SUBSUU_S_B
  { 1256,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1256 = SUBSUU_S_D
  { 1257,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1257 = SUBSUU_S_H
  { 1258,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1258 = SUBSUU_S_W
  { 1259,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1259 = SUBS_S_B
  { 1260,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1260 = SUBS_S_D
  { 1261,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1261 = SUBS_S_H
  { 1262,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1262 = SUBS_S_W
  { 1263,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1263 = SUBS_U_B
  { 1264,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1264 = SUBS_U_D
  { 1265,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1265 = SUBS_U_H
  { 1266,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1266 = SUBS_U_W
  { 1267,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #1267 = SUBUH_QB
  { 1268,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo13,0,0 },  // Inst #1268 = SUBUH_R_QB
  { 1269,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #1269 = SUBU_PH
  { 1270,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #1270 = SUBU_QB
  { 1271,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #1271 = SUBU_S_PH
  { 1272,	3,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, ImplicitList1, OperandInfo13,0,0 },  // Inst #1272 = SUBU_S_QB
  { 1273,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1273 = SUBVI_B
  { 1274,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo19,0,0 },  // Inst #1274 = SUBVI_D
  { 1275,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo20,0,0 },  // Inst #1275 = SUBVI_H
  { 1276,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo21,0,0 },  // Inst #1276 = SUBVI_W
  { 1277,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1277 = SUBV_B
  { 1278,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1278 = SUBV_D
  { 1279,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1279 = SUBV_H
  { 1280,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1280 = SUBV_W
  { 1281,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1281 = SUB_MM
  { 1282,	3,	1,	1,	4,	0|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1282 = SUBu
  { 1283,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1283 = SUBu_MM
  { 1284,	3,	0,	24,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo140,0,0 },  // Inst #1284 = SUXC1
  { 1285,	3,	0,	24,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x5ULL, NULL, NULL, OperandInfo141,0,0 },  // Inst #1285 = SUXC164
  { 1286,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #1286 = SW
  { 1287,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #1287 = SW64
  { 1288,	3,	0,	24,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo153,0,0 },  // Inst #1288 = SWC1
  { 1289,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo134,0,0 },  // Inst #1289 = SWC2
  { 1290,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #1290 = SWL
  { 1291,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #1291 = SWL64
  { 1292,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo227,0,0 },  // Inst #1292 = SWL_MM
  { 1293,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #1293 = SWR
  { 1294,	3,	0,	23,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo130,0,0 },  // Inst #1294 = SWR64
  { 1295,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo227,0,0 },  // Inst #1295 = SWR_MM
  { 1296,	3,	0,	24,	4,	0|(1<<MCID::MayStore), 0x5ULL, NULL, NULL, OperandInfo156,0,0 },  // Inst #1296 = SWXC1
  { 1297,	3,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo129,0,0 },  // Inst #1297 = SW_MM
  { 1298,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo2,0,0 },  // Inst #1298 = SYNC
  { 1299,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo5,0,0 },  // Inst #1299 = SYSCALL
  { 1300,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo223,0,0 },  // Inst #1300 = SZ_B_PSEUDO
  { 1301,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo224,0,0 },  // Inst #1301 = SZ_D_PSEUDO
  { 1302,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo225,0,0 },  // Inst #1302 = SZ_H_PSEUDO
  { 1303,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo223,0,0 },  // Inst #1303 = SZ_V_PSEUDO
  { 1304,	2,	1,	2,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo226,0,0 },  // Inst #1304 = SZ_W_PSEUDO
  { 1305,	1,	0,	23,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo5,0,0 },  // Inst #1305 = SaveDecSpF16
  { 1306,	1,	0,	23,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList27, ImplicitList3, OperandInfo5,0,0 },  // Inst #1306 = SaveRaF16
  { 1307,	4,	0,	23,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo157,0,0 },  // Inst #1307 = SbRxRyOffMemX16
  { 1308,	2,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo228,0,0 },  // Inst #1308 = SebRx16
  { 1309,	2,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo228,0,0 },  // Inst #1309 = SehRx16
  { 1310,	4,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo229,0,0 },  // Inst #1310 = SelBeqZ
  { 1311,	4,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo229,0,0 },  // Inst #1311 = SelBneZ
  { 1312,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo230,0,0 },  // Inst #1312 = SelTBteqZCmp
  { 1313,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo231,0,0 },  // Inst #1313 = SelTBteqZCmpi
  { 1314,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo230,0,0 },  // Inst #1314 = SelTBteqZSlt
  { 1315,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo231,0,0 },  // Inst #1315 = SelTBteqZSlti
  { 1316,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo231,0,0 },  // Inst #1316 = SelTBteqZSltiu
  { 1317,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo230,0,0 },  // Inst #1317 = SelTBteqZSltu
  { 1318,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo230,0,0 },  // Inst #1318 = SelTBtneZCmp
  { 1319,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo231,0,0 },  // Inst #1319 = SelTBtneZCmpi
  { 1320,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo230,0,0 },  // Inst #1320 = SelTBtneZSlt
  { 1321,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo231,0,0 },  // Inst #1321 = SelTBtneZSlti
  { 1322,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo231,0,0 },  // Inst #1322 = SelTBtneZSltiu
  { 1323,	5,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo230,0,0 },  // Inst #1323 = SelTBtneZSltu
  { 1324,	4,	0,	23,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo157,0,0 },  // Inst #1324 = ShRxRyOffMemX16
  { 1325,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo232,0,0 },  // Inst #1325 = SllX16
  { 1326,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo34,0,0 },  // Inst #1326 = SllvRxRy16
  { 1327,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo33,0,0 },  // Inst #1327 = SltCCRxRy16
  { 1328,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo76,0,0 },  // Inst #1328 = SltRxRy16
  { 1329,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo232,0,0 },  // Inst #1329 = SltiCCRxImmX16
  { 1330,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo30,0,0 },  // Inst #1330 = SltiRxImm16
  { 1331,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo30,0,0 },  // Inst #1331 = SltiRxImmX16
  { 1332,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo232,0,0 },  // Inst #1332 = SltiuCCRxImmX16
  { 1333,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo30,0,0 },  // Inst #1333 = SltiuRxImm16
  { 1334,	2,	0,	4,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo30,0,0 },  // Inst #1334 = SltiuRxImmX16
  { 1335,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo33,0,0 },  // Inst #1335 = SltuCCRxRy16
  { 1336,	2,	0,	4,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo76,0,0 },  // Inst #1336 = SltuRxRy16
  { 1337,	3,	1,	2,	2,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList7, OperandInfo33,0,0 },  // Inst #1337 = SltuRxRyRz16
  { 1338,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo232,0,0 },  // Inst #1338 = SraX16
  { 1339,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo34,0,0 },  // Inst #1339 = SravRxRy16
  { 1340,	3,	1,	4,	4,	0, 0x0ULL, NULL, NULL, OperandInfo232,0,0 },  // Inst #1340 = SrlX16
  { 1341,	3,	1,	4,	2,	0, 0x0ULL, NULL, NULL, OperandInfo34,0,0 },  // Inst #1341 = SrlvRxRy16
  { 1342,	3,	1,	4,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo33,0,0 },  // Inst #1342 = SubuRxRyRz16
  { 1343,	4,	0,	23,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo157,0,0 },  // Inst #1343 = SwRxRyOffMemX16
  { 1344,	3,	0,	23,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo160,0,0 },  // Inst #1344 = SwRxSpImmX16
  { 1345,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x3ULL, NULL, ImplicitList4, OperandInfo5,0,0 },  // Inst #1345 = TAILCALL
  { 1346,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo127,0,0 },  // Inst #1346 = TAILCALL64_R
  { 1347,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects)|(1<<MCID::ExtraSrcRegAllocReq), 0x3ULL, NULL, ImplicitList4, OperandInfo5,0,0 },  // Inst #1347 = TAILCALL_MM
  { 1348,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo53,0,0 },  // Inst #1348 = TAILCALL_R
  { 1349,	1,	0,	5,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::DelaySlot)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects)|(1<<MCID::ExtraSrcRegAllocReq), 0x1ULL, NULL, NULL, OperandInfo53,0,0 },  // Inst #1349 = TAILCALL_R_MM
  { 1350,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1350 = TEQ
  { 1351,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1351 = TEQI
  { 1352,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1352 = TEQI_MM
  { 1353,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1353 = TEQ_MM
  { 1354,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1354 = TGE
  { 1355,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1355 = TGEI
  { 1356,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1356 = TGEIU
  { 1357,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1357 = TGEIU_MM
  { 1358,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1358 = TGEI_MM
  { 1359,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1359 = TGEU
  { 1360,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1360 = TGEU_MM
  { 1361,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1361 = TGE_MM
  { 1362,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1362 = TLT
  { 1363,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1363 = TLTI
  { 1364,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1364 = TLTIU_MM
  { 1365,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1365 = TLTI_MM
  { 1366,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1366 = TLTU
  { 1367,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1367 = TLTU_MM
  { 1368,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1368 = TLT_MM
  { 1369,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1369 = TNE
  { 1370,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1370 = TNEI
  { 1371,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1371 = TNEI_MM
  { 1372,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1372 = TNE_MM
  { 1373,	0,	0,	0,	4,	0|(1<<MCID::Pseudo)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0,0,0 },  // Inst #1373 = TRAP
  { 1374,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo59,0,0 },  // Inst #1374 = TRUNC_L_D64
  { 1375,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo60,0,0 },  // Inst #1375 = TRUNC_L_S
  { 1376,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo61,0,0 },  // Inst #1376 = TRUNC_W_D32
  { 1377,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo62,0,0 },  // Inst #1377 = TRUNC_W_D64
  { 1378,	2,	1,	6,	4,	0, 0x4ULL, NULL, NULL, OperandInfo63,0,0 },  // Inst #1378 = TRUNC_W_S
  { 1379,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1379 = TTLTIU
  { 1380,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo11,0,0 },  // Inst #1380 = UDIV
  { 1381,	2,	0,	11,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, ImplicitList11, OperandInfo11,0,0 },  // Inst #1381 = UDIV_MM
  { 1382,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo45,0,0 },  // Inst #1382 = VSHF_B
  { 1383,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo46,0,0 },  // Inst #1383 = VSHF_D
  { 1384,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo47,0,0 },  // Inst #1384 = VSHF_H
  { 1385,	4,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo48,0,0 },  // Inst #1385 = VSHF_W
  { 1386,	0,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, 0,0,0 },  // Inst #1386 = WAIT
  { 1387,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x6ULL, NULL, NULL, OperandInfo151,0,0 },  // Inst #1387 = WRDSP
  { 1388,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #1388 = WSBH
  { 1389,	2,	1,	0,	4,	0, 0x1ULL, NULL, NULL, OperandInfo11,0,0 },  // Inst #1389 = WSBH_MM
  { 1390,	3,	1,	3,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1390 = XOR
  { 1391,	3,	1,	1,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x1ULL, NULL, NULL, OperandInfo23,0,0 },  // Inst #1391 = XOR64
  { 1392,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo18,0,0 },  // Inst #1392 = XORI_B
  { 1393,	3,	1,	4,	4,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x1ULL, NULL, NULL, OperandInfo12,0,0 },  // Inst #1393 = XOR_MM
  { 1394,	3,	1,	0,	4,	0, 0x6ULL, NULL, NULL, OperandInfo14,0,0 },  // Inst #1394 = XOR_V
  { 1395,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo15,0,0 },  // Inst #1395 = XOR_V_D_PSEUDO
  { 1396,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo16,0,0 },  // Inst #1396 = XOR_V_H_PSEUDO
  { 1397,	3,	1,	2,	4,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo17,0,0 },  // Inst #1397 = XOR_V_W_PSEUDO
  { 1398,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1398 = XORi
  { 1399,	3,	1,	3,	4,	0|(1<<MCID::Rematerializable), 0x2ULL, NULL, NULL, OperandInfo24,0,0 },  // Inst #1399 = XORi64
  { 1400,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable)|(1<<MCID::UnmodeledSideEffects), 0x2ULL, NULL, NULL, OperandInfo22,0,0 },  // Inst #1400 = XORi_MM
  { 1401,	3,	1,	4,	2,	0|(1<<MCID::Commutable)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo34,0,0 },  // Inst #1401 = XorRxRxRy16
};

extern const char MipsInstrNameData[] = {
  /* 0 */ 'D', 'M', 'F', 'C', '0', 0,
  /* 6 */ 'D', 'M', 'T', 'C', '0', 0,
  /* 12 */ 'L', 'D', 'C', '1', 0,
  /* 17 */ 'S', 'D', 'C', '1', 0,
  /* 22 */ 'C', 'F', 'C', '1', 0,
  /* 27 */ 'D', 'M', 'F', 'C', '1', 0,
  /* 33 */ 'M', 'F', 'H', 'C', '1', 0,
  /* 39 */ 'M', 'T', 'H', 'C', '1', 0,
  /* 45 */ 'C', 'T', 'C', '1', 0,
  /* 50 */ 'D', 'M', 'T', 'C', '1', 0,
  /* 56 */ 'L', 'W', 'C', '1', 0,
  /* 61 */ 'S', 'W', 'C', '1', 0,
  /* 66 */ 'L', 'D', 'X', 'C', '1', 0,
  /* 72 */ 'S', 'D', 'X', 'C', '1', 0,
  /* 78 */ 'L', 'U', 'X', 'C', '1', 0,
  /* 84 */ 'S', 'U', 'X', 'C', '1', 0,
  /* 90 */ 'L', 'W', 'X', 'C', '1', 0,
  /* 96 */ 'S', 'W', 'X', 'C', '1', 0,
  /* 102 */ 'D', 'S', 'R', 'A', '3', '2', 0,
  /* 109 */ 'F', 'S', 'U', 'B', '_', 'D', '3', '2', 0,
  /* 118 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '3', '2', 0,
  /* 128 */ 'F', 'A', 'D', 'D', '_', 'D', '3', '2', 0,
  /* 137 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '3', '2', 0,
  /* 147 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '3', '2', 0,
  /* 157 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 168 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 178 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 188 */ 'C', '_', 'L', 'E', '_', 'D', '3', '2', 0,
  /* 197 */ 'C', '_', 'S', 'F', '_', 'D', '3', '2', 0,
  /* 206 */ 'M', 'O', 'V', 'F', '_', 'D', '3', '2', 0,
  /* 215 */ 'C', '_', 'F', '_', 'D', '3', '2', 0,
  /* 223 */ 'F', 'N', 'E', 'G', '_', 'D', '3', '2', 0,
  /* 232 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '3', '2', 0,
  /* 243 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '3', '2', 0,
  /* 254 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '3', '2', 0,
  /* 264 */ 'F', 'M', 'U', 'L', '_', 'D', '3', '2', 0,
  /* 273 */ 'C', '_', 'U', 'N', '_', 'D', '3', '2', 0,
  /* 282 */ 'F', 'C', 'M', 'P', '_', 'D', '3', '2', 0,
  /* 291 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 301 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 311 */ 'C', '_', 'E', 'Q', '_', 'D', '3', '2', 0,
  /* 320 */ 'F', 'A', 'B', 'S', '_', 'D', '3', '2', 0,
  /* 329 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '3', '2', 0,
  /* 339 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '3', '2', 0,
  /* 349 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 359 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 369 */ 'C', '_', 'L', 'T', '_', 'D', '3', '2', 0,
  /* 378 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '3', '2', 0,
  /* 388 */ 'M', 'O', 'V', 'T', '_', 'D', '3', '2', 0,
  /* 397 */ 'F', 'D', 'I', 'V', '_', 'D', '3', '2', 0,
  /* 406 */ 'F', 'M', 'O', 'V', '_', 'D', '3', '2', 0,
  /* 415 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '3', '2', 0,
  /* 427 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '3', '2', 0,
  /* 439 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '3', '2', 0,
  /* 450 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '3', '2', 0,
  /* 462 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '3', '2', 0,
  /* 472 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', 0,
  /* 481 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 501 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 521 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 542 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 562 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 578 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 598 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 618 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 637 */ 'D', 'S', 'L', 'L', '3', '2', 0,
  /* 644 */ 'D', 'S', 'R', 'L', '3', '2', 0,
  /* 651 */ 'D', 'R', 'O', 'T', 'R', '3', '2', 0,
  /* 659 */ 'F', 'C', 'M', 'P', '_', 'S', '3', '2', 0,
  /* 668 */ 'D', 'S', 'L', 'L', '6', '4', '_', '3', '2', 0,
  /* 678 */ 'M', 'I', 'P', 'S', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', '3', '2', 0,
  /* 694 */ 'L', 'w', 'C', 'o', 'n', 's', 't', 'a', 'n', 't', '3', '2', 0,
  /* 707 */ 'L', 'D', 'C', '2', 0,
  /* 712 */ 'S', 'D', 'C', '2', 0,
  /* 717 */ 'D', 'M', 'F', 'C', '2', 0,
  /* 723 */ 'D', 'M', 'T', 'C', '2', 0,
  /* 729 */ 'L', 'W', 'C', '2', 0,
  /* 734 */ 'S', 'W', 'C', '2', 0,
  /* 739 */ 'L', 'D', 'C', '1', '6', '4', 0,
  /* 746 */ 'S', 'D', 'C', '1', '6', '4', 0,
  /* 753 */ 'L', 'D', 'X', 'C', '1', '6', '4', 0,
  /* 761 */ 'S', 'D', 'X', 'C', '1', '6', '4', 0,
  /* 769 */ 'L', 'U', 'X', 'C', '1', '6', '4', 0,
  /* 777 */ 'S', 'U', 'X', 'C', '1', '6', '4', 0,
  /* 785 */ 'S', 'E', 'B', '6', '4', 0,
  /* 791 */ 'L', 'B', '6', '4', 0,
  /* 796 */ 'S', 'B', '6', '4', 0,
  /* 801 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '6', '4', 0,
  /* 812 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '6', '4', 0,
  /* 824 */ 'A', 'N', 'D', '6', '4', 0,
  /* 830 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'D', '6', '4', 0,
  /* 843 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'D', '6', '4', 0,
  /* 856 */ 'F', 'S', 'U', 'B', '_', 'D', '6', '4', 0,
  /* 865 */ 'N', 'M', 'S', 'U', 'B', '_', 'D', '6', '4', 0,
  /* 875 */ 'F', 'A', 'D', 'D', '_', 'D', '6', '4', 0,
  /* 884 */ 'N', 'M', 'A', 'D', 'D', '_', 'D', '6', '4', 0,
  /* 894 */ 'C', '_', 'N', 'G', 'E', '_', 'D', '6', '4', 0,
  /* 904 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 915 */ 'C', '_', 'O', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 925 */ 'C', '_', 'U', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 935 */ 'C', '_', 'L', 'E', '_', 'D', '6', '4', 0,
  /* 944 */ 'C', '_', 'S', 'F', '_', 'D', '6', '4', 0,
  /* 953 */ 'M', 'O', 'V', 'F', '_', 'D', '6', '4', 0,
  /* 962 */ 'C', '_', 'F', '_', 'D', '6', '4', 0,
  /* 970 */ 'F', 'N', 'E', 'G', '_', 'D', '6', '4', 0,
  /* 979 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'D', '6', '4', 0,
  /* 990 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'D', '6', '4', 0,
  /* 1001 */ 'C', '_', 'N', 'G', 'L', '_', 'D', '6', '4', 0,
  /* 1011 */ 'F', 'M', 'U', 'L', '_', 'D', '6', '4', 0,
  /* 1020 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1032 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1044 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1055 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1067 */ 'C', 'V', 'T', '_', 'L', '_', 'D', '6', '4', 0,
  /* 1077 */ 'C', '_', 'U', 'N', '_', 'D', '6', '4', 0,
  /* 1086 */ 'F', 'C', 'M', 'P', '_', 'D', '6', '4', 0,
  /* 1095 */ 'C', '_', 'S', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1105 */ 'C', '_', 'U', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1115 */ 'C', '_', 'E', 'Q', '_', 'D', '6', '4', 0,
  /* 1124 */ 'F', 'A', 'B', 'S', '_', 'D', '6', '4', 0,
  /* 1133 */ 'C', 'V', 'T', '_', 'S', '_', 'D', '6', '4', 0,
  /* 1143 */ 'C', '_', 'N', 'G', 'T', '_', 'D', '6', '4', 0,
  /* 1153 */ 'C', '_', 'O', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1163 */ 'C', '_', 'U', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1173 */ 'C', '_', 'L', 'T', '_', 'D', '6', '4', 0,
  /* 1182 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', '6', '4', 0,
  /* 1192 */ 'M', 'O', 'V', 'T', '_', 'D', '6', '4', 0,
  /* 1201 */ 'F', 'D', 'I', 'V', '_', 'D', '6', '4', 0,
  /* 1210 */ 'F', 'M', 'O', 'V', '_', 'D', '6', '4', 0,
  /* 1219 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1231 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1243 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1254 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1266 */ 'C', 'V', 'T', '_', 'W', '_', 'D', '6', '4', 0,
  /* 1276 */ 'B', 'N', 'E', '6', '4', 0,
  /* 1282 */ 'B', 'u', 'i', 'l', 'd', 'P', 'a', 'i', 'r', 'F', '6', '4', 0,
  /* 1295 */ 'E', 'x', 't', 'r', 'a', 'c', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', '6', '4', 0,
  /* 1313 */ 'S', 'E', 'H', '6', '4', 0,
  /* 1319 */ 'L', 'H', '6', '4', 0,
  /* 1324 */ 'S', 'H', '6', '4', 0,
  /* 1329 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'H', 'I', '6', '4', 0,
  /* 1342 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'T', 'L', 'O', 'H', 'I', '6', '4', 0,
  /* 1357 */ 'M', 'T', 'H', 'I', '6', '4', 0,
  /* 1364 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'I', '6', '4', 0,
  /* 1377 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'I', '6', '4', 0,
  /* 1390 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 1410 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 1430 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 1451 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 1471 */ 'M', 'O', 'V', 'F', '_', 'I', '6', '4', 0,
  /* 1480 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'I', '6', '4', 0,
  /* 1491 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'I', '6', '4', 0,
  /* 1502 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 1518 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 1538 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 1558 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 1577 */ 'M', 'O', 'V', 'T', '_', 'I', '6', '4', 0,
  /* 1586 */ 'L', 'W', 'L', '6', '4', 0,
  /* 1592 */ 'S', 'W', 'L', '6', '4', 0,
  /* 1598 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'L', 'O', '6', '4', 0,
  /* 1611 */ 'M', 'T', 'L', 'O', '6', '4', 0,
  /* 1618 */ 'B', 'E', 'Q', '6', '4', 0,
  /* 1624 */ 'J', 'R', '6', '4', 0,
  /* 1629 */ 'J', 'A', 'L', 'R', '6', '4', 0,
  /* 1636 */ 'N', 'O', 'R', '6', '4', 0,
  /* 1642 */ 'X', 'O', 'R', '6', '4', 0,
  /* 1648 */ 'R', 'D', 'H', 'W', 'R', '6', '4', 0,
  /* 1656 */ 'L', 'W', 'R', '6', '4', 0,
  /* 1662 */ 'S', 'W', 'R', '6', '4', 0,
  /* 1668 */ 'S', 'L', 'T', '6', '4', 0,
  /* 1674 */ 'L', 'W', '6', '4', 0,
  /* 1679 */ 'S', 'W', '6', '4', 0,
  /* 1684 */ 'B', 'G', 'E', 'Z', '6', '4', 0,
  /* 1691 */ 'B', 'L', 'E', 'Z', '6', '4', 0,
  /* 1698 */ 'B', 'G', 'T', 'Z', '6', '4', 0,
  /* 1705 */ 'B', 'L', 'T', 'Z', '6', '4', 0,
  /* 1712 */ 'B', 'u', 'i', 'l', 'd', 'P', 'a', 'i', 'r', 'F', '6', '4', '_', '6', '4', 0,
  /* 1728 */ 'E', 'x', 't', 'r', 'a', 'c', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'F', '6', '4', '_', '6', '4', 0,
  /* 1749 */ 'S', 'L', 'L', '6', '4', '_', '6', '4', 0,
  /* 1758 */ 'A', 'N', 'D', 'i', '6', '4', 0,
  /* 1765 */ 'X', 'O', 'R', 'i', '6', '4', 0,
  /* 1772 */ 'S', 'L', 'T', 'i', '6', '4', 0,
  /* 1779 */ 'L', 'U', 'i', '6', '4', 0,
  /* 1785 */ 'M', 'I', 'P', 'S', 'e', 'h', '_', 'r', 'e', 't', 'u', 'r', 'n', '6', '4', 0,
  /* 1801 */ 'L', 'B', 'u', '6', '4', 0,
  /* 1807 */ 'L', 'H', 'u', '6', '4', 0,
  /* 1813 */ 'S', 'L', 'T', 'u', '6', '4', 0,
  /* 1820 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', '6', '4', 0,
  /* 1832 */ 'S', 'L', 'T', 'i', 'u', '6', '4', 0,
  /* 1840 */ 'M', 'o', 'v', 'e', 'R', '3', '2', '1', '6', 0,
  /* 1850 */ 'R', 'e', 't', 'R', 'A', '1', '6', 0,
  /* 1858 */ 'R', 'e', 's', 't', 'o', 'r', 'e', 'R', 'a', 'F', '1', '6', 0,
  /* 1871 */ 'S', 'a', 'v', 'e', 'R', 'a', 'F', '1', '6', 0,
  /* 1881 */ 'S', 'a', 'v', 'e', 'D', 'e', 'c', 'S', 'p', 'F', '1', '6', 0,
  /* 1894 */ 'R', 'e', 's', 't', 'o', 'r', 'e', 'I', 'n', 'c', 'S', 'p', 'F', '1', '6', 0,
  /* 1910 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 1930 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 1950 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1971 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1991 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 2007 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 2027 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 2047 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 2066 */ 'M', 'o', 'v', 'e', '3', '2', 'R', '1', '6', 0,
  /* 2076 */ 'S', 'r', 'a', 'X', '1', '6', 0,
  /* 2083 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'C', 'm', 'p', 'i', 'X', '1', '6', 0,
  /* 2098 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'C', 'm', 'p', 'i', 'X', '1', '6', 0,
  /* 2113 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'i', 'X', '1', '6', 0,
  /* 2128 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'i', 'X', '1', '6', 0,
  /* 2143 */ 'S', 'l', 'l', 'X', '1', '6', 0,
  /* 2150 */ 'S', 'r', 'l', 'X', '1', '6', 0,
  /* 2157 */ 'L', 'b', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2173 */ 'S', 'b', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2189 */ 'L', 'h', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2205 */ 'S', 'h', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2221 */ 'L', 'b', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2238 */ 'L', 'h', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2255 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2274 */ 'L', 'w', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2290 */ 'S', 'w', 'R', 'x', 'R', 'y', 'O', 'f', 'f', 'M', 'e', 'm', 'X', '1', '6', 0,
  /* 2306 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'P', 'c', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2322 */ 'A', 'd', 'd', 'i', 'u', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2336 */ 'L', 'w', 'R', 'x', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2349 */ 'S', 'w', 'R', 'x', 'S', 'p', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2362 */ 'S', 'l', 't', 'i', 'C', 'C', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2377 */ 'S', 'l', 't', 'i', 'u', 'C', 'C', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2393 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2404 */ 'C', 'm', 'p', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2417 */ 'S', 'l', 't', 'i', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2430 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2444 */ 'S', 'l', 't', 'i', 'u', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2458 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2474 */ 'B', 'n', 'e', 'z', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2487 */ 'B', 'e', 'q', 'z', 'R', 'x', 'I', 'm', 'm', 'X', '1', '6', 0,
  /* 2500 */ 'B', 'i', 'm', 'm', 'X', '1', '6', 0,
  /* 2508 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', 'A', 'l', 'i', 'g', 'n', 'X', '1', '6', 0,
  /* 2524 */ 'L', 'w', 'R', 'x', 'P', 'c', 'T', 'c', 'p', 'X', '1', '6', 0,
  /* 2537 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'C', 'm', 'p', 'X', '1', '6', 0,
  /* 2551 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'C', 'm', 'p', 'X', '1', '6', 0,
  /* 2565 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'X', '1', '6', 0,
  /* 2579 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'X', '1', '6', 0,
  /* 2593 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'i', 'u', 'X', '1', '6', 0,
  /* 2609 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'i', 'u', 'X', '1', '6', 0,
  /* 2625 */ 'B', 't', 'n', 'e', 'z', 'T', '8', 'S', 'l', 't', 'u', 'X', '1', '6', 0,
  /* 2640 */ 'B', 't', 'e', 'q', 'z', 'T', '8', 'S', 'l', 't', 'u', 'X', '1', '6', 0,
  /* 2655 */ 'B', 't', 'n', 'e', 'z', 'X', '1', '6', 0,
  /* 2664 */ 'B', 't', 'e', 'q', 'z', 'X', '1', '6', 0,
  /* 2673 */ 'J', 'r', 'c', 'R', 'a', '1', '6', 0,
  /* 2681 */ 'J', 'r', 'R', 'a', '1', '6', 0,
  /* 2688 */ 'G', 'o', 't', 'P', 'r', 'o', 'l', 'o', 'g', 'u', 'e', '1', '6', 0,
  /* 2702 */ 'J', 'u', 'm', 'p', 'L', 'i', 'n', 'k', 'R', 'e', 'g', '1', '6', 0,
  /* 2716 */ 'M', 'f', 'h', 'i', '1', '6', 0,
  /* 2723 */ 'B', 'r', 'e', 'a', 'k', '1', '6', 0,
  /* 2731 */ 'J', 'a', 'l', '1', '6', 0,
  /* 2737 */ 'A', 'd', 'd', 'i', 'u', 'S', 'p', 'I', 'm', 'm', '1', '6', 0,
  /* 2750 */ 'L', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2760 */ 'C', 'm', 'p', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2772 */ 'S', 'l', 't', 'i', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2784 */ 'S', 'l', 't', 'i', 'u', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2797 */ 'A', 'd', 'd', 'i', 'u', 'R', 'x', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2812 */ 'B', 'n', 'e', 'z', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2824 */ 'B', 'e', 'q', 'z', 'R', 'x', 'I', 'm', 'm', '1', '6', 0,
  /* 2836 */ 'B', 'i', 'm', 'm', '1', '6', 0,
  /* 2843 */ 'M', 'f', 'l', 'o', '1', '6', 0,
  /* 2850 */ 'L', 'w', 'R', 'x', 'P', 'c', 'T', 'c', 'p', '1', '6', 0,
  /* 2862 */ 'S', 'e', 'b', 'R', 'x', '1', '6', 0,
  /* 2870 */ 'J', 'r', 'c', 'R', 'x', '1', '6', 0,
  /* 2878 */ 'S', 'e', 'h', 'R', 'x', '1', '6', 0,
  /* 2886 */ 'S', 'l', 't', 'C', 'C', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2898 */ 'S', 'l', 't', 'u', 'C', 'C', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2911 */ 'N', 'e', 'g', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2921 */ 'C', 'm', 'p', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2931 */ 'S', 'l', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2941 */ 'M', 'u', 'l', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2952 */ 'N', 'o', 't', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2962 */ 'S', 'l', 't', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2973 */ 'M', 'u', 'l', 't', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2985 */ 'D', 'i', 'v', 'u', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 2996 */ 'S', 'r', 'a', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 3007 */ 'D', 'i', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 3017 */ 'S', 'l', 'l', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 3028 */ 'S', 'r', 'l', 'v', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 3039 */ 'A', 'n', 'd', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 3051 */ 'O', 'r', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 3062 */ 'X', 'o', 'r', 'R', 'x', 'R', 'x', 'R', 'y', '1', '6', 0,
  /* 3074 */ 'M', 'u', 'l', 't', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 3087 */ 'S', 'u', 'b', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 3100 */ 'A', 'd', 'd', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 3113 */ 'S', 'l', 't', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 3126 */ 'M', 'u', 'l', 't', 'u', 'R', 'x', 'R', 'y', 'R', 'z', '1', '6', 0,
  /* 3140 */ 'B', 't', 'n', 'e', 'z', '1', '6', 0,
  /* 3148 */ 'B', 't', 'e', 'q', 'z', '1', '6', 0,
  /* 3156 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '1', '2', '8', 0,
  /* 3168 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '1', '2', '8', 0,
  /* 3181 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 3200 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 3219 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 3239 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 3258 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 3273 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 3292 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 3311 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 3329 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', 0,
  /* 3344 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 'A', 0,
  /* 3360 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', 0,
  /* 3375 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 'A', 0,
  /* 3391 */ 'D', 'S', 'R', 'A', 0,
  /* 3396 */ 'R', 'e', 't', 'R', 'A', 0,
  /* 3402 */ 'L', 'S', 'A', 0,
  /* 3406 */ 'C', 'F', 'C', 'M', 'S', 'A', 0,
  /* 3413 */ 'C', 'T', 'C', 'M', 'S', 'A', 0,
  /* 3420 */ 'S', 'E', 'B', 0,
  /* 3424 */ 'L', 'B', 0,
  /* 3427 */ 'S', 'H', 'R', 'A', '_', 'Q', 'B', 0,
  /* 3435 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 3448 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 3460 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'L', 'E', '_', 'Q', 'B', 0,
  /* 3477 */ 'S', 'U', 'B', 'U', 'H', '_', 'Q', 'B', 0,
  /* 3486 */ 'A', 'D', 'D', 'U', 'H', '_', 'Q', 'B', 0,
  /* 3495 */ 'P', 's', 'e', 'u', 'd', 'o', 'P', 'I', 'C', 'K', '_', 'Q', 'B', 0,
  /* 3509 */ 'S', 'H', 'L', 'L', '_', 'Q', 'B', 0,
  /* 3517 */ 'R', 'E', 'P', 'L', '_', 'Q', 'B', 0,
  /* 3525 */ 'S', 'H', 'R', 'L', '_', 'Q', 'B', 0,
  /* 3533 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 3546 */ 'C', 'M', 'P', 'G', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 3558 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'E', 'Q', '_', 'Q', 'B', 0,
  /* 3575 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'Q', 'B', 0,
  /* 3585 */ 'S', 'U', 'B', 'U', 'H', '_', 'R', '_', 'Q', 'B', 0,
  /* 3596 */ 'A', 'D', 'D', 'U', 'H', '_', 'R', '_', 'Q', 'B', 0,
  /* 3607 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'Q', 'B', 0,
  /* 3618 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'Q', 'B', 0,
  /* 3628 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'Q', 'B', 0,
  /* 3638 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'Q', 'B', 0,
  /* 3648 */ 'C', 'M', 'P', 'G', 'D', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 3661 */ 'C', 'M', 'P', 'G', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 3673 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', 'U', '_', 'L', 'T', '_', 'Q', 'B', 0,
  /* 3690 */ 'S', 'U', 'B', 'U', '_', 'Q', 'B', 0,
  /* 3698 */ 'A', 'D', 'D', 'U', '_', 'Q', 'B', 0,
  /* 3706 */ 'S', 'H', 'R', 'A', 'V', '_', 'Q', 'B', 0,
  /* 3715 */ 'S', 'H', 'L', 'L', 'V', '_', 'Q', 'B', 0,
  /* 3724 */ 'R', 'E', 'P', 'L', 'V', '_', 'Q', 'B', 0,
  /* 3733 */ 'S', 'H', 'R', 'L', 'V', '_', 'Q', 'B', 0,
  /* 3742 */ 'R', 'A', 'D', 'D', 'U', '_', 'W', '_', 'Q', 'B', 0,
  /* 3753 */ 'S', 'B', 0,
  /* 3756 */ 'M', 'O', 'D', 'S', 'U', 'B', 0,
  /* 3763 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 0,
  /* 3774 */ 'S', 'R', 'A', '_', 'B', 0,
  /* 3780 */ 'A', 'D', 'D', '_', 'A', '_', 'B', 0,
  /* 3788 */ 'M', 'I', 'N', '_', 'A', '_', 'B', 0,
  /* 3796 */ 'A', 'D', 'D', 'S', '_', 'A', '_', 'B', 0,
  /* 3805 */ 'M', 'A', 'X', '_', 'A', '_', 'B', 0,
  /* 3813 */ 'N', 'L', 'O', 'C', '_', 'B', 0,
  /* 3820 */ 'N', 'L', 'Z', 'C', '_', 'B', 0,
  /* 3827 */ 'S', 'L', 'D', '_', 'B', 0,
  /* 3833 */ 'P', 'C', 'K', 'O', 'D', '_', 'B', 0,
  /* 3841 */ 'I', 'L', 'V', 'O', 'D', '_', 'B', 0,
  /* 3849 */ 'I', 'N', 'S', 'V', 'E', '_', 'B', 0,
  /* 3857 */ 'V', 'S', 'H', 'F', '_', 'B', 0,
  /* 3864 */ 'B', 'N', 'E', 'G', '_', 'B', 0,
  /* 3871 */ 'S', 'R', 'A', 'I', '_', 'B', 0,
  /* 3878 */ 'S', 'L', 'D', 'I', '_', 'B', 0,
  /* 3885 */ 'A', 'N', 'D', 'I', '_', 'B', 0,
  /* 3892 */ 'B', 'N', 'E', 'G', 'I', '_', 'B', 0,
  /* 3900 */ 'B', 'S', 'E', 'L', 'I', '_', 'B', 0,
  /* 3908 */ 'S', 'L', 'L', 'I', '_', 'B', 0,
  /* 3915 */ 'S', 'R', 'L', 'I', '_', 'B', 0,
  /* 3922 */ 'B', 'I', 'N', 'S', 'L', 'I', '_', 'B', 0,
  /* 3931 */ 'C', 'E', 'Q', 'I', '_', 'B', 0,
  /* 3938 */ 'S', 'R', 'A', 'R', 'I', '_', 'B', 0,
  /* 3946 */ 'B', 'C', 'L', 'R', 'I', '_', 'B', 0,
  /* 3954 */ 'S', 'R', 'L', 'R', 'I', '_', 'B', 0,
  /* 3962 */ 'N', 'O', 'R', 'I', '_', 'B', 0,
  /* 3969 */ 'X', 'O', 'R', 'I', '_', 'B', 0,
  /* 3976 */ 'B', 'I', 'N', 'S', 'R', 'I', '_', 'B', 0,
  /* 3985 */ 'S', 'P', 'L', 'A', 'T', 'I', '_', 'B', 0,
  /* 3994 */ 'B', 'S', 'E', 'T', 'I', '_', 'B', 0,
  /* 4002 */ 'S', 'U', 'B', 'V', 'I', '_', 'B', 0,
  /* 4010 */ 'A', 'D', 'D', 'V', 'I', '_', 'B', 0,
  /* 4018 */ 'B', 'M', 'Z', 'I', '_', 'B', 0,
  /* 4025 */ 'B', 'M', 'N', 'Z', 'I', '_', 'B', 0,
  /* 4033 */ 'F', 'I', 'L', 'L', '_', 'B', 0,
  /* 4040 */ 'S', 'L', 'L', '_', 'B', 0,
  /* 4046 */ 'S', 'R', 'L', '_', 'B', 0,
  /* 4052 */ 'B', 'I', 'N', 'S', 'L', '_', 'B', 0,
  /* 4060 */ 'I', 'L', 'V', 'L', '_', 'B', 0,
  /* 4067 */ 'C', 'E', 'Q', '_', 'B', 0,
  /* 4073 */ 'S', 'R', 'A', 'R', '_', 'B', 0,
  /* 4080 */ 'B', 'C', 'L', 'R', '_', 'B', 0,
  /* 4087 */ 'S', 'R', 'L', 'R', '_', 'B', 0,
  /* 4094 */ 'B', 'I', 'N', 'S', 'R', '_', 'B', 0,
  /* 4102 */ 'I', 'L', 'V', 'R', '_', 'B', 0,
  /* 4109 */ 'A', 'S', 'U', 'B', '_', 'S', '_', 'B', 0,
  /* 4118 */ 'M', 'O', 'D', '_', 'S', '_', 'B', 0,
  /* 4126 */ 'C', 'L', 'E', '_', 'S', '_', 'B', 0,
  /* 4134 */ 'A', 'V', 'E', '_', 'S', '_', 'B', 0,
  /* 4142 */ 'C', 'L', 'E', 'I', '_', 'S', '_', 'B', 0,
  /* 4151 */ 'M', 'I', 'N', 'I', '_', 'S', '_', 'B', 0,
  /* 4160 */ 'C', 'L', 'T', 'I', '_', 'S', '_', 'B', 0,
  /* 4169 */ 'M', 'A', 'X', 'I', '_', 'S', '_', 'B', 0,
  /* 4178 */ 'M', 'I', 'N', '_', 'S', '_', 'B', 0,
  /* 4186 */ 'A', 'V', 'E', 'R', '_', 'S', '_', 'B', 0,
  /* 4195 */ 'S', 'U', 'B', 'S', '_', 'S', '_', 'B', 0,
  /* 4204 */ 'A', 'D', 'D', 'S', '_', 'S', '_', 'B', 0,
  /* 4213 */ 'S', 'A', 'T', '_', 'S', '_', 'B', 0,
  /* 4221 */ 'C', 'L', 'T', '_', 'S', '_', 'B', 0,
  /* 4229 */ 'S', 'U', 'B', 'S', 'U', 'U', '_', 'S', '_', 'B', 0,
  /* 4240 */ 'D', 'I', 'V', '_', 'S', '_', 'B', 0,
  /* 4248 */ 'M', 'A', 'X', '_', 'S', '_', 'B', 0,
  /* 4256 */ 'C', 'O', 'P', 'Y', '_', 'S', '_', 'B', 0,
  /* 4265 */ 'S', 'P', 'L', 'A', 'T', '_', 'B', 0,
  /* 4273 */ 'B', 'S', 'E', 'T', '_', 'B', 0,
  /* 4280 */ 'P', 'C', 'N', 'T', '_', 'B', 0,
  /* 4287 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'B', 0,
  /* 4296 */ 'S', 'T', '_', 'B', 0,
  /* 4301 */ 'A', 'S', 'U', 'B', '_', 'U', '_', 'B', 0,
  /* 4310 */ 'M', 'O', 'D', '_', 'U', '_', 'B', 0,
  /* 4318 */ 'C', 'L', 'E', '_', 'U', '_', 'B', 0,
  /* 4326 */ 'A', 'V', 'E', '_', 'U', '_', 'B', 0,
  /* 4334 */ 'C', 'L', 'E', 'I', '_', 'U', '_', 'B', 0,
  /* 4343 */ 'M', 'I', 'N', 'I', '_', 'U', '_', 'B', 0,
  /* 4352 */ 'C', 'L', 'T', 'I', '_', 'U', '_', 'B', 0,
  /* 4361 */ 'M', 'A', 'X', 'I', '_', 'U', '_', 'B', 0,
  /* 4370 */ 'M', 'I', 'N', '_', 'U', '_', 'B', 0,
  /* 4378 */ 'A', 'V', 'E', 'R', '_', 'U', '_', 'B', 0,
  /* 4387 */ 'S', 'U', 'B', 'S', '_', 'U', '_', 'B', 0,
  /* 4396 */ 'A', 'D', 'D', 'S', '_', 'U', '_', 'B', 0,
  /* 4405 */ 'S', 'U', 'B', 'S', 'U', 'S', '_', 'U', '_', 'B', 0,
  /* 4416 */ 'S', 'A', 'T', '_', 'U', '_', 'B', 0,
  /* 4424 */ 'C', 'L', 'T', '_', 'U', '_', 'B', 0,
  /* 4432 */ 'D', 'I', 'V', '_', 'U', '_', 'B', 0,
  /* 4440 */ 'M', 'A', 'X', '_', 'U', '_', 'B', 0,
  /* 4448 */ 'C', 'O', 'P', 'Y', '_', 'U', '_', 'B', 0,
  /* 4457 */ 'M', 'S', 'U', 'B', 'V', '_', 'B', 0,
  /* 4465 */ 'M', 'A', 'D', 'D', 'V', '_', 'B', 0,
  /* 4473 */ 'P', 'C', 'K', 'E', 'V', '_', 'B', 0,
  /* 4481 */ 'I', 'L', 'V', 'E', 'V', '_', 'B', 0,
  /* 4489 */ 'M', 'U', 'L', 'V', '_', 'B', 0,
  /* 4496 */ 'B', 'Z', '_', 'B', 0,
  /* 4501 */ 'B', 'N', 'Z', '_', 'B', 0,
  /* 4507 */ 'S', 'Y', 'N', 'C', 0,
  /* 4512 */ 'A', 'D', 'D', 'S', 'C', 0,
  /* 4518 */ 'A', 'D', 'D', 'W', 'C', 0,
  /* 4524 */ 'S', 'C', 'D', 0,
  /* 4528 */ 'D', 'A', 'D', 'D', 0,
  /* 4533 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 0,
  /* 4544 */ 'D', 'S', 'H', 'D', 0,
  /* 4549 */ 'L', 'L', 'D', 0,
  /* 4553 */ 'A', 'N', 'D', 0,
  /* 4557 */ 'P', 'R', 'E', 'P', 'E', 'N', 'D', 0,
  /* 4565 */ 'A', 'P', 'P', 'E', 'N', 'D', 0,
  /* 4572 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4585 */ 'S', 'D', 0,
  /* 4588 */ 'F', 'L', 'O', 'G', '2', '_', 'D', 0,
  /* 4596 */ 'F', 'E', 'X', 'P', '2', '_', 'D', 0,
  /* 4604 */ 'S', 'R', 'A', '_', 'D', 0,
  /* 4610 */ 'A', 'D', 'D', '_', 'A', '_', 'D', 0,
  /* 4618 */ 'F', 'M', 'I', 'N', '_', 'A', '_', 'D', 0,
  /* 4627 */ 'A', 'D', 'D', 'S', '_', 'A', '_', 'D', 0,
  /* 4636 */ 'F', 'M', 'A', 'X', '_', 'A', '_', 'D', 0,
  /* 4645 */ 'F', 'S', 'U', 'B', '_', 'D', 0,
  /* 4652 */ 'F', 'M', 'S', 'U', 'B', '_', 'D', 0,
  /* 4660 */ 'N', 'L', 'O', 'C', '_', 'D', 0,
  /* 4667 */ 'N', 'L', 'Z', 'C', '_', 'D', 0,
  /* 4674 */ 'F', 'A', 'D', 'D', '_', 'D', 0,
  /* 4681 */ 'F', 'M', 'A', 'D', 'D', '_', 'D', 0,
  /* 4689 */ 'S', 'L', 'D', '_', 'D', 0,
  /* 4695 */ 'P', 'C', 'K', 'O', 'D', '_', 'D', 0,
  /* 4703 */ 'I', 'L', 'V', 'O', 'D', '_', 'D', 0,
  /* 4711 */ 'F', 'C', 'L', 'E', '_', 'D', 0,
  /* 4718 */ 'F', 'S', 'L', 'E', '_', 'D', 0,
  /* 4725 */ 'F', 'C', 'U', 'L', 'E', '_', 'D', 0,
  /* 4733 */ 'F', 'S', 'U', 'L', 'E', '_', 'D', 0,
  /* 4741 */ 'F', 'C', 'N', 'E', '_', 'D', 0,
  /* 4748 */ 'F', 'S', 'N', 'E', '_', 'D', 0,
  /* 4755 */ 'F', 'C', 'U', 'N', 'E', '_', 'D', 0,
  /* 4763 */ 'F', 'S', 'U', 'N', 'E', '_', 'D', 0,
  /* 4771 */ 'I', 'N', 'S', 'V', 'E', '_', 'D', 0,
  /* 4779 */ 'F', 'C', 'A', 'F', '_', 'D', 0,
  /* 4786 */ 'F', 'S', 'A', 'F', '_', 'D', 0,
  /* 4793 */ 'V', 'S', 'H', 'F', '_', 'D', 0,
  /* 4800 */ 'B', 'N', 'E', 'G', '_', 'D', 0,
  /* 4807 */ 'S', 'R', 'A', 'I', '_', 'D', 0,
  /* 4814 */ 'S', 'L', 'D', 'I', '_', 'D', 0,
  /* 4821 */ 'B', 'N', 'E', 'G', 'I', '_', 'D', 0,
  /* 4829 */ 'S', 'L', 'L', 'I', '_', 'D', 0,
  /* 4836 */ 'S', 'R', 'L', 'I', '_', 'D', 0,
  /* 4843 */ 'B', 'I', 'N', 'S', 'L', 'I', '_', 'D', 0,
  /* 4852 */ 'C', 'E', 'Q', 'I', '_', 'D', 0,
  /* 4859 */ 'S', 'R', 'A', 'R', 'I', '_', 'D', 0,
  /* 4867 */ 'B', 'C', 'L', 'R', 'I', '_', 'D', 0,
  /* 4875 */ 'S', 'R', 'L', 'R', 'I', '_', 'D', 0,
  /* 4883 */ 'B', 'I', 'N', 'S', 'R', 'I', '_', 'D', 0,
  /* 4892 */ 'S', 'P', 'L', 'A', 'T', 'I', '_', 'D', 0,
  /* 4901 */ 'B', 'S', 'E', 'T', 'I', '_', 'D', 0,
  /* 4909 */ 'S', 'U', 'B', 'V', 'I', '_', 'D', 0,
  /* 4917 */ 'A', 'D', 'D', 'V', 'I', '_', 'D', 0,
  /* 4925 */ 'S', 'L', 'L', '_', 'D', 0,
  /* 4931 */ 'F', 'E', 'X', 'U', 'P', 'L', '_', 'D', 0,
  /* 4940 */ 'F', 'F', 'Q', 'L', '_', 'D', 0,
  /* 4947 */ 'S', 'R', 'L', '_', 'D', 0,
  /* 4953 */ 'B', 'I', 'N', 'S', 'L', '_', 'D', 0,
  /* 4961 */ 'F', 'M', 'U', 'L', '_', 'D', 0,
  /* 4968 */ 'I', 'L', 'V', 'L', '_', 'D', 0,
  /* 4975 */ 'F', 'M', 'I', 'N', '_', 'D', 0,
  /* 4982 */ 'F', 'C', 'U', 'N', '_', 'D', 0,
  /* 4989 */ 'F', 'S', 'U', 'N', '_', 'D', 0,
  /* 4996 */ 'F', 'R', 'C', 'P', '_', 'D', 0,
  /* 5003 */ 'F', 'C', 'E', 'Q', '_', 'D', 0,
  /* 5010 */ 'F', 'S', 'E', 'Q', '_', 'D', 0,
  /* 5017 */ 'F', 'C', 'U', 'E', 'Q', '_', 'D', 0,
  /* 5025 */ 'F', 'S', 'U', 'E', 'Q', '_', 'D', 0,
  /* 5033 */ 'S', 'R', 'A', 'R', '_', 'D', 0,
  /* 5040 */ 'B', 'C', 'L', 'R', '_', 'D', 0,
  /* 5047 */ 'S', 'R', 'L', 'R', '_', 'D', 0,
  /* 5054 */ 'F', 'C', 'O', 'R', '_', 'D', 0,
  /* 5061 */ 'F', 'S', 'O', 'R', '_', 'D', 0,
  /* 5068 */ 'F', 'E', 'X', 'U', 'P', 'R', '_', 'D', 0,
  /* 5077 */ 'F', 'F', 'Q', 'R', '_', 'D', 0,
  /* 5084 */ 'B', 'I', 'N', 'S', 'R', '_', 'D', 0,
  /* 5092 */ 'I', 'L', 'V', 'R', '_', 'D', 0,
  /* 5099 */ 'F', 'A', 'B', 'S', '_', 'D', 0,
  /* 5106 */ 'F', 'C', 'L', 'A', 'S', 'S', '_', 'D', 0,
  /* 5115 */ 'A', 'S', 'U', 'B', '_', 'S', '_', 'D', 0,
  /* 5124 */ 'H', 'S', 'U', 'B', '_', 'S', '_', 'D', 0,
  /* 5133 */ 'D', 'P', 'S', 'U', 'B', '_', 'S', '_', 'D', 0,
  /* 5143 */ 'F', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'D', 0,
  /* 5154 */ 'H', 'A', 'D', 'D', '_', 'S', '_', 'D', 0,
  /* 5163 */ 'D', 'P', 'A', 'D', 'D', '_', 'S', '_', 'D', 0,
  /* 5173 */ 'M', 'O', 'D', '_', 'S', '_', 'D', 0,
  /* 5181 */ 'C', 'L', 'E', '_', 'S', '_', 'D', 0,
  /* 5189 */ 'A', 'V', 'E', '_', 'S', '_', 'D', 0,
  /* 5197 */ 'C', 'L', 'E', 'I', '_', 'S', '_', 'D', 0,
  /* 5206 */ 'M', 'I', 'N', 'I', '_', 'S', '_', 'D', 0,
  /* 5215 */ 'C', 'L', 'T', 'I', '_', 'S', '_', 'D', 0,
  /* 5224 */ 'M', 'A', 'X', 'I', '_', 'S', '_', 'D', 0,
  /* 5233 */ 'M', 'I', 'N', '_', 'S', '_', 'D', 0,
  /* 5241 */ 'D', 'O', 'T', 'P', '_', 'S', '_', 'D', 0,
  /* 5250 */ 'A', 'V', 'E', 'R', '_', 'S', '_', 'D', 0,
  /* 5259 */ 'S', 'U', 'B', 'S', '_', 'S', '_', 'D', 0,
  /* 5268 */ 'A', 'D', 'D', 'S', '_', 'S', '_', 'D', 0,
  /* 5277 */ 'S', 'A', 'T', '_', 'S', '_', 'D', 0,
  /* 5285 */ 'C', 'L', 'T', '_', 'S', '_', 'D', 0,
  /* 5293 */ 'F', 'F', 'I', 'N', 'T', '_', 'S', '_', 'D', 0,
  /* 5303 */ 'F', 'T', 'I', 'N', 'T', '_', 'S', '_', 'D', 0,
  /* 5313 */ 'S', 'U', 'B', 'S', 'U', 'U', '_', 'S', '_', 'D', 0,
  /* 5324 */ 'D', 'I', 'V', '_', 'S', '_', 'D', 0,
  /* 5332 */ 'M', 'A', 'X', '_', 'S', '_', 'D', 0,
  /* 5340 */ 'S', 'P', 'L', 'A', 'T', '_', 'D', 0,
  /* 5348 */ 'B', 'S', 'E', 'T', '_', 'D', 0,
  /* 5355 */ 'F', 'C', 'L', 'T', '_', 'D', 0,
  /* 5362 */ 'F', 'S', 'L', 'T', '_', 'D', 0,
  /* 5369 */ 'F', 'C', 'U', 'L', 'T', '_', 'D', 0,
  /* 5377 */ 'F', 'S', 'U', 'L', 'T', '_', 'D', 0,
  /* 5385 */ 'P', 'C', 'N', 'T', '_', 'D', 0,
  /* 5392 */ 'F', 'R', 'I', 'N', 'T', '_', 'D', 0,
  /* 5400 */ 'F', 'S', 'Q', 'R', 'T', '_', 'D', 0,
  /* 5408 */ 'F', 'R', 'S', 'Q', 'R', 'T', '_', 'D', 0,
  /* 5417 */ 'S', 'T', '_', 'D', 0,
  /* 5422 */ 'A', 'S', 'U', 'B', '_', 'U', '_', 'D', 0,
  /* 5431 */ 'H', 'S', 'U', 'B', '_', 'U', '_', 'D', 0,
  /* 5440 */ 'D', 'P', 'S', 'U', 'B', '_', 'U', '_', 'D', 0,
  /* 5450 */ 'F', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'D', 0,
  /* 5461 */ 'H', 'A', 'D', 'D', '_', 'U', '_', 'D', 0,
  /* 5470 */ 'D', 'P', 'A', 'D', 'D', '_', 'U', '_', 'D', 0,
  /* 5480 */ 'M', 'O', 'D', '_', 'U', '_', 'D', 0,
  /* 5488 */ 'C', 'L', 'E', '_', 'U', '_', 'D', 0,
  /* 5496 */ 'A', 'V', 'E', '_', 'U', '_', 'D', 0,
  /* 5504 */ 'C', 'L', 'E', 'I', '_', 'U', '_', 'D', 0,
  /* 5513 */ 'M', 'I', 'N', 'I', '_', 'U', '_', 'D', 0,
  /* 5522 */ 'C', 'L', 'T', 'I', '_', 'U', '_', 'D', 0,
  /* 5531 */ 'M', 'A', 'X', 'I', '_', 'U', '_', 'D', 0,
  /* 5540 */ 'M', 'I', 'N', '_', 'U', '_', 'D', 0,
  /* 5548 */ 'D', 'O', 'T', 'P', '_', 'U', '_', 'D', 0,
  /* 5557 */ 'A', 'V', 'E', 'R', '_', 'U', '_', 'D', 0,
  /* 5566 */ 'S', 'U', 'B', 'S', '_', 'U', '_', 'D', 0,
  /* 5575 */ 'A', 'D', 'D', 'S', '_', 'U', '_', 'D', 0,
  /* 5584 */ 'S', 'U', 'B', 'S', 'U', 'S', '_', 'U', '_', 'D', 0,
  /* 5595 */ 'S', 'A', 'T', '_', 'U', '_', 'D', 0,
  /* 5603 */ 'C', 'L', 'T', '_', 'U', '_', 'D', 0,
  /* 5611 */ 'F', 'F', 'I', 'N', 'T', '_', 'U', '_', 'D', 0,
  /* 5621 */ 'F', 'T', 'I', 'N', 'T', '_', 'U', '_', 'D', 0,
  /* 5631 */ 'D', 'I', 'V', '_', 'U', '_', 'D', 0,
  /* 5639 */ 'M', 'A', 'X', '_', 'U', '_', 'D', 0,
  /* 5647 */ 'M', 'S', 'U', 'B', 'V', '_', 'D', 0,
  /* 5655 */ 'M', 'A', 'D', 'D', 'V', '_', 'D', 0,
  /* 5663 */ 'P', 'C', 'K', 'E', 'V', '_', 'D', 0,
  /* 5671 */ 'I', 'L', 'V', 'E', 'V', '_', 'D', 0,
  /* 5679 */ 'F', 'D', 'I', 'V', '_', 'D', 0,
  /* 5686 */ 'M', 'U', 'L', 'V', '_', 'D', 0,
  /* 5693 */ 'F', 'M', 'A', 'X', '_', 'D', 0,
  /* 5700 */ 'B', 'Z', '_', 'D', 0,
  /* 5705 */ 'B', 'N', 'Z', '_', 'D', 0,
  /* 5711 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 5724 */ 'T', 'G', 'E', 0,
  /* 5728 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 5735 */ 'B', 'N', 'E', 0,
  /* 5739 */ 'T', 'N', 'E', 0,
  /* 5743 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 5753 */ 'B', 'C', '1', 'F', 0,
  /* 5758 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 5771 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 5786 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 5800 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 5814 */ 'D', 'S', 'B', 'H', 0,
  /* 5819 */ 'W', 'S', 'B', 'H', 0,
  /* 5824 */ 'S', 'E', 'H', 0,
  /* 5828 */ 'L', 'H', 0,
  /* 5831 */ 'S', 'H', 'R', 'A', '_', 'P', 'H', 0,
  /* 5839 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5852 */ 'P', 'R', 'E', 'C', 'R', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5864 */ 'P', 'R', 'E', 'C', 'R', 'Q', 'U', '_', 'S', '_', 'Q', 'B', '_', 'P', 'H', 0,
  /* 5880 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'L', 'E', '_', 'P', 'H', 0,
  /* 5896 */ 'S', 'U', 'B', 'Q', 'H', '_', 'P', 'H', 0,
  /* 5905 */ 'A', 'D', 'D', 'Q', 'H', '_', 'P', 'H', 0,
  /* 5914 */ 'P', 's', 'e', 'u', 'd', 'o', 'P', 'I', 'C', 'K', '_', 'P', 'H', 0,
  /* 5928 */ 'S', 'H', 'L', 'L', '_', 'P', 'H', 0,
  /* 5936 */ 'R', 'E', 'P', 'L', '_', 'P', 'H', 0,
  /* 5944 */ 'S', 'H', 'R', 'L', '_', 'P', 'H', 0,
  /* 5952 */ 'P', 'A', 'C', 'K', 'R', 'L', '_', 'P', 'H', 0,
  /* 5962 */ 'M', 'U', 'L', '_', 'P', 'H', 0,
  /* 5969 */ 'S', 'U', 'B', 'Q', '_', 'P', 'H', 0,
  /* 5977 */ 'A', 'D', 'D', 'Q', '_', 'P', 'H', 0,
  /* 5985 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'E', 'Q', '_', 'P', 'H', 0,
  /* 6001 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'P', 'H', 0,
  /* 6011 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'P', 'H', 0,
  /* 6022 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'P', 'H', 0,
  /* 6033 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'P', 'H', 0,
  /* 6044 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'P', 'H', 0,
  /* 6055 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'P', 'H', 0,
  /* 6065 */ 'M', 'U', 'L', '_', 'S', '_', 'P', 'H', 0,
  /* 6074 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 6084 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 6094 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 6104 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'P', 'H', 0,
  /* 6114 */ 'S', 'U', 'B', 'U', '_', 'S', '_', 'P', 'H', 0,
  /* 6124 */ 'A', 'D', 'D', 'U', '_', 'S', '_', 'P', 'H', 0,
  /* 6134 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'P', 'H', 0,
  /* 6145 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'M', 'P', '_', 'L', 'T', '_', 'P', 'H', 0,
  /* 6161 */ 'S', 'U', 'B', 'U', '_', 'P', 'H', 0,
  /* 6169 */ 'A', 'D', 'D', 'U', '_', 'P', 'H', 0,
  /* 6177 */ 'S', 'H', 'R', 'A', 'V', '_', 'P', 'H', 0,
  /* 6186 */ 'S', 'H', 'L', 'L', 'V', '_', 'P', 'H', 0,
  /* 6195 */ 'R', 'E', 'P', 'L', 'V', '_', 'P', 'H', 0,
  /* 6204 */ 'S', 'H', 'R', 'L', 'V', '_', 'P', 'H', 0,
  /* 6213 */ 'D', 'P', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 6222 */ 'M', 'U', 'L', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 6233 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 6247 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 0,
  /* 6261 */ 'D', 'P', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 6270 */ 'D', 'P', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 6282 */ 'M', 'U', 'L', 'S', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 6296 */ 'D', 'P', 'S', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 6308 */ 'D', 'P', 'A', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 6321 */ 'D', 'P', 'S', 'Q', 'X', '_', 'S', '_', 'W', '_', 'P', 'H', 0,
  /* 6334 */ 'D', 'P', 'A', 'X', '_', 'W', '_', 'P', 'H', 0,
  /* 6344 */ 'D', 'P', 'S', 'X', '_', 'W', '_', 'P', 'H', 0,
  /* 6354 */ 'S', 'H', 0,
  /* 6357 */ 'S', 'R', 'A', '_', 'H', 0,
  /* 6363 */ 'A', 'D', 'D', '_', 'A', '_', 'H', 0,
  /* 6371 */ 'M', 'I', 'N', '_', 'A', '_', 'H', 0,
  /* 6379 */ 'A', 'D', 'D', 'S', '_', 'A', '_', 'H', 0,
  /* 6388 */ 'M', 'A', 'X', '_', 'A', '_', 'H', 0,
  /* 6396 */ 'N', 'L', 'O', 'C', '_', 'H', 0,
  /* 6403 */ 'N', 'L', 'Z', 'C', '_', 'H', 0,
  /* 6410 */ 'S', 'L', 'D', '_', 'H', 0,
  /* 6416 */ 'P', 'C', 'K', 'O', 'D', '_', 'H', 0,
  /* 6424 */ 'I', 'L', 'V', 'O', 'D', '_', 'H', 0,
  /* 6432 */ 'I', 'N', 'S', 'V', 'E', '_', 'H', 0,
  /* 6440 */ 'V', 'S', 'H', 'F', '_', 'H', 0,
  /* 6447 */ 'B', 'N', 'E', 'G', '_', 'H', 0,
  /* 6454 */ 'S', 'R', 'A', 'I', '_', 'H', 0,
  /* 6461 */ 'S', 'L', 'D', 'I', '_', 'H', 0,
  /* 6468 */ 'B', 'N', 'E', 'G', 'I', '_', 'H', 0,
  /* 6476 */ 'S', 'L', 'L', 'I', '_', 'H', 0,
  /* 6483 */ 'S', 'R', 'L', 'I', '_', 'H', 0,
  /* 6490 */ 'B', 'I', 'N', 'S', 'L', 'I', '_', 'H', 0,
  /* 6499 */ 'C', 'E', 'Q', 'I', '_', 'H', 0,
  /* 6506 */ 'S', 'R', 'A', 'R', 'I', '_', 'H', 0,
  /* 6514 */ 'B', 'C', 'L', 'R', 'I', '_', 'H', 0,
  /* 6522 */ 'S', 'R', 'L', 'R', 'I', '_', 'H', 0,
  /* 6530 */ 'B', 'I', 'N', 'S', 'R', 'I', '_', 'H', 0,
  /* 6539 */ 'S', 'P', 'L', 'A', 'T', 'I', '_', 'H', 0,
  /* 6548 */ 'B', 'S', 'E', 'T', 'I', '_', 'H', 0,
  /* 6556 */ 'S', 'U', 'B', 'V', 'I', '_', 'H', 0,
  /* 6564 */ 'A', 'D', 'D', 'V', 'I', '_', 'H', 0,
  /* 6572 */ 'F', 'I', 'L', 'L', '_', 'H', 0,
  /* 6579 */ 'S', 'L', 'L', '_', 'H', 0,
  /* 6585 */ 'S', 'R', 'L', '_', 'H', 0,
  /* 6591 */ 'B', 'I', 'N', 'S', 'L', '_', 'H', 0,
  /* 6599 */ 'I', 'L', 'V', 'L', '_', 'H', 0,
  /* 6606 */ 'F', 'E', 'X', 'D', 'O', '_', 'H', 0,
  /* 6614 */ 'C', 'E', 'Q', '_', 'H', 0,
  /* 6620 */ 'F', 'T', 'Q', '_', 'H', 0,
  /* 6626 */ 'M', 'S', 'U', 'B', '_', 'Q', '_', 'H', 0,
  /* 6635 */ 'M', 'A', 'D', 'D', '_', 'Q', '_', 'H', 0,
  /* 6644 */ 'M', 'U', 'L', '_', 'Q', '_', 'H', 0,
  /* 6652 */ 'M', 'S', 'U', 'B', 'R', '_', 'Q', '_', 'H', 0,
  /* 6662 */ 'M', 'A', 'D', 'D', 'R', '_', 'Q', '_', 'H', 0,
  /* 6672 */ 'M', 'U', 'L', 'R', '_', 'Q', '_', 'H', 0,
  /* 6681 */ 'S', 'R', 'A', 'R', '_', 'H', 0,
  /* 6688 */ 'B', 'C', 'L', 'R', '_', 'H', 0,
  /* 6695 */ 'S', 'R', 'L', 'R', '_', 'H', 0,
  /* 6702 */ 'B', 'I', 'N', 'S', 'R', '_', 'H', 0,
  /* 6710 */ 'I', 'L', 'V', 'R', '_', 'H', 0,
  /* 6717 */ 'A', 'S', 'U', 'B', '_', 'S', '_', 'H', 0,
  /* 6726 */ 'H', 'S', 'U', 'B', '_', 'S', '_', 'H', 0,
  /* 6735 */ 'D', 'P', 'S', 'U', 'B', '_', 'S', '_', 'H', 0,
  /* 6745 */ 'H', 'A', 'D', 'D', '_', 'S', '_', 'H', 0,
  /* 6754 */ 'D', 'P', 'A', 'D', 'D', '_', 'S', '_', 'H', 0,
  /* 6764 */ 'M', 'O', 'D', '_', 'S', '_', 'H', 0,
  /* 6772 */ 'C', 'L', 'E', '_', 'S', '_', 'H', 0,
  /* 6780 */ 'A', 'V', 'E', '_', 'S', '_', 'H', 0,
  /* 6788 */ 'C', 'L', 'E', 'I', '_', 'S', '_', 'H', 0,
  /* 6797 */ 'M', 'I', 'N', 'I', '_', 'S', '_', 'H', 0,
  /* 6806 */ 'C', 'L', 'T', 'I', '_', 'S', '_', 'H', 0,
  /* 6815 */ 'M', 'A', 'X', 'I', '_', 'S', '_', 'H', 0,
  /* 6824 */ 'M', 'I', 'N', '_', 'S', '_', 'H', 0,
  /* 6832 */ 'D', 'O', 'T', 'P', '_', 'S', '_', 'H', 0,
  /* 6841 */ 'A', 'V', 'E', 'R', '_', 'S', '_', 'H', 0,
  /* 6850 */ 'E', 'X', 'T', 'R', '_', 'S', '_', 'H', 0,
  /* 6859 */ 'S', 'U', 'B', 'S', '_', 'S', '_', 'H', 0,
  /* 6868 */ 'A', 'D', 'D', 'S', '_', 'S', '_', 'H', 0,
  /* 6877 */ 'S', 'A', 'T', '_', 'S', '_', 'H', 0,
  /* 6885 */ 'C', 'L', 'T', '_', 'S', '_', 'H', 0,
  /* 6893 */ 'S', 'U', 'B', 'S', 'U', 'U', '_', 'S', '_', 'H', 0,
  /* 6904 */ 'D', 'I', 'V', '_', 'S', '_', 'H', 0,
  /* 6912 */ 'E', 'X', 'T', 'R', 'V', '_', 'S', '_', 'H', 0,
  /* 6922 */ 'M', 'A', 'X', '_', 'S', '_', 'H', 0,
  /* 6930 */ 'C', 'O', 'P', 'Y', '_', 'S', '_', 'H', 0,
  /* 6939 */ 'S', 'P', 'L', 'A', 'T', '_', 'H', 0,
  /* 6947 */ 'B', 'S', 'E', 'T', '_', 'H', 0,
  /* 6954 */ 'P', 'C', 'N', 'T', '_', 'H', 0,
  /* 6961 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'H', 0,
  /* 6970 */ 'S', 'T', '_', 'H', 0,
  /* 6975 */ 'A', 'S', 'U', 'B', '_', 'U', '_', 'H', 0,
  /* 6984 */ 'H', 'S', 'U', 'B', '_', 'U', '_', 'H', 0,
  /* 6993 */ 'D', 'P', 'S', 'U', 'B', '_', 'U', '_', 'H', 0,
  /* 7003 */ 'H', 'A', 'D', 'D', '_', 'U', '_', 'H', 0,
  /* 7012 */ 'D', 'P', 'A', 'D', 'D', '_', 'U', '_', 'H', 0,
  /* 7022 */ 'M', 'O', 'D', '_', 'U', '_', 'H', 0,
  /* 7030 */ 'C', 'L', 'E', '_', 'U', '_', 'H', 0,
  /* 7038 */ 'A', 'V', 'E', '_', 'U', '_', 'H', 0,
  /* 7046 */ 'C', 'L', 'E', 'I', '_', 'U', '_', 'H', 0,
  /* 7055 */ 'M', 'I', 'N', 'I', '_', 'U', '_', 'H', 0,
  /* 7064 */ 'C', 'L', 'T', 'I', '_', 'U', '_', 'H', 0,
  /* 7073 */ 'M', 'A', 'X', 'I', '_', 'U', '_', 'H', 0,
  /* 7082 */ 'M', 'I', 'N', '_', 'U', '_', 'H', 0,
  /* 7090 */ 'D', 'O', 'T', 'P', '_', 'U', '_', 'H', 0,
  /* 7099 */ 'A', 'V', 'E', 'R', '_', 'U', '_', 'H', 0,
  /* 7108 */ 'S', 'U', 'B', 'S', '_', 'U', '_', 'H', 0,
  /* 7117 */ 'A', 'D', 'D', 'S', '_', 'U', '_', 'H', 0,
  /* 7126 */ 'S', 'U', 'B', 'S', 'U', 'S', '_', 'U', '_', 'H', 0,
  /* 7137 */ 'S', 'A', 'T', '_', 'U', '_', 'H', 0,
  /* 7145 */ 'C', 'L', 'T', '_', 'U', '_', 'H', 0,
  /* 7153 */ 'D', 'I', 'V', '_', 'U', '_', 'H', 0,
  /* 7161 */ 'M', 'A', 'X', '_', 'U', '_', 'H', 0,
  /* 7169 */ 'C', 'O', 'P', 'Y', '_', 'U', '_', 'H', 0,
  /* 7178 */ 'M', 'S', 'U', 'B', 'V', '_', 'H', 0,
  /* 7186 */ 'M', 'A', 'D', 'D', 'V', '_', 'H', 0,
  /* 7194 */ 'P', 'C', 'K', 'E', 'V', '_', 'H', 0,
  /* 7202 */ 'I', 'L', 'V', 'E', 'V', '_', 'H', 0,
  /* 7210 */ 'M', 'U', 'L', 'V', '_', 'H', 0,
  /* 7217 */ 'B', 'Z', '_', 'H', 0,
  /* 7222 */ 'B', 'N', 'Z', '_', 'H', 0,
  /* 7228 */ 'D', 'I', 0,
  /* 7231 */ 'T', 'G', 'E', 'I', 0,
  /* 7236 */ 'T', 'N', 'E', 'I', 0,
  /* 7241 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'H', 'I', 0,
  /* 7252 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'T', 'L', 'O', 'H', 'I', 0,
  /* 7265 */ 'P', 'H', 'I', 0,
  /* 7269 */ 'M', 'T', 'H', 'I', 0,
  /* 7274 */ 'T', 'E', 'Q', 'I', 0,
  /* 7279 */ 'T', 'L', 'T', 'I', 0,
  /* 7284 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'I', 0,
  /* 7295 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'I', 0,
  /* 7306 */ 'M', 'O', 'V', 'F', '_', 'I', 0,
  /* 7313 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'I', 0,
  /* 7322 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'I', 0,
  /* 7331 */ 'M', 'O', 'V', 'T', '_', 'I', 0,
  /* 7338 */ 'J', 0,
  /* 7340 */ 'B', 'R', 'E', 'A', 'K', 0,
  /* 7346 */ 'J', 'A', 'L', 0,
  /* 7350 */ 'B', 'G', 'E', 'Z', 'A', 'L', 0,
  /* 7357 */ 'B', 'L', 'T', 'Z', 'A', 'L', 0,
  /* 7364 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 7379 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 7393 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'L', 0,
  /* 7408 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'L', 0,
  /* 7419 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'L', 0,
  /* 7430 */ 'L', 'D', 'L', 0,
  /* 7434 */ 'S', 'D', 'L', 0,
  /* 7438 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 7447 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 7460 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 7469 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 7482 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 7495 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 7507 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'L', 0,
  /* 7521 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', 0,
  /* 7530 */ 'S', 'Y', 'S', 'C', 'A', 'L', 'L', 0,
  /* 7538 */ 'K', 'I', 'L', 'L', 0,
  /* 7543 */ 'D', 'S', 'L', 'L', 0,
  /* 7548 */ 'D', 'S', 'R', 'L', 0,
  /* 7553 */ 'M', 'U', 'L', 0,
  /* 7557 */ 'L', 'W', 'L', 0,
  /* 7561 */ 'S', 'W', 'L', 0,
  /* 7565 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'L', 0,
  /* 7581 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'S', '_', 'L', 0,
  /* 7595 */ 'S', 'R', 'A', '_', 'M', 'M', 0,
  /* 7602 */ 'S', 'E', 'B', '_', 'M', 'M', 0,
  /* 7609 */ 'L', 'B', '_', 'M', 'M', 0,
  /* 7615 */ 'S', 'B', '_', 'M', 'M', 0,
  /* 7621 */ 'M', 'S', 'U', 'B', '_', 'M', 'M', 0,
  /* 7629 */ 'M', 'A', 'D', 'D', '_', 'M', 'M', 0,
  /* 7637 */ 'A', 'N', 'D', '_', 'M', 'M', 0,
  /* 7644 */ 'T', 'G', 'E', '_', 'M', 'M', 0,
  /* 7651 */ 'B', 'N', 'E', '_', 'M', 'M', 0,
  /* 7658 */ 'T', 'N', 'E', '_', 'M', 'M', 0,
  /* 7665 */ 'W', 'S', 'B', 'H', '_', 'M', 'M', 0,
  /* 7673 */ 'S', 'E', 'H', '_', 'M', 'M', 0,
  /* 7680 */ 'L', 'H', '_', 'M', 'M', 0,
  /* 7686 */ 'S', 'H', '_', 'M', 'M', 0,
  /* 7692 */ 'T', 'G', 'E', 'I', '_', 'M', 'M', 0,
  /* 7700 */ 'T', 'N', 'E', 'I', '_', 'M', 'M', 0,
  /* 7708 */ 'M', 'F', 'H', 'I', '_', 'M', 'M', 0,
  /* 7716 */ 'M', 'T', 'H', 'I', '_', 'M', 'M', 0,
  /* 7724 */ 'T', 'E', 'Q', 'I', '_', 'M', 'M', 0,
  /* 7732 */ 'T', 'L', 'T', 'I', '_', 'M', 'M', 0,
  /* 7740 */ 'M', 'O', 'V', 'F', '_', 'I', '_', 'M', 'M', 0,
  /* 7750 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'M', 'M', 0,
  /* 7760 */ 'M', 'O', 'V', 'T', '_', 'I', '_', 'M', 'M', 0,
  /* 7770 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'M', 'M', 0,
  /* 7780 */ 'J', '_', 'M', 'M', 0,
  /* 7785 */ 'J', 'A', 'L', '_', 'M', 'M', 0,
  /* 7792 */ 'B', 'G', 'E', 'Z', 'A', 'L', '_', 'M', 'M', 0,
  /* 7802 */ 'B', 'L', 'T', 'Z', 'A', 'L', '_', 'M', 'M', 0,
  /* 7812 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '_', 'M', 'M', 0,
  /* 7824 */ 'S', 'L', 'L', '_', 'M', 'M', 0,
  /* 7831 */ 'S', 'R', 'L', '_', 'M', 'M', 0,
  /* 7838 */ 'M', 'U', 'L', '_', 'M', 'M', 0,
  /* 7845 */ 'L', 'W', 'L', '_', 'M', 'M', 0,
  /* 7852 */ 'S', 'W', 'L', '_', 'M', 'M', 0,
  /* 7859 */ 'C', 'L', 'O', '_', 'M', 'M', 0,
  /* 7866 */ 'M', 'F', 'L', 'O', '_', 'M', 'M', 0,
  /* 7874 */ 'M', 'T', 'L', 'O', '_', 'M', 'M', 0,
  /* 7882 */ 'B', 'E', 'Q', '_', 'M', 'M', 0,
  /* 7889 */ 'T', 'E', 'Q', '_', 'M', 'M', 0,
  /* 7896 */ 'J', 'R', '_', 'M', 'M', 0,
  /* 7902 */ 'J', 'A', 'L', 'R', '_', 'M', 'M', 0,
  /* 7910 */ 'N', 'O', 'R', '_', 'M', 'M', 0,
  /* 7917 */ 'X', 'O', 'R', '_', 'M', 'M', 0,
  /* 7924 */ 'R', 'O', 'T', 'R', '_', 'M', 'M', 0,
  /* 7932 */ 'L', 'W', 'R', '_', 'M', 'M', 0,
  /* 7939 */ 'S', 'W', 'R', '_', 'M', 'M', 0,
  /* 7946 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '_', 'R', '_', 'M', 'M', 0,
  /* 7960 */ 'I', 'N', 'S', '_', 'M', 'M', 0,
  /* 7967 */ 'R', 'E', 'T', '_', 'M', 'M', 0,
  /* 7974 */ 'S', 'L', 'T', '_', 'M', 'M', 0,
  /* 7981 */ 'T', 'L', 'T', '_', 'M', 'M', 0,
  /* 7988 */ 'M', 'U', 'L', 'T', '_', 'M', 'M', 0,
  /* 7996 */ 'E', 'X', 'T', '_', 'M', 'M', 0,
  /* 8003 */ 'M', 'S', 'U', 'B', 'U', '_', 'M', 'M', 0,
  /* 8012 */ 'M', 'A', 'D', 'D', 'U', '_', 'M', 'M', 0,
  /* 8021 */ 'T', 'G', 'E', 'U', '_', 'M', 'M', 0,
  /* 8029 */ 'T', 'G', 'E', 'I', 'U', '_', 'M', 'M', 0,
  /* 8038 */ 'T', 'L', 'T', 'I', 'U', '_', 'M', 'M', 0,
  /* 8047 */ 'T', 'L', 'T', 'U', '_', 'M', 'M', 0,
  /* 8055 */ 'S', 'R', 'A', 'V', '_', 'M', 'M', 0,
  /* 8063 */ 'S', 'D', 'I', 'V', '_', 'M', 'M', 0,
  /* 8071 */ 'U', 'D', 'I', 'V', '_', 'M', 'M', 0,
  /* 8079 */ 'S', 'L', 'L', 'V', '_', 'M', 'M', 0,
  /* 8087 */ 'S', 'R', 'L', 'V', '_', 'M', 'M', 0,
  /* 8095 */ 'R', 'O', 'T', 'R', 'V', '_', 'M', 'M', 0,
  /* 8104 */ 'L', 'W', '_', 'M', 'M', 0,
  /* 8110 */ 'S', 'W', '_', 'M', 'M', 0,
  /* 8116 */ 'B', 'G', 'E', 'Z', '_', 'M', 'M', 0,
  /* 8124 */ 'B', 'L', 'E', 'Z', '_', 'M', 'M', 0,
  /* 8132 */ 'C', 'L', 'Z', '_', 'M', 'M', 0,
  /* 8139 */ 'B', 'G', 'T', 'Z', '_', 'M', 'M', 0,
  /* 8147 */ 'B', 'L', 'T', 'Z', '_', 'M', 'M', 0,
  /* 8155 */ 'A', 'D', 'D', 'i', '_', 'M', 'M', 0,
  /* 8163 */ 'A', 'N', 'D', 'i', '_', 'M', 'M', 0,
  /* 8171 */ 'X', 'O', 'R', 'i', '_', 'M', 'M', 0,
  /* 8179 */ 'S', 'L', 'T', 'i', '_', 'M', 'M', 0,
  /* 8187 */ 'L', 'U', 'i', '_', 'M', 'M', 0,
  /* 8194 */ 'L', 'B', 'u', '_', 'M', 'M', 0,
  /* 8201 */ 'S', 'U', 'B', 'u', '_', 'M', 'M', 0,
  /* 8209 */ 'A', 'D', 'D', 'u', '_', 'M', 'M', 0,
  /* 8217 */ 'L', 'H', 'u', '_', 'M', 'M', 0,
  /* 8224 */ 'S', 'L', 'T', 'u', '_', 'M', 'M', 0,
  /* 8232 */ 'M', 'U', 'L', 'T', 'u', '_', 'M', 'M', 0,
  /* 8241 */ 'A', 'D', 'D', 'i', 'u', '_', 'M', 'M', 0,
  /* 8250 */ 'S', 'L', 'T', 'i', 'u', '_', 'M', 'M', 0,
  /* 8259 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 8269 */ 'D', 'I', 'N', 'S', 'M', 0,
  /* 8275 */ 'D', 'E', 'X', 'T', 'M', 0,
  /* 8281 */ 'B', 'A', 'L', 'I', 'G', 'N', 0,
  /* 8288 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 8305 */ 'F', 'E', 'X', 'P', '2', '_', 'D', '_', '1', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8322 */ 'F', 'E', 'X', 'P', '2', '_', 'W', '_', '1', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8339 */ 'B', 'P', 'O', 'S', 'G', 'E', '3', '2', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8355 */ 'S', 'N', 'Z', '_', 'B', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8368 */ 'S', 'Z', '_', 'B', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8380 */ 'B', 'S', 'E', 'L', '_', 'F', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8395 */ 'F', 'I', 'L', 'L', '_', 'F', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8410 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'F', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8427 */ 'C', 'O', 'P', 'Y', '_', 'F', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8442 */ 'B', 'S', 'E', 'L', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8456 */ 'A', 'N', 'D', '_', 'V', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8471 */ 'N', 'O', 'R', '_', 'V', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8486 */ 'X', 'O', 'R', '_', 'V', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8501 */ 'S', 'N', 'Z', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8514 */ 'S', 'Z', '_', 'D', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8526 */ 'B', 'S', 'E', 'L', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8540 */ 'A', 'N', 'D', '_', 'V', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8555 */ 'N', 'O', 'R', '_', 'V', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8570 */ 'X', 'O', 'R', '_', 'V', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8585 */ 'S', 'N', 'Z', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8598 */ 'S', 'Z', '_', 'H', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8610 */ 'S', 'N', 'Z', '_', 'V', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8623 */ 'S', 'Z', '_', 'V', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8635 */ 'B', 'S', 'E', 'L', '_', 'F', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8650 */ 'F', 'I', 'L', 'L', '_', 'F', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8665 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'F', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8682 */ 'C', 'O', 'P', 'Y', '_', 'F', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8697 */ 'B', 'S', 'E', 'L', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8711 */ 'A', 'N', 'D', '_', 'V', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8726 */ 'N', 'O', 'R', '_', 'V', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8741 */ 'X', 'O', 'R', '_', 'V', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8756 */ 'S', 'N', 'Z', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8769 */ 'S', 'Z', '_', 'W', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 8781 */ 'D', 'C', 'L', 'O', 0,
  /* 8786 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'F', 'L', 'O', 0,
  /* 8797 */ 'S', 'H', 'I', 'L', 'O', 0,
  /* 8803 */ 'M', 'T', 'L', 'O', 0,
  /* 8808 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 8817 */ 'T', 'R', 'A', 'P', 0,
  /* 8822 */ 'E', 'X', 'T', 'P', 'D', 'P', 0,
  /* 8829 */ 'M', 'T', 'H', 'L', 'I', 'P', 0,
  /* 8836 */ 'N', 'O', 'P', 0,
  /* 8840 */ 'L', 'O', 'A', 'D', '_', 'A', 'C', 'C', '6', '4', 'D', 'S', 'P', 0,
  /* 8854 */ 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', '6', '4', 'D', 'S', 'P', 0,
  /* 8869 */ 'R', 'D', 'D', 'S', 'P', 0,
  /* 8875 */ 'W', 'R', 'D', 'S', 'P', 0,
  /* 8881 */ 'M', 'S', 'U', 'B', '_', 'D', 'S', 'P', 0,
  /* 8890 */ 'M', 'A', 'D', 'D', '_', 'D', 'S', 'P', 0,
  /* 8899 */ 'L', 'O', 'A', 'D', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', 0,
  /* 8914 */ 'S', 'T', 'O', 'R', 'E', '_', 'C', 'C', 'O', 'N', 'D', '_', 'D', 'S', 'P', 0,
  /* 8930 */ 'M', 'F', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 8939 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'T', 'L', 'O', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 8956 */ 'M', 'T', 'H', 'I', '_', 'D', 'S', 'P', 0,
  /* 8965 */ 'M', 'F', 'L', 'O', '_', 'D', 'S', 'P', 0,
  /* 8974 */ 'M', 'T', 'L', 'O', '_', 'D', 'S', 'P', 0,
  /* 8983 */ 'M', 'U', 'L', 'T', '_', 'D', 'S', 'P', 0,
  /* 8992 */ 'M', 'S', 'U', 'B', 'U', '_', 'D', 'S', 'P', 0,
  /* 9002 */ 'M', 'A', 'D', 'D', 'U', '_', 'D', 'S', 'P', 0,
  /* 9012 */ 'M', 'U', 'L', 'T', 'U', '_', 'D', 'S', 'P', 0,
  /* 9022 */ 'E', 'X', 'T', 'P', 0,
  /* 9027 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 9042 */ 'B', 'E', 'Q', 0,
  /* 9046 */ 'T', 'E', 'Q', 0,
  /* 9050 */ 'M', 'U', 'L', 'E', 'U', '_', 'S', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 9065 */ 'P', 'R', 'E', 'C', 'E', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 9079 */ 'P', 'R', 'E', 'C', 'E', 'Q', 'U', '_', 'P', 'H', '_', 'Q', 'B', 'R', 0,
  /* 9094 */ 'D', 'P', 'A', 'U', '_', 'H', '_', 'Q', 'B', 'R', 0,
  /* 9105 */ 'D', 'P', 'S', 'U', '_', 'H', '_', 'Q', 'B', 'R', 0,
  /* 9116 */ 'B', 'A', 'L', '_', 'B', 'R', 0,
  /* 9123 */ 'L', 'D', 'R', 0,
  /* 9127 */ 'S', 'D', 'R', 0,
  /* 9131 */ 'M', 'A', 'Q', '_', 'S', 'A', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 9144 */ 'P', 'R', 'E', 'C', 'E', 'Q', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 9157 */ 'M', 'A', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 9169 */ 'M', 'U', 'L', 'E', 'Q', '_', 'S', '_', 'W', '_', 'P', 'H', 'R', 0,
  /* 9183 */ 'J', 'R', 0,
  /* 9186 */ 'J', 'A', 'L', 'R', 0,
  /* 9191 */ 'N', 'O', 'R', 0,
  /* 9195 */ 'X', 'O', 'R', 0,
  /* 9199 */ 'D', 'R', 'O', 'T', 'R', 0,
  /* 9205 */ 'R', 'D', 'H', 'W', 'R', 0,
  /* 9211 */ 'L', 'W', 'R', 0,
  /* 9215 */ 'S', 'W', 'R', 0,
  /* 9219 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '6', '4', '_', 'R', 0,
  /* 9232 */ 'T', 'A', 'I', 'L', 'C', 'A', 'L', 'L', '_', 'R', 0,
  /* 9243 */ 'D', 'I', 'N', 'S', 0,
  /* 9248 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 9265 */ 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'S', 0,
  /* 9275 */ 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'S', 0,
  /* 9285 */ 'M', 'O', 'V', 'N', '_', 'I', '6', '4', '_', 'S', 0,
  /* 9296 */ 'M', 'O', 'V', 'Z', '_', 'I', '6', '4', '_', 'S', 0,
  /* 9307 */ 'F', 'S', 'U', 'B', '_', 'S', 0,
  /* 9314 */ 'N', 'M', 'S', 'U', 'B', '_', 'S', 0,
  /* 9322 */ 'F', 'A', 'D', 'D', '_', 'S', 0,
  /* 9329 */ 'N', 'M', 'A', 'D', 'D', '_', 'S', 0,
  /* 9337 */ 'C', '_', 'N', 'G', 'E', '_', 'S', 0,
  /* 9345 */ 'C', '_', 'N', 'G', 'L', 'E', '_', 'S', 0,
  /* 9354 */ 'C', '_', 'O', 'L', 'E', '_', 'S', 0,
  /* 9362 */ 'C', '_', 'U', 'L', 'E', '_', 'S', 0,
  /* 9370 */ 'C', '_', 'L', 'E', '_', 'S', 0,
  /* 9377 */ 'C', '_', 'S', 'F', '_', 'S', 0,
  /* 9384 */ 'M', 'O', 'V', 'F', '_', 'S', 0,
  /* 9391 */ 'C', '_', 'F', '_', 'S', 0,
  /* 9397 */ 'F', 'N', 'E', 'G', '_', 'S', 0,
  /* 9404 */ 'M', 'O', 'V', 'N', '_', 'I', '_', 'S', 0,
  /* 9413 */ 'M', 'O', 'V', 'Z', '_', 'I', '_', 'S', 0,
  /* 9422 */ 'C', '_', 'N', 'G', 'L', '_', 'S', 0,
  /* 9430 */ 'F', 'M', 'U', 'L', '_', 'S', 0,
  /* 9437 */ 'T', 'R', 'U', 'N', 'C', '_', 'L', '_', 'S', 0,
  /* 9447 */ 'R', 'O', 'U', 'N', 'D', '_', 'L', '_', 'S', 0,
  /* 9457 */ 'C', 'E', 'I', 'L', '_', 'L', '_', 'S', 0,
  /* 9466 */ 'F', 'L', 'O', 'O', 'R', '_', 'L', '_', 'S', 0,
  /* 9476 */ 'C', 'V', 'T', '_', 'L', '_', 'S', 0,
  /* 9484 */ 'C', '_', 'U', 'N', '_', 'S', 0,
  /* 9491 */ 'C', '_', 'S', 'E', 'Q', '_', 'S', 0,
  /* 9499 */ 'C', '_', 'U', 'E', 'Q', '_', 'S', 0,
  /* 9507 */ 'C', '_', 'E', 'Q', '_', 'S', 0,
  /* 9514 */ 'F', 'A', 'B', 'S', '_', 'S', 0,
  /* 9521 */ 'C', '_', 'N', 'G', 'T', '_', 'S', 0,
  /* 9529 */ 'C', '_', 'O', 'L', 'T', '_', 'S', 0,
  /* 9537 */ 'C', '_', 'U', 'L', 'T', '_', 'S', 0,
  /* 9545 */ 'C', '_', 'L', 'T', '_', 'S', 0,
  /* 9552 */ 'F', 'S', 'Q', 'R', 'T', '_', 'S', 0,
  /* 9560 */ 'M', 'O', 'V', 'T', '_', 'S', 0,
  /* 9567 */ 'F', 'D', 'I', 'V', '_', 'S', 0,
  /* 9574 */ 'F', 'M', 'O', 'V', '_', 'S', 0,
  /* 9581 */ 'T', 'R', 'U', 'N', 'C', '_', 'W', '_', 'S', 0,
  /* 9591 */ 'R', 'O', 'U', 'N', 'D', '_', 'W', '_', 'S', 0,
  /* 9601 */ 'C', 'E', 'I', 'L', '_', 'W', '_', 'S', 0,
  /* 9610 */ 'F', 'L', 'O', 'O', 'R', '_', 'W', '_', 'S', 0,
  /* 9620 */ 'C', 'V', 'T', '_', 'W', '_', 'S', 0,
  /* 9628 */ 'B', 'C', '1', 'T', 0,
  /* 9633 */ 'D', 'E', 'R', 'E', 'T', 0,
  /* 9639 */ 'W', 'A', 'I', 'T', 0,
  /* 9644 */ 'S', 'L', 'T', 0,
  /* 9648 */ 'T', 'L', 'T', 0,
  /* 9652 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'M', 'U', 'L', 'T', 0,
  /* 9664 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 0,
  /* 9675 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 9686 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 9701 */ 'D', 'E', 'X', 'T', 0,
  /* 9706 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'S', 'U', 'B', 'U', 0,
  /* 9718 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'A', 'D', 'D', 'U', 0,
  /* 9730 */ 'T', 'G', 'E', 'U', 0,
  /* 9735 */ 'T', 'G', 'E', 'I', 'U', 0,
  /* 9741 */ 'T', 'T', 'L', 'T', 'I', 'U', 0,
  /* 9748 */ 'D', 'I', 'N', 'S', 'U', 0,
  /* 9754 */ 'T', 'L', 'T', 'U', 0,
  /* 9759 */ 'D', 'E', 'X', 'T', 'U', 0,
  /* 9765 */ 'D', 'S', 'R', 'A', 'V', 0,
  /* 9771 */ 'B', 'I', 'T', 'R', 'E', 'V', 0,
  /* 9778 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'S', 'D', 'I', 'V', 0,
  /* 9790 */ 'P', 's', 'e', 'u', 'd', 'o', 'S', 'D', 'I', 'V', 0,
  /* 9801 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'U', 'D', 'I', 'V', 0,
  /* 9813 */ 'P', 's', 'e', 'u', 'd', 'o', 'U', 'D', 'I', 'V', 0,
  /* 9824 */ 'D', 'S', 'L', 'L', 'V', 0,
  /* 9830 */ 'D', 'S', 'R', 'L', 'V', 0,
  /* 9836 */ 'S', 'H', 'I', 'L', 'O', 'V', 0,
  /* 9843 */ 'E', 'X', 'T', 'P', 'D', 'P', 'V', 0,
  /* 9851 */ 'E', 'X', 'T', 'P', 'V', 0,
  /* 9857 */ 'D', 'R', 'O', 'T', 'R', 'V', 0,
  /* 9864 */ 'I', 'N', 'S', 'V', 0,
  /* 9869 */ 'A', 'N', 'D', '_', 'V', 0,
  /* 9875 */ 'M', 'O', 'V', 'E', '_', 'V', 0,
  /* 9882 */ 'B', 'S', 'E', 'L', '_', 'V', 0,
  /* 9889 */ 'N', 'O', 'R', '_', 'V', 0,
  /* 9895 */ 'X', 'O', 'R', '_', 'V', 0,
  /* 9901 */ 'B', 'Z', '_', 'V', 0,
  /* 9906 */ 'B', 'M', 'Z', '_', 'V', 0,
  /* 9912 */ 'B', 'N', 'Z', '_', 'V', 0,
  /* 9918 */ 'B', 'M', 'N', 'Z', '_', 'V', 0,
  /* 9925 */ 'L', 'W', 0,
  /* 9928 */ 'S', 'W', 0,
  /* 9931 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '3', '2', '_', 'W', 0,
  /* 9947 */ 'F', 'L', 'O', 'G', '2', '_', 'W', 0,
  /* 9955 */ 'F', 'E', 'X', 'P', '2', '_', 'W', 0,
  /* 9963 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'D', '6', '4', '_', 'W', 0,
  /* 9979 */ 'S', 'R', 'A', '_', 'W', 0,
  /* 9985 */ 'A', 'D', 'D', '_', 'A', '_', 'W', 0,
  /* 9993 */ 'F', 'M', 'I', 'N', '_', 'A', '_', 'W', 0,
  /* 10002 */ 'A', 'D', 'D', 'S', '_', 'A', '_', 'W', 0,
  /* 10011 */ 'F', 'M', 'A', 'X', '_', 'A', '_', 'W', 0,
  /* 10020 */ 'F', 'S', 'U', 'B', '_', 'W', 0,
  /* 10027 */ 'F', 'M', 'S', 'U', 'B', '_', 'W', 0,
  /* 10035 */ 'N', 'L', 'O', 'C', '_', 'W', 0,
  /* 10042 */ 'N', 'L', 'Z', 'C', '_', 'W', 0,
  /* 10049 */ 'F', 'A', 'D', 'D', '_', 'W', 0,
  /* 10056 */ 'F', 'M', 'A', 'D', 'D', '_', 'W', 0,
  /* 10064 */ 'S', 'L', 'D', '_', 'W', 0,
  /* 10070 */ 'P', 'C', 'K', 'O', 'D', '_', 'W', 0,
  /* 10078 */ 'I', 'L', 'V', 'O', 'D', '_', 'W', 0,
  /* 10086 */ 'F', 'C', 'L', 'E', '_', 'W', 0,
  /* 10093 */ 'F', 'S', 'L', 'E', '_', 'W', 0,
  /* 10100 */ 'F', 'C', 'U', 'L', 'E', '_', 'W', 0,
  /* 10108 */ 'F', 'S', 'U', 'L', 'E', '_', 'W', 0,
  /* 10116 */ 'F', 'C', 'N', 'E', '_', 'W', 0,
  /* 10123 */ 'F', 'S', 'N', 'E', '_', 'W', 0,
  /* 10130 */ 'F', 'C', 'U', 'N', 'E', '_', 'W', 0,
  /* 10138 */ 'F', 'S', 'U', 'N', 'E', '_', 'W', 0,
  /* 10146 */ 'I', 'N', 'S', 'V', 'E', '_', 'W', 0,
  /* 10154 */ 'F', 'C', 'A', 'F', '_', 'W', 0,
  /* 10161 */ 'F', 'S', 'A', 'F', '_', 'W', 0,
  /* 10168 */ 'V', 'S', 'H', 'F', '_', 'W', 0,
  /* 10175 */ 'B', 'N', 'E', 'G', '_', 'W', 0,
  /* 10182 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'P', 'H', '_', 'W', 0,
  /* 10197 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'P', 'H', '_', 'W', 0,
  /* 10209 */ 'P', 'R', 'E', 'C', 'R', '_', 'S', 'R', 'A', '_', 'R', '_', 'P', 'H', '_', 'W', 0,
  /* 10226 */ 'P', 'R', 'E', 'C', 'R', 'Q', '_', 'R', 'S', '_', 'P', 'H', '_', 'W', 0,
  /* 10241 */ 'S', 'U', 'B', 'Q', 'H', '_', 'W', 0,
  /* 10249 */ 'A', 'D', 'D', 'Q', 'H', '_', 'W', 0,
  /* 10257 */ 'S', 'R', 'A', 'I', '_', 'W', 0,
  /* 10264 */ 'S', 'L', 'D', 'I', '_', 'W', 0,
  /* 10271 */ 'B', 'N', 'E', 'G', 'I', '_', 'W', 0,
  /* 10279 */ 'S', 'L', 'L', 'I', '_', 'W', 0,
  /* 10286 */ 'S', 'R', 'L', 'I', '_', 'W', 0,
  /* 10293 */ 'B', 'I', 'N', 'S', 'L', 'I', '_', 'W', 0,
  /* 10302 */ 'C', 'E', 'Q', 'I', '_', 'W', 0,
  /* 10309 */ 'S', 'R', 'A', 'R', 'I', '_', 'W', 0,
  /* 10317 */ 'B', 'C', 'L', 'R', 'I', '_', 'W', 0,
  /* 10325 */ 'S', 'R', 'L', 'R', 'I', '_', 'W', 0,
  /* 10333 */ 'B', 'I', 'N', 'S', 'R', 'I', '_', 'W', 0,
  /* 10342 */ 'S', 'P', 'L', 'A', 'T', 'I', '_', 'W', 0,
  /* 10351 */ 'B', 'S', 'E', 'T', 'I', '_', 'W', 0,
  /* 10359 */ 'S', 'U', 'B', 'V', 'I', '_', 'W', 0,
  /* 10367 */ 'A', 'D', 'D', 'V', 'I', '_', 'W', 0,
  /* 10375 */ 'F', 'I', 'L', 'L', '_', 'W', 0,
  /* 10382 */ 'S', 'L', 'L', '_', 'W', 0,
  /* 10388 */ 'F', 'E', 'X', 'U', 'P', 'L', '_', 'W', 0,
  /* 10397 */ 'F', 'F', 'Q', 'L', '_', 'W', 0,
  /* 10404 */ 'S', 'R', 'L', '_', 'W', 0,
  /* 10410 */ 'B', 'I', 'N', 'S', 'L', '_', 'W', 0,
  /* 10418 */ 'F', 'M', 'U', 'L', '_', 'W', 0,
  /* 10425 */ 'I', 'L', 'V', 'L', '_', 'W', 0,
  /* 10432 */ 'D', 'P', 'A', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', 0,
  /* 10444 */ 'D', 'P', 'S', 'Q', '_', 'S', 'A', '_', 'L', '_', 'W', 0,
  /* 10456 */ 'F', 'M', 'I', 'N', '_', 'W', 0,
  /* 10463 */ 'F', 'C', 'U', 'N', '_', 'W', 0,
  /* 10470 */ 'F', 'S', 'U', 'N', '_', 'W', 0,
  /* 10477 */ 'F', 'E', 'X', 'D', 'O', '_', 'W', 0,
  /* 10485 */ 'F', 'R', 'C', 'P', '_', 'W', 0,
  /* 10492 */ 'F', 'C', 'E', 'Q', '_', 'W', 0,
  /* 10499 */ 'F', 'S', 'E', 'Q', '_', 'W', 0,
  /* 10506 */ 'F', 'C', 'U', 'E', 'Q', '_', 'W', 0,
  /* 10514 */ 'F', 'S', 'U', 'E', 'Q', '_', 'W', 0,
  /* 10522 */ 'F', 'T', 'Q', '_', 'W', 0,
  /* 10528 */ 'M', 'S', 'U', 'B', '_', 'Q', '_', 'W', 0,
  /* 10537 */ 'M', 'A', 'D', 'D', '_', 'Q', '_', 'W', 0,
  /* 10546 */ 'M', 'U', 'L', '_', 'Q', '_', 'W', 0,
  /* 10554 */ 'M', 'S', 'U', 'B', 'R', '_', 'Q', '_', 'W', 0,
  /* 10564 */ 'M', 'A', 'D', 'D', 'R', '_', 'Q', '_', 'W', 0,
  /* 10574 */ 'M', 'U', 'L', 'R', '_', 'Q', '_', 'W', 0,
  /* 10583 */ 'S', 'R', 'A', 'R', '_', 'W', 0,
  /* 10590 */ 'B', 'C', 'L', 'R', '_', 'W', 0,
  /* 10597 */ 'S', 'R', 'L', 'R', '_', 'W', 0,
  /* 10604 */ 'F', 'C', 'O', 'R', '_', 'W', 0,
  /* 10611 */ 'F', 'S', 'O', 'R', '_', 'W', 0,
  /* 10618 */ 'F', 'E', 'X', 'U', 'P', 'R', '_', 'W', 0,
  /* 10627 */ 'F', 'F', 'Q', 'R', '_', 'W', 0,
  /* 10634 */ 'B', 'I', 'N', 'S', 'R', '_', 'W', 0,
  /* 10642 */ 'E', 'X', 'T', 'R', '_', 'W', 0,
  /* 10649 */ 'I', 'L', 'V', 'R', '_', 'W', 0,
  /* 10656 */ 'S', 'H', 'R', 'A', '_', 'R', '_', 'W', 0,
  /* 10665 */ 'S', 'U', 'B', 'Q', 'H', '_', 'R', '_', 'W', 0,
  /* 10675 */ 'A', 'D', 'D', 'Q', 'H', '_', 'R', '_', 'W', 0,
  /* 10685 */ 'E', 'X', 'T', 'R', '_', 'R', '_', 'W', 0,
  /* 10694 */ 'S', 'H', 'R', 'A', 'V', '_', 'R', '_', 'W', 0,
  /* 10704 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', '_', 'W', 0,
  /* 10714 */ 'F', 'A', 'B', 'S', '_', 'W', 0,
  /* 10721 */ 'M', 'U', 'L', 'Q', '_', 'R', 'S', '_', 'W', 0,
  /* 10731 */ 'E', 'X', 'T', 'R', '_', 'R', 'S', '_', 'W', 0,
  /* 10741 */ 'E', 'X', 'T', 'R', 'V', '_', 'R', 'S', '_', 'W', 0,
  /* 10752 */ 'F', 'C', 'L', 'A', 'S', 'S', '_', 'W', 0,
  /* 10761 */ 'A', 'S', 'U', 'B', '_', 'S', '_', 'W', 0,
  /* 10770 */ 'H', 'S', 'U', 'B', '_', 'S', '_', 'W', 0,
  /* 10779 */ 'D', 'P', 'S', 'U', 'B', '_', 'S', '_', 'W', 0,
  /* 10789 */ 'F', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'W', 0,
  /* 10800 */ 'H', 'A', 'D', 'D', '_', 'S', '_', 'W', 0,
  /* 10809 */ 'D', 'P', 'A', 'D', 'D', '_', 'S', '_', 'W', 0,
  /* 10819 */ 'M', 'O', 'D', '_', 'S', '_', 'W', 0,
  /* 10827 */ 'C', 'L', 'E', '_', 'S', '_', 'W', 0,
  /* 10835 */ 'A', 'V', 'E', '_', 'S', '_', 'W', 0,
  /* 10843 */ 'C', 'L', 'E', 'I', '_', 'S', '_', 'W', 0,
  /* 10852 */ 'M', 'I', 'N', 'I', '_', 'S', '_', 'W', 0,
  /* 10861 */ 'C', 'L', 'T', 'I', '_', 'S', '_', 'W', 0,
  /* 10870 */ 'M', 'A', 'X', 'I', '_', 'S', '_', 'W', 0,
  /* 10879 */ 'S', 'H', 'L', 'L', '_', 'S', '_', 'W', 0,
  /* 10888 */ 'M', 'I', 'N', '_', 'S', '_', 'W', 0,
  /* 10896 */ 'D', 'O', 'T', 'P', '_', 'S', '_', 'W', 0,
  /* 10905 */ 'S', 'U', 'B', 'Q', '_', 'S', '_', 'W', 0,
  /* 10914 */ 'A', 'D', 'D', 'Q', '_', 'S', '_', 'W', 0,
  /* 10923 */ 'M', 'U', 'L', 'Q', '_', 'S', '_', 'W', 0,
  /* 10932 */ 'A', 'B', 'S', 'Q', '_', 'S', '_', 'W', 0,
  /* 10941 */ 'A', 'V', 'E', 'R', '_', 'S', '_', 'W', 0,
  /* 10950 */ 'S', 'U', 'B', 'S', '_', 'S', '_', 'W', 0,
  /* 10959 */ 'A', 'D', 'D', 'S', '_', 'S', '_', 'W', 0,
  /* 10968 */ 'S', 'A', 'T', '_', 'S', '_', 'W', 0,
  /* 10976 */ 'C', 'L', 'T', '_', 'S', '_', 'W', 0,
  /* 10984 */ 'F', 'F', 'I', 'N', 'T', '_', 'S', '_', 'W', 0,
  /* 10994 */ 'F', 'T', 'I', 'N', 'T', '_', 'S', '_', 'W', 0,
  /* 11004 */ 'P', 's', 'e', 'u', 'd', 'o', 'C', 'V', 'T', '_', 'S', '_', 'W', 0,
  /* 11018 */ 'S', 'U', 'B', 'S', 'U', 'U', '_', 'S', '_', 'W', 0,
  /* 11029 */ 'D', 'I', 'V', '_', 'S', '_', 'W', 0,
  /* 11037 */ 'S', 'H', 'L', 'L', 'V', '_', 'S', '_', 'W', 0,
  /* 11047 */ 'M', 'A', 'X', '_', 'S', '_', 'W', 0,
  /* 11055 */ 'C', 'O', 'P', 'Y', '_', 'S', '_', 'W', 0,
  /* 11064 */ 'S', 'P', 'L', 'A', 'T', '_', 'W', 0,
  /* 11072 */ 'B', 'S', 'E', 'T', '_', 'W', 0,
  /* 11079 */ 'F', 'C', 'L', 'T', '_', 'W', 0,
  /* 11086 */ 'F', 'S', 'L', 'T', '_', 'W', 0,
  /* 11093 */ 'F', 'C', 'U', 'L', 'T', '_', 'W', 0,
  /* 11101 */ 'F', 'S', 'U', 'L', 'T', '_', 'W', 0,
  /* 11109 */ 'P', 'C', 'N', 'T', '_', 'W', 0,
  /* 11116 */ 'F', 'R', 'I', 'N', 'T', '_', 'W', 0,
  /* 11124 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'W', 0,
  /* 11133 */ 'F', 'S', 'Q', 'R', 'T', '_', 'W', 0,
  /* 11141 */ 'F', 'R', 'S', 'Q', 'R', 'T', '_', 'W', 0,
  /* 11150 */ 'S', 'T', '_', 'W', 0,
  /* 11155 */ 'A', 'S', 'U', 'B', '_', 'U', '_', 'W', 0,
  /* 11164 */ 'H', 'S', 'U', 'B', '_', 'U', '_', 'W', 0,
  /* 11173 */ 'D', 'P', 'S', 'U', 'B', '_', 'U', '_', 'W', 0,
  /* 11183 */ 'F', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'W', 0,
  /* 11194 */ 'H', 'A', 'D', 'D', '_', 'U', '_', 'W', 0,
  /* 11203 */ 'D', 'P', 'A', 'D', 'D', '_', 'U', '_', 'W', 0,
  /* 11213 */ 'M', 'O', 'D', '_', 'U', '_', 'W', 0,
  /* 11221 */ 'C', 'L', 'E', '_', 'U', '_', 'W', 0,
  /* 11229 */ 'A', 'V', 'E', '_', 'U', '_', 'W', 0,
  /* 11237 */ 'C', 'L', 'E', 'I', '_', 'U', '_', 'W', 0,
  /* 11246 */ 'M', 'I', 'N', 'I', '_', 'U', '_', 'W', 0,
  /* 11255 */ 'C', 'L', 'T', 'I', '_', 'U', '_', 'W', 0,
  /* 11264 */ 'M', 'A', 'X', 'I', '_', 'U', '_', 'W', 0,
  /* 11273 */ 'M', 'I', 'N', '_', 'U', '_', 'W', 0,
  /* 11281 */ 'D', 'O', 'T', 'P', '_', 'U', '_', 'W', 0,
  /* 11290 */ 'A', 'V', 'E', 'R', '_', 'U', '_', 'W', 0,
  /* 11299 */ 'S', 'U', 'B', 'S', '_', 'U', '_', 'W', 0,
  /* 11308 */ 'A', 'D', 'D', 'S', '_', 'U', '_', 'W', 0,
  /* 11317 */ 'S', 'U', 'B', 'S', 'U', 'S', '_', 'U', '_', 'W', 0,
  /* 11328 */ 'S', 'A', 'T', '_', 'U', '_', 'W', 0,
  /* 11336 */ 'C', 'L', 'T', '_', 'U', '_', 'W', 0,
  /* 11344 */ 'F', 'F', 'I', 'N', 'T', '_', 'U', '_', 'W', 0,
  /* 11354 */ 'F', 'T', 'I', 'N', 'T', '_', 'U', '_', 'W', 0,
  /* 11364 */ 'D', 'I', 'V', '_', 'U', '_', 'W', 0,
  /* 11372 */ 'M', 'A', 'X', '_', 'U', '_', 'W', 0,
  /* 11380 */ 'C', 'O', 'P', 'Y', '_', 'U', '_', 'W', 0,
  /* 11389 */ 'M', 'S', 'U', 'B', 'V', '_', 'W', 0,
  /* 11397 */ 'M', 'A', 'D', 'D', 'V', '_', 'W', 0,
  /* 11405 */ 'P', 'C', 'K', 'E', 'V', '_', 'W', 0,
  /* 11413 */ 'I', 'L', 'V', 'E', 'V', '_', 'W', 0,
  /* 11421 */ 'F', 'D', 'I', 'V', '_', 'W', 0,
  /* 11428 */ 'M', 'U', 'L', 'V', '_', 'W', 0,
  /* 11435 */ 'E', 'X', 'T', 'R', 'V', '_', 'W', 0,
  /* 11443 */ 'F', 'M', 'A', 'X', '_', 'W', 0,
  /* 11450 */ 'B', 'Z', '_', 'W', 0,
  /* 11455 */ 'B', 'N', 'Z', '_', 'W', 0,
  /* 11461 */ 'L', 'H', 'X', 0,
  /* 11465 */ 'L', 'B', 'U', 'X', 0,
  /* 11470 */ 'L', 'W', 'X', 0,
  /* 11474 */ 'C', 'O', 'P', 'Y', 0,
  /* 11479 */ 'C', 'O', 'N', 'S', 'T', 'P', 'O', 'O', 'L', '_', 'E', 'N', 'T', 'R', 'Y', 0,
  /* 11495 */ 'B', 'G', 'E', 'Z', 0,
  /* 11500 */ 'B', 'L', 'E', 'Z', 0,
  /* 11505 */ 'D', 'C', 'L', 'Z', 0,
  /* 11510 */ 'B', 'G', 'T', 'Z', 0,
  /* 11515 */ 'B', 'L', 'T', 'Z', 0,
  /* 11520 */ 'S', 'e', 'l', 'B', 'n', 'e', 'Z', 0,
  /* 11528 */ 'S', 'e', 'l', 'B', 'e', 'q', 'Z', 0,
  /* 11536 */ 'L', 'o', 'a', 'd', 'I', 'm', 'm', '3', '2', 'R', 'e', 'g', 0,
  /* 11549 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', '3', '2', 'R', 'e', 'g', 0,
  /* 11563 */ 'D', 'A', 'D', 'D', 'i', 0,
  /* 11569 */ 'A', 'N', 'D', 'i', 0,
  /* 11574 */ 'X', 'O', 'R', 'i', 0,
  /* 11579 */ 'S', 'L', 'T', 'i', 0,
  /* 11584 */ 'L', 'U', 'i', 0,
  /* 11588 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'C', 'm', 'p', 'i', 0,
  /* 11602 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'C', 'm', 'p', 'i', 0,
  /* 11616 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'i', 0,
  /* 11630 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'i', 0,
  /* 11644 */ 'L', 'o', 'a', 'd', 'A', 'd', 'd', 'r', '3', '2', 'I', 'm', 'm', 0,
  /* 11658 */ 'J', 'A', 'L', 'R', '6', '4', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 11671 */ 'J', 'A', 'L', 'R', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 11682 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'C', 'm', 'p', 0,
  /* 11695 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'C', 'm', 'p', 0,
  /* 11708 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 0,
  /* 11721 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 0,
  /* 11734 */ 'L', 'B', 'u', 0,
  /* 11738 */ 'D', 'S', 'U', 'B', 'u', 0,
  /* 11744 */ 'D', 'A', 'D', 'D', 'u', 0,
  /* 11750 */ 'L', 'H', 'u', 0,
  /* 11754 */ 'S', 'L', 'T', 'u', 0,
  /* 11759 */ 'P', 's', 'e', 'u', 'd', 'o', 'D', 'M', 'U', 'L', 'T', 'u', 0,
  /* 11772 */ 'P', 's', 'e', 'u', 'd', 'o', 'M', 'U', 'L', 'T', 'u', 0,
  /* 11784 */ 'L', 'W', 'u', 0,
  /* 11788 */ 'D', 'A', 'D', 'D', 'i', 'u', 0,
  /* 11795 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'i', 'u', 0,
  /* 11805 */ 'S', 'L', 'T', 'i', 'u', 0,
  /* 11811 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'i', 'u', 0,
  /* 11826 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'i', 'u', 0,
  /* 11841 */ 'S', 'e', 'l', 'T', 'B', 't', 'n', 'e', 'Z', 'S', 'l', 't', 'u', 0,
  /* 11855 */ 'S', 'e', 'l', 'T', 'B', 't', 'e', 'q', 'Z', 'S', 'l', 't', 'u', 0,
};

extern const unsigned MipsInstrNameIndices[] = {
    7265U, 8259U, 7447U, 7460U, 7438U, 7538U, 5771U, 5786U, 
    5758U, 5800U, 9248U, 5743U, 5711U, 11474U, 5728U, 9686U, 
    4572U, 8808U, 9675U, 6104U, 3618U, 10932U, 4529U, 5905U, 
    6022U, 10675U, 10249U, 5977U, 6084U, 10914U, 4512U, 3796U, 
    4627U, 6379U, 10002U, 4204U, 5268U, 6868U, 10959U, 4396U, 
    5575U, 7117U, 11308U, 3486U, 3596U, 6169U, 3698U, 6124U, 
    3638U, 4010U, 4917U, 6564U, 10367U, 4466U, 5656U, 7187U, 
    11398U, 4518U, 3780U, 4610U, 6363U, 9985U, 7630U, 11564U, 
    8155U, 11789U, 8241U, 11745U, 8209U, 8288U, 9027U, 4553U, 
    824U, 3885U, 7637U, 9869U, 8456U, 8540U, 8711U, 11569U, 
    1758U, 8163U, 4565U, 4109U, 5115U, 6717U, 10761U, 4301U, 
    5422U, 6975U, 11155U, 2007U, 578U, 1518U, 3273U, 1930U, 
    501U, 1410U, 3200U, 1971U, 542U, 1451U, 3239U, 1950U, 
    521U, 1430U, 3219U, 2047U, 618U, 1558U, 3311U, 1910U, 
    481U, 1390U, 3181U, 2027U, 598U, 1538U, 3292U, 1991U, 
    562U, 1502U, 3258U, 4186U, 5250U, 6841U, 10941U, 4378U, 
    5557U, 7099U, 11290U, 4134U, 5189U, 6780U, 10835U, 4326U, 
    5496U, 7038U, 11229U, 2430U, 2306U, 2797U, 2458U, 2255U, 
    2737U, 2322U, 3100U, 3039U, 3422U, 8281U, 9116U, 5753U, 
    9628U, 3946U, 4867U, 6514U, 10317U, 4080U, 5040U, 6688U, 
    10590U, 9042U, 1618U, 7882U, 11495U, 1684U, 7350U, 7792U, 
    8116U, 11510U, 1698U, 8139U, 3922U, 4843U, 6490U, 10293U, 
    4052U, 4953U, 6591U, 10410U, 3976U, 4883U, 6530U, 10333U, 
    4094U, 5084U, 6702U, 10634U, 9771U, 11500U, 1691U, 8124U, 
    11515U, 1705U, 7357U, 7802U, 8147U, 4025U, 9918U, 4018U, 
    9906U, 5735U, 1276U, 3892U, 4821U, 6468U, 10271U, 3864U, 
    4800U, 6447U, 10175U, 7651U, 4501U, 5705U, 7222U, 9912U, 
    11455U, 472U, 8339U, 7340U, 3900U, 8442U, 8380U, 8635U, 
    8526U, 9882U, 8697U, 3994U, 4901U, 6548U, 10351U, 4273U, 
    5348U, 6947U, 11072U, 4496U, 5700U, 7217U, 9901U, 11450U, 
    2824U, 2487U, 2836U, 2500U, 2812U, 2474U, 2723U, 3148U, 
    2551U, 2098U, 2579U, 2128U, 2609U, 2640U, 2664U, 3140U, 
    2537U, 2083U, 2565U, 2113U, 2593U, 2625U, 2655U, 1282U, 
    1712U, 1044U, 9457U, 439U, 1243U, 9601U, 3931U, 4852U, 
    6499U, 10302U, 4067U, 5004U, 6614U, 10493U, 22U, 3406U, 
    4142U, 5197U, 6788U, 10843U, 4334U, 5504U, 7046U, 11237U, 
    4126U, 5181U, 6772U, 10827U, 4318U, 5488U, 7030U, 11221U, 
    8782U, 7859U, 4160U, 5215U, 6806U, 10861U, 4352U, 5522U, 
    7064U, 11255U, 4221U, 5285U, 6885U, 10976U, 4424U, 5603U, 
    7145U, 11336U, 11506U, 8132U, 3533U, 3435U, 3648U, 3546U, 
    3448U, 3661U, 3564U, 3466U, 3679U, 5991U, 5886U, 6151U, 
    11479U, 8427U, 8682U, 4256U, 6930U, 11055U, 4448U, 7169U, 
    11380U, 45U, 3413U, 9265U, 9937U, 7571U, 9275U, 9969U, 
    1067U, 9476U, 329U, 1133U, 7587U, 11010U, 462U, 1266U, 
    9620U, 311U, 1115U, 9507U, 215U, 962U, 9391U, 188U, 
    935U, 9370U, 369U, 1173U, 9545U, 147U, 894U, 9337U, 
    157U, 904U, 9345U, 254U, 1001U, 9422U, 339U, 1143U, 
    9521U, 168U, 915U, 9354U, 349U, 1153U, 9529U, 291U, 
    1095U, 9491U, 197U, 944U, 9377U, 301U, 1105U, 9499U, 
    178U, 925U, 9362U, 359U, 1163U, 9537U, 273U, 1077U, 
    9484U, 2921U, 2760U, 2404U, 696U, 4528U, 11563U, 11788U, 
    11744U, 8781U, 11505U, 9633U, 9701U, 8275U, 9759U, 7228U, 
    9243U, 8269U, 9748U, 4240U, 5324U, 6904U, 11029U, 4432U, 
    5631U, 7153U, 11364U, 0U, 27U, 717U, 6U, 50U, 
    723U, 9658U, 11765U, 5241U, 6832U, 10896U, 5548U, 7090U, 
    11281U, 5163U, 6754U, 10809U, 5470U, 7012U, 11203U, 6233U, 
    6308U, 10432U, 6270U, 7408U, 9094U, 6334U, 6213U, 6247U, 
    6321U, 10444U, 6296U, 5133U, 6735U, 10779U, 5440U, 6993U, 
    11173U, 7419U, 9105U, 6344U, 6261U, 9199U, 651U, 9857U, 
    5814U, 9784U, 4544U, 7543U, 637U, 668U, 9824U, 3391U, 
    102U, 9765U, 7548U, 644U, 9830U, 11738U, 9807U, 3007U, 
    2985U, 7233U, 9634U, 9702U, 9022U, 8822U, 9843U, 9851U, 
    10741U, 10704U, 6912U, 11435U, 10731U, 10685U, 6850U, 10642U, 
    7996U, 1295U, 1728U, 5099U, 320U, 1124U, 9514U, 10714U, 
    4674U, 128U, 875U, 9322U, 10049U, 4779U, 10154U, 5003U, 
    10492U, 5106U, 10752U, 4711U, 10086U, 5355U, 11079U, 282U, 
    1086U, 659U, 4741U, 10116U, 5054U, 10604U, 5017U, 10506U, 
    4725U, 10100U, 5369U, 11093U, 4755U, 10130U, 4982U, 10463U, 
    5679U, 397U, 1201U, 9567U, 11421U, 6606U, 10477U, 4596U, 
    8305U, 9955U, 8322U, 4931U, 10388U, 5068U, 10618U, 5293U, 
    10984U, 5611U, 11344U, 4940U, 10397U, 5077U, 10627U, 4033U, 
    8395U, 8650U, 6572U, 10375U, 4588U, 9947U, 1055U, 9466U, 
    450U, 1254U, 9610U, 4681U, 10056U, 4636U, 10011U, 5693U, 
    11443U, 4618U, 9993U, 4975U, 10456U, 406U, 1210U, 9574U, 
    4652U, 10027U, 4961U, 264U, 1011U, 9430U, 10418U, 223U, 
    970U, 9397U, 4996U, 10485U, 5392U, 11116U, 5408U, 11141U, 
    4786U, 10161U, 5010U, 10499U, 4718U, 10093U, 5362U, 11086U, 
    4748U, 10123U, 5061U, 10611U, 5400U, 378U, 1182U, 9552U, 
    11133U, 4645U, 109U, 856U, 9307U, 10020U, 5025U, 10514U, 
    4733U, 10108U, 5377U, 11101U, 4763U, 10138U, 4989U, 10470U, 
    5303U, 10994U, 5621U, 11354U, 6620U, 10522U, 5143U, 10789U, 
    5450U, 11183U, 2688U, 5154U, 6745U, 10800U, 5461U, 7003U, 
    11194U, 5124U, 6726U, 10770U, 5431U, 6984U, 11164U, 4481U, 
    5671U, 7202U, 11413U, 4060U, 4968U, 6599U, 10425U, 3841U, 
    4703U, 6424U, 10078U, 4102U, 5092U, 6710U, 10649U, 9244U, 
    4287U, 8410U, 8665U, 6961U, 11124U, 9864U, 3849U, 4771U, 
    6432U, 10146U, 7960U, 7338U, 7346U, 9186U, 1629U, 11658U, 
    11671U, 7902U, 7785U, 9183U, 1624U, 7896U, 7780U, 2731U, 
    2681U, 2673U, 2870U, 2702U, 3424U, 791U, 11465U, 7609U, 
    11734U, 1801U, 8194U, 4550U, 12U, 739U, 707U, 3879U, 
    4815U, 6462U, 10265U, 7430U, 9123U, 66U, 753U, 3828U, 
    4690U, 6411U, 10065U, 11795U, 1820U, 5828U, 1319U, 11461U, 
    7680U, 11750U, 1807U, 8217U, 7527U, 4549U, 3156U, 801U, 
    8840U, 8899U, 3402U, 78U, 769U, 11584U, 1779U, 8187U, 
    9925U, 1674U, 56U, 729U, 7557U, 1586U, 7845U, 9211U, 
    1656U, 7932U, 11470U, 90U, 8104U, 11784U, 2157U, 2221U, 
    2189U, 2238U, 2750U, 2508U, 2393U, 11644U, 11549U, 11536U, 
    694U, 2850U, 2524U, 2274U, 2336U, 4539U, 6662U, 10564U, 
    9724U, 9002U, 8012U, 4465U, 5655U, 7186U, 11397U, 138U, 
    885U, 8890U, 7629U, 6635U, 10537U, 9330U, 7469U, 9131U, 
    7495U, 9157U, 4169U, 5224U, 6815U, 10870U, 4361U, 5531U, 
    7073U, 11264U, 3805U, 4637U, 6388U, 10012U, 4248U, 5332U, 
    6922U, 11047U, 4440U, 5639U, 7161U, 11372U, 1U, 28U, 
    718U, 33U, 7247U, 1335U, 8930U, 7708U, 8792U, 1604U, 
    8965U, 7866U, 4151U, 5206U, 6797U, 10852U, 4343U, 5513U, 
    7055U, 11246U, 3788U, 4619U, 6371U, 9994U, 4178U, 5233U, 
    6824U, 10888U, 4370U, 5540U, 7082U, 11273U, 678U, 1785U, 
    3756U, 4118U, 5173U, 6764U, 10819U, 4310U, 5480U, 7022U, 
    11213U, 9875U, 206U, 953U, 7306U, 1471U, 7740U, 9384U, 
    830U, 7284U, 1364U, 9285U, 232U, 979U, 7313U, 1480U, 
    7750U, 9404U, 388U, 1192U, 7331U, 1577U, 7760U, 9560U, 
    843U, 7295U, 1377U, 9296U, 243U, 990U, 7322U, 1491U, 
    7770U, 9413U, 3769U, 6652U, 10554U, 9712U, 8992U, 8003U, 
    4457U, 5647U, 7178U, 11389U, 119U, 866U, 8881U, 7621U, 
    6626U, 10528U, 9315U, 7U, 51U, 724U, 39U, 7269U, 
    1357U, 8956U, 7716U, 8829U, 8803U, 1611U, 8974U, 7874U, 
    7553U, 7507U, 9169U, 7364U, 9050U, 6044U, 10721U, 6094U, 
    10923U, 6672U, 10574U, 6282U, 6222U, 9659U, 9012U, 8983U, 
    7988U, 11766U, 8232U, 4489U, 5686U, 7210U, 11428U, 7838U, 
    5962U, 6644U, 10546U, 6065U, 2716U, 2843U, 2066U, 1840U, 
    2941U, 3074U, 2973U, 3126U, 3813U, 4660U, 6396U, 10035U, 
    3820U, 4667U, 6403U, 10042U, 137U, 884U, 9329U, 118U, 
    865U, 9314U, 8836U, 9191U, 1636U, 3962U, 7910U, 9889U, 
    8471U, 8555U, 8726U, 2911U, 2952U, 9192U, 1637U, 3963U, 
    7911U, 9890U, 8472U, 8556U, 8727U, 11575U, 1766U, 8172U, 
    3051U, 5952U, 4473U, 5663U, 7194U, 11405U, 3833U, 4695U, 
    6416U, 10070U, 4280U, 5385U, 6954U, 11109U, 5920U, 3501U, 
    7393U, 3344U, 9079U, 3375U, 7482U, 9144U, 7379U, 3329U, 
    9065U, 3360U, 5864U, 10197U, 5839U, 10226U, 5852U, 10182U, 
    10209U, 4557U, 3558U, 3460U, 3673U, 5985U, 5880U, 6145U, 
    9931U, 7565U, 9963U, 7581U, 11004U, 9652U, 11759U, 9778U, 
    9801U, 4533U, 9718U, 7241U, 1329U, 8786U, 1598U, 3763U, 
    9706U, 7252U, 1342U, 8939U, 9664U, 11772U, 5914U, 3495U, 
    9790U, 9813U, 3742U, 8869U, 9205U, 1648U, 6195U, 3724U, 
    5936U, 3517U, 9635U, 7967U, 9200U, 9858U, 8095U, 7924U, 
    1032U, 9447U, 427U, 1231U, 9591U, 1894U, 1858U, 3396U, 
    1850U, 4213U, 5277U, 6877U, 10968U, 4416U, 5595U, 7137U, 
    11328U, 3753U, 796U, 7615U, 4515U, 4524U, 4585U, 17U, 
    746U, 712U, 9785U, 8063U, 7434U, 9127U, 72U, 761U, 
    3420U, 785U, 7602U, 5824U, 1313U, 7673U, 6354U, 1324U, 
    3858U, 6441U, 10169U, 8797U, 9836U, 6186U, 3715U, 6134U, 
    11037U, 5928U, 3509U, 6055U, 10879U, 6177U, 3706U, 6033U, 
    3607U, 10694U, 5831U, 3427U, 6001U, 3575U, 10656U, 6204U, 
    3733U, 5944U, 3525U, 7686U, 3878U, 4814U, 6461U, 10264U, 
    3827U, 4689U, 6410U, 10064U, 7544U, 669U, 1749U, 3908U, 
    4829U, 6476U, 10279U, 9825U, 8079U, 4040U, 4925U, 6579U, 
    7824U, 10382U, 9644U, 1668U, 7974U, 11579U, 1772U, 8179U, 
    11805U, 1832U, 8250U, 11754U, 1813U, 8224U, 8355U, 8501U, 
    8585U, 8610U, 8756U, 3985U, 4892U, 6539U, 10342U, 4265U, 
    5340U, 6939U, 11064U, 3392U, 3871U, 4807U, 6454U, 10257U, 
    3938U, 4859U, 6506U, 10309U, 4073U, 5033U, 6681U, 10583U, 
    9766U, 8055U, 3774U, 4604U, 6357U, 7595U, 9979U, 7549U, 
    3915U, 4836U, 6483U, 10286U, 3954U, 4875U, 6522U, 10325U, 
    4087U, 5047U, 6695U, 10597U, 9831U, 8087U, 4046U, 4947U, 
    6585U, 7831U, 10404U, 3168U, 812U, 8854U, 8914U, 4296U, 
    5417U, 6970U, 11150U, 3759U, 5896U, 6011U, 10665U, 10241U, 
    5969U, 6074U, 10905U, 4405U, 5584U, 7126U, 11317U, 4229U, 
    5313U, 6893U, 11018U, 4195U, 5259U, 6859U, 10950U, 4387U, 
    5566U, 7108U, 11299U, 3477U, 3585U, 6161U, 3690U, 6114U, 
    3628U, 4002U, 4909U, 6556U, 10359U, 4458U, 5648U, 7179U, 
    11390U, 7622U, 11739U, 8201U, 84U, 777U, 9928U, 1679U, 
    61U, 734U, 7561U, 1592U, 7852U, 9215U, 1662U, 7939U, 
    96U, 8110U, 4507U, 7530U, 8368U, 8514U, 8598U, 8623U, 
    8769U, 1881U, 1871U, 2173U, 2862U, 2878U, 11528U, 11520U, 
    11695U, 11602U, 11721U, 11630U, 11826U, 11855U, 11682U, 11588U, 
    11708U, 11616U, 11811U, 11841U, 2205U, 2143U, 3017U, 2886U, 
    2931U, 2362U, 2772U, 2417U, 2377U, 2784U, 2444U, 2898U, 
    2962U, 3113U, 2076U, 2996U, 2150U, 3028U, 3087U, 2290U, 
    2349U, 7521U, 9219U, 7812U, 9232U, 7946U, 9046U, 7274U, 
    7724U, 7889U, 5724U, 7231U, 9735U, 8029U, 7692U, 9730U, 
    8021U, 7644U, 9648U, 7279U, 8038U, 7732U, 9754U, 8047U, 
    7981U, 5739U, 7236U, 7700U, 7658U, 8817U, 1020U, 9437U, 
    415U, 1219U, 9581U, 9741U, 9808U, 8071U, 3857U, 4793U, 
    6440U, 10168U, 9639U, 8875U, 5819U, 7665U, 9195U, 1642U, 
    3969U, 7917U, 9895U, 8486U, 8570U, 8741U, 11574U, 1765U, 
    8171U, 3062U, 
};

static inline void InitMipsMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, 1402);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct MipsGenInstrInfo : public TargetInstrInfo {
  explicit MipsGenInstrInfo(int SO = -1, int DO = -1);
  virtual ~MipsGenInstrInfo();
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc MipsInsts[];
extern const unsigned MipsInstrNameIndices[];
extern const char MipsInstrNameData[];
MipsGenInstrInfo::MipsGenInstrInfo(int SO, int DO)
  : TargetInstrInfo(SO, DO) {
  InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, 1402);
}
MipsGenInstrInfo::~MipsGenInstrInfo() {}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {namespace Mips {
namespace OpName { 
enum {
OPERAND_LAST
};
} // End namespace OpName
} // End namespace Mips
} // End namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM
#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {namespace Mips {
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // End namespace Mips
} // End namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {namespace Mips {
namespace OpTypes { 
enum OperandType {
  InvertedImOperand = 0,
  LSAImm = 1,
  PtrRC = 2,
  brtarget = 3,
  brtarget_mm = 4,
  calltarget = 5,
  calltarget_mm = 6,
  condcode = 7,
  cpinst_operand = 8,
  f32imm = 9,
  f64imm = 10,
  i16imm = 11,
  i1imm = 12,
  i32imm = 13,
  i64imm = 14,
  i8imm = 15,
  imm32 = 16,
  jmptarget = 17,
  jmptarget_mm = 18,
  mem = 19,
  mem16 = 20,
  mem16_ea = 21,
  mem_ea = 22,
  mem_mm_12 = 23,
  pcrel16 = 24,
  simm10 = 25,
  simm12 = 26,
  simm16 = 27,
  simm16_64 = 28,
  simm20 = 29,
  simm5 = 30,
  size_ext = 31,
  size_ins = 32,
  uimm10 = 33,
  uimm16 = 34,
  uimm16_64 = 35,
  uimm2 = 36,
  uimm20 = 37,
  uimm3 = 38,
  uimm4 = 39,
  uimm5 = 40,
  uimm6 = 41,
  uimm8 = 42,
  vsplat_simm10 = 43,
  vsplat_simm5 = 44,
  vsplat_uimm1 = 45,
  vsplat_uimm2 = 46,
  vsplat_uimm3 = 47,
  vsplat_uimm4 = 48,
  vsplat_uimm5 = 49,
  vsplat_uimm6 = 50,
  vsplat_uimm8 = 51,
  OPERAND_TYPE_LIST_END
};
} // End namespace OpTypes
} // End namespace Mips
} // End namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM
#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace Mips {

enum Arch {
	Arch_se,
	Arch_micromips
};

// Std2MicroMips
int Std2MicroMips(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Std2MicroMipsTable[][3] = {
  { Mips::ADD, Mips::ADD, Mips::ADD_MM },
  { Mips::ADDi, Mips::ADDi, Mips::ADDi_MM },
  { Mips::ADDiu, Mips::ADDiu, Mips::ADDiu_MM },
  { Mips::ADDu, Mips::ADDu, Mips::ADDu_MM },
  { Mips::AND, Mips::AND, Mips::AND_MM },
  { Mips::ANDi, Mips::ANDi, Mips::ANDi_MM },
  { Mips::BEQ, Mips::BEQ, Mips::BEQ_MM },
  { Mips::BGEZ, Mips::BGEZ, Mips::BGEZ_MM },
  { Mips::BGEZAL, Mips::BGEZAL, Mips::BGEZAL_MM },
  { Mips::BGTZ, Mips::BGTZ, Mips::BGTZ_MM },
  { Mips::BLEZ, Mips::BLEZ, Mips::BLEZ_MM },
  { Mips::BLTZ, Mips::BLTZ, Mips::BLTZ_MM },
  { Mips::BLTZAL, Mips::BLTZAL, Mips::BLTZAL_MM },
  { Mips::BNE, Mips::BNE, Mips::BNE_MM },
  { Mips::CLO, Mips::CLO, Mips::CLO_MM },
  { Mips::CLZ, Mips::CLZ, Mips::CLZ_MM },
  { Mips::EXT, Mips::EXT, Mips::EXT_MM },
  { Mips::INS, Mips::INS, Mips::INS_MM },
  { Mips::J, Mips::J, Mips::J_MM },
  { Mips::JAL, Mips::JAL, Mips::JAL_MM },
  { Mips::JALR, Mips::JALR, Mips::JALR_MM },
  { Mips::JR, Mips::JR, Mips::JR_MM },
  { Mips::LB, Mips::LB, Mips::LB_MM },
  { Mips::LBu, Mips::LBu, Mips::LBu_MM },
  { Mips::LH, Mips::LH, Mips::LH_MM },
  { Mips::LHu, Mips::LHu, Mips::LHu_MM },
  { Mips::LUi, Mips::LUi, Mips::LUi_MM },
  { Mips::LW, Mips::LW, Mips::LW_MM },
  { Mips::MADD, Mips::MADD, Mips::MADD_MM },
  { Mips::MADDU, Mips::MADDU, Mips::MADDU_MM },
  { Mips::MFHI, Mips::MFHI, Mips::MFHI_MM },
  { Mips::MFLO, Mips::MFLO, Mips::MFLO_MM },
  { Mips::MOVF_I, Mips::MOVF_I, Mips::MOVF_I_MM },
  { Mips::MOVN_I_I, Mips::MOVN_I_I, Mips::MOVN_I_MM },
  { Mips::MOVT_I, Mips::MOVT_I, Mips::MOVT_I_MM },
  { Mips::MOVZ_I_I, Mips::MOVZ_I_I, Mips::MOVZ_I_MM },
  { Mips::MSUB, Mips::MSUB, Mips::MSUB_MM },
  { Mips::MSUBU, Mips::MSUBU, Mips::MSUBU_MM },
  { Mips::MTHI, Mips::MTHI, Mips::MTHI_MM },
  { Mips::MTLO, Mips::MTLO, Mips::MTLO_MM },
  { Mips::MUL, Mips::MUL, Mips::MUL_MM },
  { Mips::MULT, Mips::MULT, Mips::MULT_MM },
  { Mips::MULTu, Mips::MULTu, Mips::MULTu_MM },
  { Mips::NOR, Mips::NOR, Mips::NOR_MM },
  { Mips::OR, Mips::OR, Mips::OR_MM },
  { Mips::ORi, Mips::ORi, Mips::ORi_MM },
  { Mips::RET, Mips::RET, Mips::RET_MM },
  { Mips::ROTR, Mips::ROTR, Mips::ROTR_MM },
  { Mips::ROTRV, Mips::ROTRV, Mips::ROTRV_MM },
  { Mips::SB, Mips::SB, Mips::SB_MM },
  { Mips::SDIV, Mips::SDIV, Mips::SDIV_MM },
  { Mips::SEB, Mips::SEB, Mips::SEB_MM },
  { Mips::SEH, Mips::SEH, Mips::SEH_MM },
  { Mips::SH, Mips::SH, Mips::SH_MM },
  { Mips::SLL, Mips::SLL, Mips::SLL_MM },
  { Mips::SLLV, Mips::SLLV, Mips::SLLV_MM },
  { Mips::SLT, Mips::SLT, Mips::SLT_MM },
  { Mips::SLTi, Mips::SLTi, Mips::SLTi_MM },
  { Mips::SLTiu, Mips::SLTiu, Mips::SLTiu_MM },
  { Mips::SLTu, Mips::SLTu, Mips::SLTu_MM },
  { Mips::SRA, Mips::SRA, Mips::SRA_MM },
  { Mips::SRAV, Mips::SRAV, Mips::SRAV_MM },
  { Mips::SRL, Mips::SRL, Mips::SRL_MM },
  { Mips::SRLV, Mips::SRLV, Mips::SRLV_MM },
  { Mips::SUB, Mips::SUB, Mips::SUB_MM },
  { Mips::SUBu, Mips::SUBu, Mips::SUBu_MM },
  { Mips::SW, Mips::SW, Mips::SW_MM },
  { Mips::TAILCALL, Mips::TAILCALL, Mips::TAILCALL_MM },
  { Mips::TAILCALL_R, Mips::TAILCALL_R, Mips::TAILCALL_R_MM },
  { Mips::TEQ, Mips::TEQ, Mips::TEQ_MM },
  { Mips::TEQI, Mips::TEQI, Mips::TEQI_MM },
  { Mips::TGE, Mips::TGE, Mips::TGE_MM },
  { Mips::TGEI, Mips::TGEI, Mips::TGEI_MM },
  { Mips::TGEIU, Mips::TGEIU, Mips::TGEIU_MM },
  { Mips::TGEU, Mips::TGEU, Mips::TGEU_MM },
  { Mips::TLT, Mips::TLT, Mips::TLT_MM },
  { Mips::TLTI, Mips::TLTI, Mips::TLTI_MM },
  { Mips::TLTU, Mips::TLTU, Mips::TLTU_MM },
  { Mips::TNE, Mips::TNE, Mips::TNE_MM },
  { Mips::TNEI, Mips::TNEI, Mips::TNEI_MM },
  { Mips::TTLTIU, Mips::TTLTIU, Mips::TLTIU_MM },
  { Mips::UDIV, Mips::UDIV, Mips::UDIV_MM },
  { Mips::WSBH, Mips::WSBH, Mips::WSBH_MM },
  { Mips::XOR, Mips::XOR, Mips::XOR_MM },
  { Mips::XORi, Mips::XORi, Mips::XORi_MM },
}; // End of Std2MicroMipsTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 85;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == Std2MicroMipsTable[mid][0]) {
      break;
    }
    if (Opcode < Std2MicroMipsTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_se)
    return Std2MicroMipsTable[mid][1];
  if (inArch == Arch_micromips)
    return Std2MicroMipsTable[mid][2];
  return -1;}

} // End Mips namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

