/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void MipsInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    7905U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    7898U,	// BUNDLE
    7915U,	// LIFETIME_START
    7885U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    12639U,	// ABSQ_S_PH
    9520U,	// ABSQ_S_QB
    15193U,	// ABSQ_S_W
    16788486U,	// ADD
    16789660U,	// ADDQH_PH
    16789777U,	// ADDQH_R_PH
    16792084U,	// ADDQH_R_W
    16791687U,	// ADDQH_W
    16789734U,	// ADDQ_PH
    16789833U,	// ADDQ_S_PH
    16792389U,	// ADDQ_S_W
    16786896U,	// ADDSC
    16785729U,	// ADDS_A_B
    16786947U,	// ADDS_A_D
    16788605U,	// ADDS_A_H
    16791395U,	// ADDS_A_W
    16786197U,	// ADDS_S_B
    16787857U,	// ADDS_S_D
    16789162U,	// ADDS_S_H
    16792439U,	// ADDS_S_W
    16786412U,	// ADDS_U_B
    16788260U,	// ADDS_U_D
    16789440U,	// ADDS_U_H
    16792857U,	// ADDS_U_W
    16786604U,	// ADDUH_QB
    16786712U,	// ADDUH_R_QB
    16789932U,	// ADDU_PH
    16786817U,	// ADDU_QB
    16789877U,	// ADDU_S_PH
    16786758U,	// ADDU_S_QB
    285221434U,	// ADDVI_B
    285222824U,	// ADDVI_D
    285224277U,	// ADDVI_H
    285227276U,	// ADDVI_W
    16786490U,	// ADDV_B
    16788350U,	// ADDV_D
    16789518U,	// ADDV_H
    16792957U,	// ADDV_W
    16786903U,	// ADDWC
    16785711U,	// ADD_A_B
    16786928U,	// ADD_A_D
    16788587U,	// ADD_A_H
    16791376U,	// ADD_A_W
    16788486U,	// ADD_MM
    16790139U,	// ADDi
    16790139U,	// ADDi_MM
    16791173U,	// ADDiu
    16791173U,	// ADDiu_MM
    16791148U,	// ADDu
    16791148U,	// ADDu_MM
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    16788508U,	// AND
    16788508U,	// AND64
    285221293U,	// ANDI_B
    16788508U,	// AND_MM
    16791226U,	// AND_V
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    553661057U,	// ANDi
    553661057U,	// ANDi64
    553661057U,	// ANDi_MM
    553659434U,	// APPEND
    16786091U,	// ASUB_S_B
    16787687U,	// ASUB_S_D
    16788994U,	// ASUB_S_H
    16792219U,	// ASUB_S_W
    16786306U,	// ASUB_U_B
    16788090U,	// ASUB_U_D
    16789282U,	// ASUB_U_H
    16792687U,	// ASUB_U_W
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    16786177U,	// AVER_S_B
    16787837U,	// AVER_S_D
    16789132U,	// AVER_S_H
    16792419U,	// AVER_S_W
    16786392U,	// AVER_U_B
    16788240U,	// AVER_U_D
    16789420U,	// AVER_U_H
    16792837U,	// AVER_U_W
    16786119U,	// AVE_S_B
    16787769U,	// AVE_S_D
    16789064U,	// AVE_S_H
    16792301U,	// AVE_S_W
    16786334U,	// AVE_U_B
    16788172U,	// AVE_U_D
    16789352U,	// AVE_U_H
    16792769U,	// AVE_U_W
    13957U,	// AddiuRxImmX16
    79493U,	// AddiuRxPcImmX16
    34616965U,	// AddiuRxRxImm16
    1062533U,	// AddiuRxRxImmX16
    2111109U,	// AddiuRxRyOffMemX16
    147072U,	// AddiuSpImm16
    212608U,	// AddiuSpImmX16
    16791148U,	// AdduRxRyRz16
    1059868U,	// AndRxRxRy16
    0U,	// B
    553661358U,	// BALIGN
    0U,	// BAL_BR
    11354U,	// BC1F
    13878U,	// BC1T
    285221362U,	// BCLRI_B
    285222768U,	// BCLRI_D
    285224221U,	// BCLRI_H
    285227220U,	// BCLRI_W
    16786058U,	// BCLR_B
    16787611U,	// BCLR_D
    16788961U,	// BCLR_H
    16792135U,	// BCLR_W
    16790559U,	// BEQ
    16790559U,	// BEQ64
    16790559U,	// BEQ_MM
    15837U,	// BGEZ
    15837U,	// BGEZ64
    13041U,	// BGEZAL
    13041U,	// BGEZAL_MM
    15837U,	// BGEZ_MM
    15881U,	// BGTZ
    15881U,	// BGTZ64
    15881U,	// BGTZ_MM
    823140823U,	// BINSLI_B
    823142229U,	// BINSLI_D
    823143682U,	// BINSLI_H
    823146681U,	// BINSLI_W
    1091576426U,	// BINSL_B
    1091577870U,	// BINSL_D
    1091579252U,	// BINSL_H
    1091582295U,	// BINSL_W
    823140884U,	// BINSRI_B
    823142274U,	// BINSRI_D
    823143727U,	// BINSRI_H
    823146726U,	// BINSRI_W
    1091576474U,	// BINSR_B
    1091578061U,	// BINSR_D
    1091579377U,	// BINSR_H
    1091582585U,	// BINSR_W
    14082U,	// BITREV
    15843U,	// BLEZ
    15843U,	// BLEZ64
    15843U,	// BLEZ_MM
    15887U,	// BLTZ
    15887U,	// BLTZ64
    13049U,	// BLTZAL
    13049U,	// BLTZAL_MM
    15887U,	// BLTZ_MM
    823140939U,	// BMNZI_B
    1091581683U,	// BMNZ_V
    823140931U,	// BMZI_B
    1091581669U,	// BMZ_V
    16788539U,	// BNE
    16788539U,	// BNE64
    285221301U,	// BNEGI_B
    285222716U,	// BNEGI_D
    285224169U,	// BNEGI_H
    285227168U,	// BNEGI_W
    16785813U,	// BNEG_B
    16787236U,	// BNEG_D
    16788689U,	// BNEG_H
    16791607U,	// BNEG_W
    16788539U,	// BNE_MM
    9314U,	// BNZ_B
    11249U,	// BNZ_D
    12342U,	// BNZ_H
    14060U,	// BNZ_V
    15806U,	// BNZ_W
    204937U,	// BPOSGE32
    0U,	// BPOSGE32_PSEUDO
    13011U,	// BREAK
    823140798U,	// BSELI_B
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    1091581641U,	// BSEL_V
    0U,	// BSEL_W_PSEUDO
    285221416U,	// BSETI_B
    285222806U,	// BSETI_D
    285224259U,	// BSETI_H
    285227258U,	// BSETI_W
    16786274U,	// BSET_B
    16787963U,	// BSET_D
    16789250U,	// BSET_H
    16792593U,	// BSET_W
    9308U,	// BZ_B
    11243U,	// BZ_D
    12336U,	// BZ_H
    14047U,	// BZ_V
    15800U,	// BZ_W
    50347516U,	// BeqzRxImm16
    15868U,	// BeqzRxImmX16
    139573U,	// Bimm16
    205109U,	// BimmX16
    50347497U,	// BnezRxImm16
    15849U,	// BnezRxImmX16
    7877U,	// Break16
    278018U,	// Bteqz16
    67122149U,	// BteqzT8CmpX16
    67121837U,	// BteqzT8CmpiX16
    67122748U,	// BteqzT8SltX16
    67121855U,	// BteqzT8SltiX16
    67122835U,	// BteqzT8SltiuX16
    67122849U,	// BteqzT8SltuX16
    212482U,	// BteqzX16
    277999U,	// Btnez16
    83899365U,	// BtnezT8CmpX16
    83899053U,	// BtnezT8CmpiX16
    83899964U,	// BtnezT8SltX16
    83899071U,	// BtnezT8SltiX16
    83900051U,	// BtnezT8SltiuX16
    83900065U,	// BtnezT8SltuX16
    212463U,	// BtnezX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    10183U,	// CEIL_L_D64
    13658U,	// CEIL_L_S
    11205U,	// CEIL_W_D32
    11205U,	// CEIL_W_D64
    13840U,	// CEIL_W_S
    16785889U,	// CEQI_B
    16787295U,	// CEQI_D
    16788748U,	// CEQI_H
    16791747U,	// CEQI_W
    16786043U,	// CEQ_B
    16787552U,	// CEQ_D
    16788939U,	// CEQ_H
    16792023U,	// CEQ_W
    8227U,	// CFC1
    8479U,	// CFCMSA
    16786128U,	// CLEI_S_B
    16787778U,	// CLEI_S_D
    16789073U,	// CLEI_S_H
    16792310U,	// CLEI_S_W
    285221799U,	// CLEI_U_B
    285223637U,	// CLEI_U_D
    285224817U,	// CLEI_U_H
    285228234U,	// CLEI_U_W
    16786110U,	// CLE_S_B
    16787760U,	// CLE_S_D
    16789055U,	// CLE_S_H
    16792292U,	// CLE_S_W
    16786325U,	// CLE_U_B
    16788163U,	// CLE_U_D
    16789343U,	// CLE_U_H
    16792760U,	// CLE_U_W
    13245U,	// CLO
    13245U,	// CLO_MM
    16786148U,	// CLTI_S_B
    16787798U,	// CLTI_S_D
    16789093U,	// CLTI_S_H
    16792330U,	// CLTI_S_W
    285221819U,	// CLTI_U_B
    285223657U,	// CLTI_U_D
    285224837U,	// CLTI_U_H
    285228254U,	// CLTI_U_W
    16786216U,	// CLT_S_B
    16787876U,	// CLT_S_D
    16789181U,	// CLT_S_H
    16792458U,	// CLT_S_W
    16786443U,	// CLT_U_B
    16788291U,	// CLT_U_D
    16789471U,	// CLT_U_H
    16792888U,	// CLT_U_W
    15863U,	// CLZ
    15863U,	// CLZ_MM
    16786650U,	// CMPGDU_EQ_QB
    16786555U,	// CMPGDU_LE_QB
    16786769U,	// CMPGDU_LT_QB
    16786664U,	// CMPGU_EQ_QB
    16786569U,	// CMPGU_LE_QB
    16786783U,	// CMPGU_LT_QB
    9461U,	// CMPU_EQ_QB
    9366U,	// CMPU_LE_QB
    9580U,	// CMPU_LT_QB
    12527U,	// CMP_EQ_PH
    12423U,	// CMP_LE_PH
    12696U,	// CMP_LT_PH
    7947U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    2516591439U,	// COPY_S_B
    2516594415U,	// COPY_S_H
    2516597714U,	// COPY_S_W
    2516591654U,	// COPY_U_B
    2516594682U,	// COPY_U_H
    2516598121U,	// COPY_U_W
    344126U,	// CTC1
    8487U,	// CTCMSA
    13543U,	// CVT_D32_S
    14239U,	// CVT_D32_W
    13018U,	// CVT_D64_L
    13543U,	// CVT_D64_S
    14239U,	// CVT_D64_W
    10204U,	// CVT_L_D64
    13679U,	// CVT_L_S
    10462U,	// CVT_S_D32
    10462U,	// CVT_S_D64
    13027U,	// CVT_S_L
    14994U,	// CVT_S_W
    11226U,	// CVT_W_D32
    11226U,	// CVT_W_D64
    13861U,	// CVT_W_S
    10327U,	// C_EQ_D32
    10327U,	// C_EQ_D64
    13720U,	// C_EQ_S
    9973U,	// C_F_D32
    9973U,	// C_F_D64
    13606U,	// C_F_S
    9860U,	// C_LE_D32
    9860U,	// C_LE_D64
    13570U,	// C_LE_S
    10764U,	// C_LT_D32
    10764U,	// C_LT_D64
    13762U,	// C_LT_S
    9851U,	// C_NGE_D32
    9851U,	// C_NGE_D64
    13561U,	// C_NGE_S
    9876U,	// C_NGLE_D32
    9876U,	// C_NGLE_D64
    13578U,	// C_NGLE_S
    10213U,	// C_NGL_D32
    10213U,	// C_NGL_D64
    13688U,	// C_NGL_S
    10755U,	// C_NGT_D32
    10755U,	// C_NGT_D64
    13753U,	// C_NGT_S
    9886U,	// C_OLE_D32
    9886U,	// C_OLE_D64
    13588U,	// C_OLE_S
    10780U,	// C_OLT_D32
    10780U,	// C_OLT_D64
    13770U,	// C_OLT_S
    10343U,	// C_SEQ_D32
    10343U,	// C_SEQ_D64
    13728U,	// C_SEQ_S
    10004U,	// C_SF_D32
    10004U,	// C_SF_D64
    13613U,	// C_SF_S
    10360U,	// C_UEQ_D32
    10360U,	// C_UEQ_D64
    13737U,	// C_UEQ_S
    9903U,	// C_ULE_D32
    9903U,	// C_ULE_D64
    13597U,	// C_ULE_S
    10797U,	// C_ULT_D32
    10797U,	// C_ULT_D64
    13779U,	// C_ULT_S
    10287U,	// C_UN_D32
    10287U,	// C_UN_D64
    13704U,	// C_UN_S
    13285U,	// CmpRxRy16
    117453485U,	// CmpiRxImm16
    12973U,	// CmpiRxImmX16
    212626U,	// Constant32
    16788485U,	// DADD
    16790138U,	// DADDi
    16791172U,	// DADDiu
    16791147U,	// DADDu
    13244U,	// DCLO
    15862U,	// DCLZ
    7951U,	// DERET
    553664174U,	// DEXT
    553664161U,	// DEXTM
    553664187U,	// DEXTU
    209533U,	// DI
    553664168U,	// DINS
    553664154U,	// DINSM
    553664180U,	// DINSU
    16786237U,	// DIV_S_B
    16787919U,	// DIV_S_D
    16789202U,	// DIV_S_H
    16792501U,	// DIV_S_W
    16786452U,	// DIV_U_B
    16788322U,	// DIV_U_D
    16789480U,	// DIV_U_H
    16792919U,	// DIV_U_W
    553656329U,	// DMFC0
    8233U,	// DMFC1
    553656504U,	// DMFC2
    553656336U,	// DMTC0
    344132U,	// DMTC1
    553656511U,	// DMTC2
    13894U,	// DMULT
    13997U,	// DMULTu
    16787827U,	// DOTP_S_D
    16789122U,	// DOTP_S_H
    16792369U,	// DOTP_S_W
    16788230U,	// DOTP_U_D
    16789410U,	// DOTP_U_H
    16792827U,	// DOTP_U_W
    1091578140U,	// DPADD_S_D
    1091579435U,	// DPADD_S_H
    1091582672U,	// DPADD_S_W
    1091578543U,	// DPADD_U_D
    1091579723U,	// DPADD_U_H
    1091583140U,	// DPADD_U_W
    16789991U,	// DPAQX_SA_W_PH
    16790074U,	// DPAQX_S_W_PH
    16791829U,	// DPAQ_SA_L_W
    16790033U,	// DPAQ_S_W_PH
    16790273U,	// DPAU_H_QBL
    16790569U,	// DPAU_H_QBR
    16790112U,	// DPAX_W_PH
    16789981U,	// DPA_W_PH
    16790006U,	// DPSQX_SA_W_PH
    16790088U,	// DPSQX_S_W_PH
    16791842U,	// DPSQ_SA_L_W
    16790061U,	// DPSQ_S_W_PH
    1091578107U,	// DPSUB_S_D
    1091579414U,	// DPSUB_S_H
    1091582639U,	// DPSUB_S_W
    1091578510U,	// DPSUB_U_D
    1091579702U,	// DPSUB_U_H
    1091583107U,	// DPSUB_U_W
    16790285U,	// DPSU_H_QBL
    16790581U,	// DPSU_H_QBR
    16790123U,	// DPSX_W_PH
    16790102U,	// DPS_W_PH
    553661638U,	// DROTR
    553656483U,	// DROTR32
    16791344U,	// DROTRV
    12349U,	// DSBH
    15987U,	// DSDIV
    11281U,	// DSHD
    553661331U,	// DSLL
    553656467U,	// DSLL32
    134230931U,	// DSLL64_32
    16791306U,	// DSLLV
    553656596U,	// DSRA
    553656449U,	// DSRA32
    16791291U,	// DSRAV
    553661337U,	// DSRL
    553656475U,	// DSRL32
    16791313U,	// DSRLV
    16791133U,	// DSUBu
    15973U,	// DUDIV
    15988U,	// DivRxRy16
    15974U,	// DivuRxRy16
    209545U,	// EI
    7952U,	// ERET
    553664175U,	// EXT
    553661465U,	// EXTP
    553661397U,	// EXTPDP
    16791328U,	// EXTPDPV
    16791337U,	// EXTPV
    16792562U,	// EXTRV_RS_W
    16792116U,	// EXTRV_R_W
    16789211U,	// EXTRV_S_H
    16792999U,	// EXTRV_W
    553663463U,	// EXTR_RS_W
    553663007U,	// EXTR_R_W
    553660054U,	// EXTR_S_H
    553663106U,	// EXTR_W
    553664175U,	// EXT_MM
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    10721U,	// FABS_D32
    10721U,	// FABS_D64
    13746U,	// FABS_S
    0U,	// FABS_W
    16787016U,	// FADD_D
    16787017U,	// FADD_D32
    16787017U,	// FADD_D64
    16790770U,	// FADD_S
    16791464U,	// FADD_W
    16787196U,	// FCAF_D
    16791583U,	// FCAF_W
    16787551U,	// FCEQ_D
    16792022U,	// FCEQ_W
    10728U,	// FCLASS_D
    15358U,	// FCLASS_W
    16787084U,	// FCLE_D
    16791506U,	// FCLE_W
    16787988U,	// FCLT_D
    16792601U,	// FCLT_W
    425666U,	// FCMP_D32
    425666U,	// FCMP_D64
    491202U,	// FCMP_S32
    16787146U,	// FCNE_D
    16791540U,	// FCNE_W
    16787627U,	// FCOR_D
    16792151U,	// FCOR_W
    16787585U,	// FCUEQ_D
    16792038U,	// FCUEQ_W
    16787128U,	// FCULE_D
    16791522U,	// FCULE_W
    16788022U,	// FCULT_D
    16792617U,	// FCULT_W
    16787162U,	// FCUNE_D
    16791556U,	// FCUNE_W
    16787511U,	// FCUN_D
    16791928U,	// FCUN_W
    16788376U,	// FDIV_D
    16788377U,	// FDIV_D32
    16788377U,	// FDIV_D64
    16791020U,	// FDIV_S
    16792983U,	// FDIV_W
    16788869U,	// FEXDO_H
    16791944U,	// FEXDO_W
    16786919U,	// FEXP2_D
    0U,	// FEXP2_D_1_PSEUDO
    16791367U,	// FEXP2_W
    0U,	// FEXP2_W_1_PSEUDO
    10229U,	// FEXUPL_D
    14654U,	// FEXUPL_W
    10427U,	// FEXUPR_D
    14951U,	// FEXUPR_W
    10669U,	// FFINT_S_D
    15251U,	// FFINT_S_W
    11084U,	// FFINT_U_D
    15681U,	// FFINT_U_W
    10239U,	// FFQL_D
    14664U,	// FFQL_W
    10437U,	// FFQR_D
    14961U,	// FFQR_W
    8788U,	// FILL_B
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    11614U,	// FILL_H
    14639U,	// FILL_W
    9694U,	// FLOG2_D
    14142U,	// FLOG2_W
    10193U,	// FLOOR_L_D64
    13668U,	// FLOOR_L_S
    11215U,	// FLOOR_W_D32
    11215U,	// FLOOR_W_D64
    13850U,	// FLOOR_W_S
    1091577424U,	// FMADD_D
    1091581872U,	// FMADD_W
    16786957U,	// FMAX_A_D
    16791405U,	// FMAX_A_W
    16788451U,	// FMAX_D
    16793008U,	// FMAX_W
    16786937U,	// FMIN_A_D
    16791385U,	// FMIN_A_W
    16787495U,	// FMIN_D
    16791920U,	// FMIN_W
    11176U,	// FMOV_D32
    11176U,	// FMOV_D64
    13811U,	// FMOV_S
    1091577382U,	// FMSUB_D
    1091581830U,	// FMSUB_W
    16787479U,	// FMUL_D
    16787480U,	// FMUL_D32
    16787480U,	// FMUL_D64
    16790913U,	// FMUL_S
    16791904U,	// FMUL_W
    10021U,	// FNEG_D32
    10021U,	// FNEG_D64
    13629U,	// FNEG_S
    10319U,	// FRCP_D
    14737U,	// FRCP_W
    10832U,	// FRINT_D
    15427U,	// FRINT_W
    10850U,	// FRSQRT_D
    15455U,	// FRSQRT_W
    16787204U,	// FSAF_D
    16791591U,	// FSAF_W
    16787568U,	// FSEQ_D
    16792030U,	// FSEQ_W
    16787111U,	// FSLE_D
    16791514U,	// FSLE_W
    16788005U,	// FSLT_D
    16792609U,	// FSLT_W
    16787154U,	// FSNE_D
    16791548U,	// FSNE_W
    16787635U,	// FSOR_D
    16792159U,	// FSOR_W
    10841U,	// FSQRT_D
    10842U,	// FSQRT_D32
    10842U,	// FSQRT_D64
    13788U,	// FSQRT_S
    15446U,	// FSQRT_W
    16786974U,	// FSUB_D
    16786975U,	// FSUB_D32
    16786975U,	// FSUB_D64
    16790752U,	// FSUB_S
    16791422U,	// FSUB_W
    16787594U,	// FSUEQ_D
    16792047U,	// FSUEQ_W
    16787137U,	// FSULE_D
    16791531U,	// FSULE_W
    16788031U,	// FSULT_D
    16792626U,	// FSULT_W
    16787171U,	// FSUNE_D
    16791565U,	// FSUNE_W
    16787519U,	// FSUN_D
    16791936U,	// FSUN_W
    10680U,	// FTINT_S_D
    15262U,	// FTINT_S_W
    11095U,	// FTINT_U_D
    15692U,	// FTINT_U_W
    16788946U,	// FTQ_H
    16792056U,	// FTQ_W
    10502U,	// FTRUNC_S_D
    15034U,	// FTRUNC_S_W
    10905U,	// FTRUNC_U_D
    15502U,	// FTRUNC_U_W
    152056479U,	// GotPrologue16
    16787730U,	// HADD_S_D
    16789025U,	// HADD_S_H
    16792262U,	// HADD_S_W
    16788133U,	// HADD_U_D
    16789313U,	// HADD_U_H
    16792730U,	// HADD_U_W
    16787697U,	// HSUB_S_D
    16789004U,	// HSUB_S_H
    16792229U,	// HSUB_S_W
    16788100U,	// HSUB_U_D
    16789292U,	// HSUB_U_H
    16792697U,	// HSUB_U_W
    16786507U,	// ILVEV_B
    16788367U,	// ILVEV_D
    16789535U,	// ILVEV_H
    16792974U,	// ILVEV_W
    16786035U,	// ILVL_B
    16787487U,	// ILVL_D
    16788861U,	// ILVL_H
    16791912U,	// ILVL_W
    16785787U,	// ILVOD_B
    16787058U,	// ILVOD_D
    16788663U,	// ILVOD_H
    16791497U,	// ILVOD_W
    16786083U,	// ILVR_B
    16787670U,	// ILVR_D
    16788986U,	// ILVR_H
    16792202U,	// ILVR_W
    553664169U,	// INS
    3679090U,	// INSERT_B
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    3682066U,	// INSERT_H
    3685452U,	// INSERT_W
    1062712U,	// INSV
    4727172U,	// INSVE_B
    4728556U,	// INSVE_D
    4730048U,	// INSVE_H
    4732950U,	// INSVE_W
    553664169U,	// INS_MM
    209616U,	// J
    209644U,	// JAL
    13494U,	// JALR
    13494U,	// JALR64
    0U,	// JALR64Pseudo
    0U,	// JALRPseudo
    13494U,	// JALR_MM
    209644U,	// JAL_MM
    210098U,	// JR
    210098U,	// JR64
    210098U,	// JR_MM
    209616U,	// J_MM
    602860U,	// Jal16
    7939U,	// JrRa16
    7930U,	// JrcRa16
    212513U,	// JrcRx16
    204801U,	// JumpLinkReg16
    5252206U,	// LB
    5252206U,	// LB64
    168836562U,	// LBUX
    5252206U,	// LB_MM
    5256792U,	// LBu
    5256792U,	// LBu64
    5256792U,	// LBu_MM
    5254168U,	// LD
    5251095U,	// LDC1
    5251095U,	// LDC164
    5251244U,	// LDC2
    8614U,	// LDI_B
    10037U,	// LDI_D
    11490U,	// LDI_H
    14489U,	// LDI_W
    5256008U,	// LDL
    5256304U,	// LDR
    168829015U,	// LDXC1
    168829015U,	// LDXC164
    5251436U,	// LD_B
    5252707U,	// LD_D
    5254312U,	// LD_H
    5257146U,	// LD_W
    2111109U,	// LEA_ADDiu
    2111108U,	// LEA_ADDiu64
    5255246U,	// LH
    5255246U,	// LH64
    168836557U,	// LHX
    5255246U,	// LH_MM
    5256831U,	// LHu
    5256831U,	// LHu64
    5256831U,	// LHu_MM
    5256079U,	// LL
    5254167U,	// LLD
    5251079U,	// LOAD_ACC128
    5251079U,	// LOAD_ACC64
    5251079U,	// LOAD_ACC64DSP
    5256170U,	// LOAD_CCOND_DSP
    16785690U,	// LSA
    168829029U,	// LUXC1
    168829029U,	// LUXC164
    6304459U,	// LUi
    6304459U,	// LUi64
    6304459U,	// LUi_MM
    5258693U,	// LW
    5258693U,	// LW64
    5251147U,	// LWC1
    5251270U,	// LWC2
    5256100U,	// LWL
    5256100U,	// LWL64
    5256100U,	// LWL_MM
    5256404U,	// LWR
    5256404U,	// LWR64
    5256404U,	// LWR_MM
    168836568U,	// LWX
    168829043U,	// LWXC1
    5258693U,	// LW_MM
    5256885U,	// LWu
    5252206U,	// LbRxRyOffMemX16
    5256792U,	// LbuRxRyOffMemX16
    5255246U,	// LhRxRyOffMemX16
    5256831U,	// LhuRxRyOffMemX16
    117453481U,	// LiRxImm16
    12959U,	// LiRxImmAlignX16
    12969U,	// LiRxImmX16
    6299870U,	// LoadAddr32Imm
    5251294U,	// LoadAddr32Reg
    6304425U,	// LoadImm32Reg
    671173U,	// LwConstant32
    33570245U,	// LwRxPcTcp16
    15813U,	// LwRxPcTcpX16
    5258693U,	// LwRxRyOffMemX16
    185613765U,	// LwRxSpImmX16
    11275U,	// MADD
    1091579318U,	// MADDR_Q_H
    1091582401U,	// MADDR_Q_W
    13938U,	// MADDU
    16791154U,	// MADDU_DSP
    13938U,	// MADDU_MM
    1091576889U,	// MADDV_B
    1091578749U,	// MADDV_D
    1091579917U,	// MADDV_H
    1091583356U,	// MADDV_W
    16787025U,	// MADD_D32
    16787025U,	// MADD_D64
    16788491U,	// MADD_DSP
    11275U,	// MADD_MM
    1091579288U,	// MADD_Q_H
    1091582371U,	// MADD_Q_W
    16790769U,	// MADD_S
    16790354U,	// MAQ_SA_W_PHL
    16790650U,	// MAQ_SA_W_PHR
    16790382U,	// MAQ_S_W_PHL
    16790678U,	// MAQ_S_W_PHR
    16786158U,	// MAXI_S_B
    16787808U,	// MAXI_S_D
    16789103U,	// MAXI_S_H
    16792340U,	// MAXI_S_W
    285221829U,	// MAXI_U_B
    285223667U,	// MAXI_U_D
    285224847U,	// MAXI_U_H
    285228264U,	// MAXI_U_W
    16785739U,	// MAX_A_B
    16786958U,	// MAX_A_D
    16788615U,	// MAX_A_H
    16791406U,	// MAX_A_W
    16786246U,	// MAX_S_B
    16787928U,	// MAX_S_D
    16789222U,	// MAX_S_H
    16792521U,	// MAX_S_W
    16786461U,	// MAX_U_B
    16788331U,	// MAX_U_D
    16789489U,	// MAX_U_H
    16792928U,	// MAX_U_W
    553656330U,	// MFC0
    8234U,	// MFC1
    553656505U,	// MFC2
    8240U,	// MFHC1
    209555U,	// MFHI
    209555U,	// MFHI64
    12947U,	// MFHI_DSP
    209555U,	// MFHI_MM
    209858U,	// MFLO
    209858U,	// MFLO64
    13250U,	// MFLO_DSP
    209858U,	// MFLO_MM
    16786138U,	// MINI_S_B
    16787788U,	// MINI_S_D
    16789083U,	// MINI_S_H
    16792320U,	// MINI_S_W
    285221809U,	// MINI_U_B
    285223647U,	// MINI_U_D
    285224827U,	// MINI_U_H
    285228244U,	// MINI_U_W
    16785720U,	// MIN_A_B
    16786938U,	// MIN_A_D
    16788596U,	// MIN_A_H
    16791386U,	// MIN_A_W
    16786168U,	// MIN_S_B
    16787818U,	// MIN_S_D
    16789113U,	// MIN_S_H
    16792360U,	// MIN_S_W
    16786383U,	// MIN_U_B
    16788221U,	// MIN_U_D
    16789401U,	// MIN_U_H
    16792818U,	// MIN_U_W
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    16786882U,	// MODSUB
    16786101U,	// MOD_S_B
    16787751U,	// MOD_S_D
    16789046U,	// MOD_S_H
    16792283U,	// MOD_S_W
    16786316U,	// MOD_U_B
    16788154U,	// MOD_U_D
    16789334U,	// MOD_U_H
    16792751U,	// MOD_U_W
    14017U,	// MOVE_V
    16787228U,	// MOVF_D32
    16787228U,	// MOVF_D64
    16788576U,	// MOVF_I
    16788576U,	// MOVF_I64
    16788576U,	// MOVF_I_MM
    16790837U,	// MOVF_S
    16787527U,	// MOVN_I64_D64
    16790454U,	// MOVN_I64_I
    16790454U,	// MOVN_I64_I64
    16790928U,	// MOVN_I64_S
    16787527U,	// MOVN_I_D32
    16787527U,	// MOVN_I_D64
    16790454U,	// MOVN_I_I
    16790454U,	// MOVN_I_I64
    16790454U,	// MOVN_I_MM
    16790928U,	// MOVN_I_S
    16788082U,	// MOVT_D32
    16788082U,	// MOVT_D64
    16791122U,	// MOVT_I
    16791122U,	// MOVT_I64
    16791122U,	// MOVT_I_MM
    16791012U,	// MOVT_S
    16788472U,	// MOVZ_I64_D64
    16793109U,	// MOVZ_I64_I
    16793109U,	// MOVZ_I64_I64
    16791086U,	// MOVZ_I64_S
    16788472U,	// MOVZ_I_D32
    16788472U,	// MOVZ_I_D64
    16793109U,	// MOVZ_I_I
    16793109U,	// MOVZ_I_I64
    16793109U,	// MOVZ_I_MM
    16791086U,	// MOVZ_I_S
    9674U,	// MSUB
    1091579307U,	// MSUBR_Q_H
    1091582390U,	// MSUBR_Q_W
    13924U,	// MSUBU
    16791140U,	// MSUBU_DSP
    13924U,	// MSUBU_MM
    1091576880U,	// MSUBV_B
    1091578740U,	// MSUBV_D
    1091579908U,	// MSUBV_H
    1091583347U,	// MSUBV_W
    16786983U,	// MSUB_D32
    16786983U,	// MSUB_D64
    16786890U,	// MSUB_DSP
    9674U,	// MSUB_MM
    1091579278U,	// MSUB_Q_H
    1091582361U,	// MSUB_Q_W
    16790751U,	// MSUB_S
    553656337U,	// MTC0
    344133U,	// MTC1
    553656512U,	// MTC2
    344119U,	// MTHC1
    209561U,	// MTHI
    209561U,	// MTHI64
    348825U,	// MTHI_DSP
    209561U,	// MTHI_MM
    349149U,	// MTHLIP
    209871U,	// MTLO
    209871U,	// MTLO64
    349135U,	// MTLO_DSP
    209871U,	// MTLO_MM
    16790431U,	// MUL
    16790395U,	// MULEQ_S_W_PHL
    16790691U,	// MULEQ_S_W_PHR
    16790297U,	// MULEU_S_PH_QBL
    16790593U,	// MULEU_S_PH_QBR
    16789900U,	// MULQ_RS_PH
    16792540U,	// MULQ_RS_W
    16789844U,	// MULQ_S_PH
    16792399U,	// MULQ_S_W
    16788929U,	// MULR_Q_H
    16792012U,	// MULR_Q_W
    16790046U,	// MULSAQ_S_W_PH
    16790021U,	// MULSA_W_PH
    13895U,	// MULT
    16791214U,	// MULTU_DSP
    16791111U,	// MULT_DSP
    13895U,	// MULT_MM
    13998U,	// MULTu
    13998U,	// MULTu_MM
    16786516U,	// MULV_B
    16788384U,	// MULV_D
    16789544U,	// MULV_H
    16792991U,	// MULV_W
    16790431U,	// MUL_MM
    16789717U,	// MUL_PH
    16788898U,	// MUL_Q_H
    16791981U,	// MUL_Q_W
    16789812U,	// MUL_S_PH
    209555U,	// Mfhi16
    209858U,	// Mflo16
    11348U,	// Move32R16
    11348U,	// MoveR3216
    13895U,	// MultRxRy16
    8083015U,	// MultRxRyRz16
    13998U,	// MultuRxRy16
    8083118U,	// MultuRxRyRz16
    8539U,	// NLOC_B
    9784U,	// NLOC_D
    11415U,	// NLOC_H
    14223U,	// NLOC_W
    8547U,	// NLZC_B
    9792U,	// NLZC_D
    11423U,	// NLZC_H
    14231U,	// NLZC_W
    16787033U,	// NMADD_D32
    16787033U,	// NMADD_D64
    16790768U,	// NMADD_S
    16786991U,	// NMSUB_D32
    16786991U,	// NMSUB_D64
    16790750U,	// NMSUB_S
    0U,	// NOP
    16790716U,	// NOR
    16790716U,	// NOR64
    285221380U,	// NORI_B
    16790716U,	// NOR_MM
    16791249U,	// NOR_V
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    11366U,	// NegRxRy16
    13901U,	// NotRxRy16
    16790717U,	// OR
    16790717U,	// OR64
    285221381U,	// ORI_B
    16790717U,	// OR_MM
    16791250U,	// OR_V
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    553661114U,	// ORi
    553661114U,	// ORi64
    553661114U,	// ORi_MM
    1062077U,	// OrRxRxRy16
    16789706U,	// PACKRL_PH
    16786498U,	// PCKEV_B
    16788358U,	// PCKEV_D
    16789526U,	// PCKEV_H
    16792965U,	// PCKEV_W
    16785778U,	// PCKOD_B
    16787049U,	// PCKOD_D
    16788654U,	// PCKOD_H
    16791488U,	// PCKOD_W
    9066U,	// PCNT_B
    10824U,	// PCNT_D
    12042U,	// PCNT_H
    15419U,	// PCNT_W
    16789670U,	// PICK_PH
    16786614U,	// PICK_QB
    13112U,	// PRECEQU_PH_QBL
    8418U,	// PRECEQU_PH_QBLA
    13408U,	// PRECEQU_PH_QBR
    8451U,	// PRECEQU_PH_QBRA
    13152U,	// PRECEQ_W_PHL
    13448U,	// PRECEQ_W_PHR
    13097U,	// PRECEU_PH_QBL
    8402U,	// PRECEU_PH_QBLA
    13393U,	// PRECEU_PH_QBR
    8435U,	// PRECEU_PH_QBRA
    16789622U,	// PRECRQU_S_QB_PH
    16791631U,	// PRECRQ_PH_W
    16789595U,	// PRECRQ_QB_PH
    16791662U,	// PRECRQ_RS_PH_W
    16789609U,	// PRECR_QB_PH
    553662527U,	// PRECR_SRA_PH_W
    553662556U,	// PRECR_SRA_R_PH_W
    553659425U,	// PREPEND
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    8199U,	// PseudoCVT_D32_W
    8199U,	// PseudoCVT_D64_L
    8199U,	// PseudoCVT_D64_W
    8199U,	// PseudoCVT_S_L
    8199U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMULT
    0U,	// PseudoMULTu
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoSDIV
    0U,	// PseudoUDIV
    9650U,	// RADDU_W_QB
    6304779U,	// RDDSP
    13517U,	// RDHWR
    13517U,	// RDHWR64
    12745U,	// REPLV_PH
    9630U,	// REPLV_QB
    6303928U,	// REPL_PH
    6300872U,	// REPL_QB
    210098U,	// RET
    210098U,	// RET_MM
    553661639U,	// ROTR
    16791345U,	// ROTRV
    16791345U,	// ROTRV_MM
    553661639U,	// ROTR_MM
    10172U,	// ROUND_L_D64
    13647U,	// ROUND_L_S
    11194U,	// ROUND_W_D32
    11194U,	// ROUND_W_D64
    13829U,	// ROUND_W_S
    35909U,	// RestoreIncSpF16
    40493U,	// RestoreRaF16
    0U,	// RetRA
    0U,	// RetRA16
    285221663U,	// SAT_S_B
    553658779U,	// SAT_S_D
    285224628U,	// SAT_S_H
    553663361U,	// SAT_S_W
    285221890U,	// SAT_U_B
    553659194U,	// SAT_U_D
    285224918U,	// SAT_U_H
    553663791U,	// SAT_U_W
    5252542U,	// SB
    5252542U,	// SB64
    5252542U,	// SB_MM
    804307U,	// SC
    805888U,	// SCD
    5254194U,	// SD
    5251101U,	// SDC1
    5251101U,	// SDC164
    5251250U,	// SDC2
    15988U,	// SDIV
    15988U,	// SDIV_MM
    5256013U,	// SDL
    5256309U,	// SDR
    168829022U,	// SDXC1
    168829022U,	// SDXC164
    9321U,	// SEB
    9321U,	// SEB64
    9321U,	// SEB_MM
    12361U,	// SEH
    12361U,	// SEH64
    12361U,	// SEH_MM
    5255798U,	// SH
    5255798U,	// SH64
    285221262U,	// SHF_B
    285224138U,	// SHF_H
    285227056U,	// SHF_W
    13256U,	// SHILO
    14104U,	// SHILOV
    16789951U,	// SHLLV_PH
    16786836U,	// SHLLV_QB
    16789888U,	// SHLLV_S_PH
    16792510U,	// SHLLV_S_W
    553660591U,	// SHLL_PH
    553657535U,	// SHLL_QB
    553660713U,	// SHLL_S_PH
    553663262U,	// SHLL_S_W
    16789941U,	// SHRAV_PH
    16786826U,	// SHRAV_QB
    16789789U,	// SHRAV_R_PH
    16786724U,	// SHRAV_R_QB
    16792105U,	// SHRAV_R_W
    553660498U,	// SHRA_PH
    553657458U,	// SHRA_QB
    553660666U,	// SHRA_R_PH
    553657601U,	// SHRA_R_QB
    553662975U,	// SHRA_R_W
    16789971U,	// SHRLV_PH
    16786856U,	// SHRLV_QB
    553660609U,	// SHRL_PH
    553657553U,	// SHRL_QB
    5255798U,	// SH_MM
    2516591013U,	// SLDI_B
    2516592436U,	// SLDI_D
    2516593889U,	// SLDI_H
    2516596888U,	// SLDI_W
    2248155499U,	// SLD_B
    2248156770U,	// SLD_D
    2248158375U,	// SLD_H
    2248161209U,	// SLD_W
    553661332U,	// SLL
    201339796U,	// SLL64_32
    201339796U,	// SLL64_64
    285221319U,	// SLLI_B
    285222725U,	// SLLI_D
    285224178U,	// SLLI_H
    285227177U,	// SLLI_W
    16791307U,	// SLLV
    16791307U,	// SLLV_MM
    16786012U,	// SLL_B
    16787438U,	// SLL_D
    16788838U,	// SLL_H
    553661332U,	// SLL_MM
    16791863U,	// SLL_W
    16791100U,	// SLT
    16791100U,	// SLT64
    16791100U,	// SLT_MM
    16790207U,	// SLTi
    16790207U,	// SLTi64
    16790207U,	// SLTi_MM
    16791187U,	// SLTiu
    16791187U,	// SLTiu64
    16791187U,	// SLTiu_MM
    16791201U,	// SLTu
    16791201U,	// SLTu64
    16791201U,	// SLTu_MM
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    2516591134U,	// SPLATI_B
    2516592524U,	// SPLATI_D
    2516593977U,	// SPLATI_H
    2516596976U,	// SPLATI_W
    2248155993U,	// SPLAT_B
    2248157682U,	// SPLAT_D
    2248158969U,	// SPLAT_H
    2248162312U,	// SPLAT_W
    553656597U,	// SRA
    285221277U,	// SRAI_B
    285222700U,	// SRAI_D
    285224153U,	// SRAI_H
    285227152U,	// SRAI_W
    285221353U,	// SRARI_B
    553658215U,	// SRARI_D
    285224212U,	// SRARI_H
    553662667U,	// SRARI_W
    16786050U,	// SRAR_B
    16787603U,	// SRAR_D
    16788953U,	// SRAR_H
    16792127U,	// SRAR_W
    16791292U,	// SRAV
    16791292U,	// SRAV_MM
    16785748U,	// SRA_B
    16786967U,	// SRA_D
    16788624U,	// SRA_H
    553656597U,	// SRA_MM
    16791415U,	// SRA_W
    553661338U,	// SRL
    285221327U,	// SRLI_B
    285222733U,	// SRLI_D
    285224186U,	// SRLI_H
    285227185U,	// SRLI_W
    285221371U,	// SRLRI_B
    553658233U,	// SRLRI_D
    285224230U,	// SRLRI_H
    553662685U,	// SRLRI_W
    16786066U,	// SRLR_B
    16787619U,	// SRLR_D
    16788969U,	// SRLR_H
    16792143U,	// SRLR_W
    16791314U,	// SRLV
    16791314U,	// SRLV_MM
    16786019U,	// SRL_B
    16787463U,	// SRL_D
    16788845U,	// SRL_H
    553661338U,	// SRL_MM
    16791888U,	// SRL_W
    5251079U,	// STORE_ACC128
    5251079U,	// STORE_ACC64
    5251079U,	// STORE_ACC64DSP
    5256186U,	// STORE_CCOND_DSP
    5251964U,	// ST_B
    5253740U,	// ST_D
    5254940U,	// ST_H
    5258345U,	// ST_W
    16786885U,	// SUB
    16789650U,	// SUBQH_PH
    16789765U,	// SUBQH_R_PH
    16792073U,	// SUBQH_R_W
    16791678U,	// SUBQH_W
    16789725U,	// SUBQ_PH
    16789822U,	// SUBQ_S_PH
    16792379U,	// SUBQ_S_W
    16786422U,	// SUBSUS_U_B
    16788270U,	// SUBSUS_U_D
    16789450U,	// SUBSUS_U_H
    16792867U,	// SUBSUS_U_W
    16786225U,	// SUBSUU_S_B
    16787907U,	// SUBSUU_S_D
    16789190U,	// SUBSUU_S_H
    16792489U,	// SUBSUU_S_W
    16786187U,	// SUBS_S_B
    16787847U,	// SUBS_S_D
    16789152U,	// SUBS_S_H
    16792429U,	// SUBS_S_W
    16786402U,	// SUBS_U_B
    16788250U,	// SUBS_U_D
    16789430U,	// SUBS_U_H
    16792847U,	// SUBS_U_W
    16786594U,	// SUBUH_QB
    16786700U,	// SUBUH_R_QB
    16789923U,	// SUBU_PH
    16786808U,	// SUBU_QB
    16789866U,	// SUBU_S_PH
    16786747U,	// SUBU_S_QB
    285221425U,	// SUBVI_B
    285222815U,	// SUBVI_D
    285224268U,	// SUBVI_H
    285227267U,	// SUBVI_W
    16786481U,	// SUBV_B
    16788341U,	// SUBV_D
    16789509U,	// SUBV_H
    16792948U,	// SUBV_W
    16786885U,	// SUB_MM
    16791134U,	// SUBu
    16791134U,	// SUBu_MM
    168829036U,	// SUXC1
    168829036U,	// SUXC164
    5258697U,	// SW
    5258697U,	// SW64
    5251153U,	// SWC1
    5251276U,	// SWC2
    5256105U,	// SWL
    5256105U,	// SWL64
    5256105U,	// SWL_MM
    5256409U,	// SWR
    5256409U,	// SWR64
    5256409U,	// SWR_MM
    168829050U,	// SWXC1
    5258697U,	// SW_MM
    212620U,	// SYNC
    209802U,	// SYSCALL
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    35918U,	// SaveDecSpF16
    40523U,	// SaveRaF16
    5252542U,	// SbRxRyOffMemX16
    212507U,	// SebRx16
    212519U,	// SehRx16
    900604U,	// SelBeqZ
    900585U,	// SelBneZ
    226538469U,	// SelTBteqZCmp
    226538157U,	// SelTBteqZCmpi
    226539068U,	// SelTBteqZSlt
    226538175U,	// SelTBteqZSlti
    226539155U,	// SelTBteqZSltiu
    226539169U,	// SelTBteqZSltu
    243315685U,	// SelTBtneZCmp
    243315373U,	// SelTBtneZCmpi
    243316284U,	// SelTBtneZSlt
    243315391U,	// SelTBtneZSlti
    243316371U,	// SelTBtneZSltiu
    243316385U,	// SelTBtneZSltu
    5255798U,	// ShRxRyOffMemX16
    553661332U,	// SllX16
    1062667U,	// SllvRxRy16
    10180156U,	// SltCCRxRy16
    13884U,	// SltRxRy16
    10179263U,	// SltiCCRxImmX16
    117453503U,	// SltiRxImm16
    12991U,	// SltiRxImmX16
    10180243U,	// SltiuCCRxImmX16
    117454483U,	// SltiuRxImm16
    13971U,	// SltiuRxImmX16
    10180257U,	// SltuCCRxRy16
    13985U,	// SltuRxRy16
    10180257U,	// SltuRxRyRz16
    553656597U,	// SraX16
    1062652U,	// SravRxRy16
    553661338U,	// SrlX16
    1062674U,	// SrlvRxRy16
    16791134U,	// SubuRxRyRz16
    5258697U,	// SwRxRyOffMemX16
    185613769U,	// SwRxSpImmX16
    209616U,	// TAILCALL
    210098U,	// TAILCALL64_R
    209616U,	// TAILCALL_MM
    210098U,	// TAILCALL_R
    210098U,	// TAILCALL_R_MM
    553661476U,	// TEQ
    6304435U,	// TEQI
    6304435U,	// TEQI_MM
    553661476U,	// TEQ_MM
    553659446U,	// TGE
    6304391U,	// TGEI
    6305420U,	// TGEIU
    6305420U,	// TGEIU_MM
    6304391U,	// TGEI_MM
    553662073U,	// TGEU
    553662073U,	// TGEU_MM
    553659446U,	// TGE_MM
    553662017U,	// TLT
    6304453U,	// TLTI
    6305434U,	// TLTIU_MM
    6304453U,	// TLTI_MM
    553662119U,	// TLTU
    553662119U,	// TLTU_MM
    553662017U,	// TLT_MM
    553659456U,	// TNE
    6304397U,	// TNEI
    6304397U,	// TNEI_MM
    553659456U,	// TNE_MM
    0U,	// TRAP
    10161U,	// TRUNC_L_D64
    13636U,	// TRUNC_L_S
    11183U,	// TRUNC_W_D32
    11183U,	// TRUNC_W_D64
    13818U,	// TRUNC_W_S
    6305434U,	// TTLTIU
    15974U,	// UDIV
    15974U,	// UDIV_MM
    1091576205U,	// VSHF_B
    1091577612U,	// VSHF_D
    1091579081U,	// VSHF_H
    1091581999U,	// VSHF_W
    7957U,	// WAIT
    6304786U,	// WRDSP
    12355U,	// WSBH
    12355U,	// WSBH_MM
    16790721U,	// XOR
    16790721U,	// XOR64
    285221388U,	// XORI_B
    16790721U,	// XOR_MM
    16791256U,	// XOR_V
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    553661113U,	// XORi
    553661113U,	// XORi64
    553661113U,	// XORi_MM
    1062081U,	// XorRxRxRy16
    0U
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    0U,	// ABSQ_S_PH
    0U,	// ABSQ_S_QB
    0U,	// ABSQ_S_W
    0U,	// ADD
    0U,	// ADDQH_PH
    0U,	// ADDQH_R_PH
    0U,	// ADDQH_R_W
    0U,	// ADDQH_W
    0U,	// ADDQ_PH
    0U,	// ADDQ_S_PH
    0U,	// ADDQ_S_W
    0U,	// ADDSC
    0U,	// ADDS_A_B
    0U,	// ADDS_A_D
    0U,	// ADDS_A_H
    0U,	// ADDS_A_W
    0U,	// ADDS_S_B
    0U,	// ADDS_S_D
    0U,	// ADDS_S_H
    0U,	// ADDS_S_W
    0U,	// ADDS_U_B
    0U,	// ADDS_U_D
    0U,	// ADDS_U_H
    0U,	// ADDS_U_W
    0U,	// ADDUH_QB
    0U,	// ADDUH_R_QB
    0U,	// ADDU_PH
    0U,	// ADDU_QB
    0U,	// ADDU_S_PH
    0U,	// ADDU_S_QB
    0U,	// ADDVI_B
    0U,	// ADDVI_D
    0U,	// ADDVI_H
    0U,	// ADDVI_W
    0U,	// ADDV_B
    0U,	// ADDV_D
    0U,	// ADDV_H
    0U,	// ADDV_W
    0U,	// ADDWC
    0U,	// ADD_A_B
    0U,	// ADD_A_D
    0U,	// ADD_A_H
    0U,	// ADD_A_W
    0U,	// ADD_MM
    0U,	// ADDi
    0U,	// ADDi_MM
    0U,	// ADDiu
    0U,	// ADDiu_MM
    0U,	// ADDu
    0U,	// ADDu_MM
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND
    0U,	// AND64
    0U,	// ANDI_B
    0U,	// AND_MM
    0U,	// AND_V
    0U,	// AND_V_D_PSEUDO
    0U,	// AND_V_H_PSEUDO
    0U,	// AND_V_W_PSEUDO
    0U,	// ANDi
    0U,	// ANDi64
    0U,	// ANDi_MM
    0U,	// APPEND
    0U,	// ASUB_S_B
    0U,	// ASUB_S_D
    0U,	// ASUB_S_H
    0U,	// ASUB_S_W
    0U,	// ASUB_U_B
    0U,	// ASUB_U_D
    0U,	// ASUB_U_H
    0U,	// ASUB_U_W
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// AVER_S_B
    0U,	// AVER_S_D
    0U,	// AVER_S_H
    0U,	// AVER_S_W
    0U,	// AVER_U_B
    0U,	// AVER_U_D
    0U,	// AVER_U_H
    0U,	// AVER_U_W
    0U,	// AVE_S_B
    0U,	// AVE_S_D
    0U,	// AVE_S_H
    0U,	// AVE_S_W
    0U,	// AVE_U_B
    0U,	// AVE_U_D
    0U,	// AVE_U_H
    0U,	// AVE_U_W
    0U,	// AddiuRxImmX16
    0U,	// AddiuRxPcImmX16
    0U,	// AddiuRxRxImm16
    0U,	// AddiuRxRxImmX16
    0U,	// AddiuRxRyOffMemX16
    0U,	// AddiuSpImm16
    0U,	// AddiuSpImmX16
    0U,	// AdduRxRyRz16
    0U,	// AndRxRxRy16
    0U,	// B
    0U,	// BALIGN
    0U,	// BAL_BR
    0U,	// BC1F
    0U,	// BC1T
    0U,	// BCLRI_B
    0U,	// BCLRI_D
    0U,	// BCLRI_H
    0U,	// BCLRI_W
    0U,	// BCLR_B
    0U,	// BCLR_D
    0U,	// BCLR_H
    0U,	// BCLR_W
    0U,	// BEQ
    0U,	// BEQ64
    0U,	// BEQ_MM
    0U,	// BGEZ
    0U,	// BGEZ64
    0U,	// BGEZAL
    0U,	// BGEZAL_MM
    0U,	// BGEZ_MM
    0U,	// BGTZ
    0U,	// BGTZ64
    0U,	// BGTZ_MM
    0U,	// BINSLI_B
    0U,	// BINSLI_D
    0U,	// BINSLI_H
    0U,	// BINSLI_W
    0U,	// BINSL_B
    0U,	// BINSL_D
    0U,	// BINSL_H
    0U,	// BINSL_W
    0U,	// BINSRI_B
    0U,	// BINSRI_D
    0U,	// BINSRI_H
    0U,	// BINSRI_W
    0U,	// BINSR_B
    0U,	// BINSR_D
    0U,	// BINSR_H
    0U,	// BINSR_W
    0U,	// BITREV
    0U,	// BLEZ
    0U,	// BLEZ64
    0U,	// BLEZ_MM
    0U,	// BLTZ
    0U,	// BLTZ64
    0U,	// BLTZAL
    0U,	// BLTZAL_MM
    0U,	// BLTZ_MM
    0U,	// BMNZI_B
    0U,	// BMNZ_V
    0U,	// BMZI_B
    0U,	// BMZ_V
    0U,	// BNE
    0U,	// BNE64
    0U,	// BNEGI_B
    0U,	// BNEGI_D
    0U,	// BNEGI_H
    0U,	// BNEGI_W
    0U,	// BNEG_B
    0U,	// BNEG_D
    0U,	// BNEG_H
    0U,	// BNEG_W
    0U,	// BNE_MM
    0U,	// BNZ_B
    0U,	// BNZ_D
    0U,	// BNZ_H
    0U,	// BNZ_V
    0U,	// BNZ_W
    0U,	// BPOSGE32
    0U,	// BPOSGE32_PSEUDO
    0U,	// BREAK
    0U,	// BSELI_B
    0U,	// BSEL_D_PSEUDO
    0U,	// BSEL_FD_PSEUDO
    0U,	// BSEL_FW_PSEUDO
    0U,	// BSEL_H_PSEUDO
    0U,	// BSEL_V
    0U,	// BSEL_W_PSEUDO
    0U,	// BSETI_B
    0U,	// BSETI_D
    0U,	// BSETI_H
    0U,	// BSETI_W
    0U,	// BSET_B
    0U,	// BSET_D
    0U,	// BSET_H
    0U,	// BSET_W
    0U,	// BZ_B
    0U,	// BZ_D
    0U,	// BZ_H
    0U,	// BZ_V
    0U,	// BZ_W
    0U,	// BeqzRxImm16
    0U,	// BeqzRxImmX16
    0U,	// Bimm16
    0U,	// BimmX16
    0U,	// BnezRxImm16
    0U,	// BnezRxImmX16
    0U,	// Break16
    0U,	// Bteqz16
    0U,	// BteqzT8CmpX16
    0U,	// BteqzT8CmpiX16
    0U,	// BteqzT8SltX16
    0U,	// BteqzT8SltiX16
    0U,	// BteqzT8SltiuX16
    0U,	// BteqzT8SltuX16
    0U,	// BteqzX16
    0U,	// Btnez16
    0U,	// BtnezT8CmpX16
    0U,	// BtnezT8CmpiX16
    0U,	// BtnezT8SltX16
    0U,	// BtnezT8SltiX16
    0U,	// BtnezT8SltiuX16
    0U,	// BtnezT8SltuX16
    0U,	// BtnezX16
    0U,	// BuildPairF64
    0U,	// BuildPairF64_64
    0U,	// CEIL_L_D64
    0U,	// CEIL_L_S
    0U,	// CEIL_W_D32
    0U,	// CEIL_W_D64
    0U,	// CEIL_W_S
    0U,	// CEQI_B
    0U,	// CEQI_D
    0U,	// CEQI_H
    0U,	// CEQI_W
    0U,	// CEQ_B
    0U,	// CEQ_D
    0U,	// CEQ_H
    0U,	// CEQ_W
    0U,	// CFC1
    0U,	// CFCMSA
    0U,	// CLEI_S_B
    0U,	// CLEI_S_D
    0U,	// CLEI_S_H
    0U,	// CLEI_S_W
    0U,	// CLEI_U_B
    0U,	// CLEI_U_D
    0U,	// CLEI_U_H
    0U,	// CLEI_U_W
    0U,	// CLE_S_B
    0U,	// CLE_S_D
    0U,	// CLE_S_H
    0U,	// CLE_S_W
    0U,	// CLE_U_B
    0U,	// CLE_U_D
    0U,	// CLE_U_H
    0U,	// CLE_U_W
    0U,	// CLO
    0U,	// CLO_MM
    0U,	// CLTI_S_B
    0U,	// CLTI_S_D
    0U,	// CLTI_S_H
    0U,	// CLTI_S_W
    0U,	// CLTI_U_B
    0U,	// CLTI_U_D
    0U,	// CLTI_U_H
    0U,	// CLTI_U_W
    0U,	// CLT_S_B
    0U,	// CLT_S_D
    0U,	// CLT_S_H
    0U,	// CLT_S_W
    0U,	// CLT_U_B
    0U,	// CLT_U_D
    0U,	// CLT_U_H
    0U,	// CLT_U_W
    0U,	// CLZ
    0U,	// CLZ_MM
    0U,	// CMPGDU_EQ_QB
    0U,	// CMPGDU_LE_QB
    0U,	// CMPGDU_LT_QB
    0U,	// CMPGU_EQ_QB
    0U,	// CMPGU_LE_QB
    0U,	// CMPGU_LT_QB
    0U,	// CMPU_EQ_QB
    0U,	// CMPU_LE_QB
    0U,	// CMPU_LT_QB
    0U,	// CMP_EQ_PH
    0U,	// CMP_LE_PH
    0U,	// CMP_LT_PH
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_FD_PSEUDO
    0U,	// COPY_FW_PSEUDO
    0U,	// COPY_S_B
    0U,	// COPY_S_H
    0U,	// COPY_S_W
    0U,	// COPY_U_B
    0U,	// COPY_U_H
    0U,	// COPY_U_W
    0U,	// CTC1
    0U,	// CTCMSA
    0U,	// CVT_D32_S
    0U,	// CVT_D32_W
    0U,	// CVT_D64_L
    0U,	// CVT_D64_S
    0U,	// CVT_D64_W
    0U,	// CVT_L_D64
    0U,	// CVT_L_S
    0U,	// CVT_S_D32
    0U,	// CVT_S_D64
    0U,	// CVT_S_L
    0U,	// CVT_S_W
    0U,	// CVT_W_D32
    0U,	// CVT_W_D64
    0U,	// CVT_W_S
    0U,	// C_EQ_D32
    0U,	// C_EQ_D64
    0U,	// C_EQ_S
    0U,	// C_F_D32
    0U,	// C_F_D64
    0U,	// C_F_S
    0U,	// C_LE_D32
    0U,	// C_LE_D64
    0U,	// C_LE_S
    0U,	// C_LT_D32
    0U,	// C_LT_D64
    0U,	// C_LT_S
    0U,	// C_NGE_D32
    0U,	// C_NGE_D64
    0U,	// C_NGE_S
    0U,	// C_NGLE_D32
    0U,	// C_NGLE_D64
    0U,	// C_NGLE_S
    0U,	// C_NGL_D32
    0U,	// C_NGL_D64
    0U,	// C_NGL_S
    0U,	// C_NGT_D32
    0U,	// C_NGT_D64
    0U,	// C_NGT_S
    0U,	// C_OLE_D32
    0U,	// C_OLE_D64
    0U,	// C_OLE_S
    0U,	// C_OLT_D32
    0U,	// C_OLT_D64
    0U,	// C_OLT_S
    0U,	// C_SEQ_D32
    0U,	// C_SEQ_D64
    0U,	// C_SEQ_S
    0U,	// C_SF_D32
    0U,	// C_SF_D64
    0U,	// C_SF_S
    0U,	// C_UEQ_D32
    0U,	// C_UEQ_D64
    0U,	// C_UEQ_S
    0U,	// C_ULE_D32
    0U,	// C_ULE_D64
    0U,	// C_ULE_S
    0U,	// C_ULT_D32
    0U,	// C_ULT_D64
    0U,	// C_ULT_S
    0U,	// C_UN_D32
    0U,	// C_UN_D64
    0U,	// C_UN_S
    0U,	// CmpRxRy16
    0U,	// CmpiRxImm16
    0U,	// CmpiRxImmX16
    0U,	// Constant32
    0U,	// DADD
    0U,	// DADDi
    0U,	// DADDiu
    0U,	// DADDu
    0U,	// DCLO
    0U,	// DCLZ
    0U,	// DERET
    1U,	// DEXT
    1U,	// DEXTM
    1U,	// DEXTU
    0U,	// DI
    1U,	// DINS
    1U,	// DINSM
    1U,	// DINSU
    0U,	// DIV_S_B
    0U,	// DIV_S_D
    0U,	// DIV_S_H
    0U,	// DIV_S_W
    0U,	// DIV_U_B
    0U,	// DIV_U_D
    0U,	// DIV_U_H
    0U,	// DIV_U_W
    0U,	// DMFC0
    0U,	// DMFC1
    0U,	// DMFC2
    0U,	// DMTC0
    0U,	// DMTC1
    0U,	// DMTC2
    0U,	// DMULT
    0U,	// DMULTu
    0U,	// DOTP_S_D
    0U,	// DOTP_S_H
    0U,	// DOTP_S_W
    0U,	// DOTP_U_D
    0U,	// DOTP_U_H
    0U,	// DOTP_U_W
    0U,	// DPADD_S_D
    0U,	// DPADD_S_H
    0U,	// DPADD_S_W
    0U,	// DPADD_U_D
    0U,	// DPADD_U_H
    0U,	// DPADD_U_W
    0U,	// DPAQX_SA_W_PH
    0U,	// DPAQX_S_W_PH
    0U,	// DPAQ_SA_L_W
    0U,	// DPAQ_S_W_PH
    0U,	// DPAU_H_QBL
    0U,	// DPAU_H_QBR
    0U,	// DPAX_W_PH
    0U,	// DPA_W_PH
    0U,	// DPSQX_SA_W_PH
    0U,	// DPSQX_S_W_PH
    0U,	// DPSQ_SA_L_W
    0U,	// DPSQ_S_W_PH
    0U,	// DPSUB_S_D
    0U,	// DPSUB_S_H
    0U,	// DPSUB_S_W
    0U,	// DPSUB_U_D
    0U,	// DPSUB_U_H
    0U,	// DPSUB_U_W
    0U,	// DPSU_H_QBL
    0U,	// DPSU_H_QBR
    0U,	// DPSX_W_PH
    0U,	// DPS_W_PH
    0U,	// DROTR
    0U,	// DROTR32
    0U,	// DROTRV
    0U,	// DSBH
    0U,	// DSDIV
    0U,	// DSHD
    0U,	// DSLL
    0U,	// DSLL32
    0U,	// DSLL64_32
    0U,	// DSLLV
    0U,	// DSRA
    0U,	// DSRA32
    0U,	// DSRAV
    0U,	// DSRL
    0U,	// DSRL32
    0U,	// DSRLV
    0U,	// DSUBu
    0U,	// DUDIV
    0U,	// DivRxRy16
    0U,	// DivuRxRy16
    0U,	// EI
    0U,	// ERET
    1U,	// EXT
    0U,	// EXTP
    0U,	// EXTPDP
    0U,	// EXTPDPV
    0U,	// EXTPV
    0U,	// EXTRV_RS_W
    0U,	// EXTRV_R_W
    0U,	// EXTRV_S_H
    0U,	// EXTRV_W
    0U,	// EXTR_RS_W
    0U,	// EXTR_R_W
    0U,	// EXTR_S_H
    0U,	// EXTR_W
    1U,	// EXT_MM
    0U,	// ExtractElementF64
    0U,	// ExtractElementF64_64
    0U,	// FABS_D
    0U,	// FABS_D32
    0U,	// FABS_D64
    0U,	// FABS_S
    0U,	// FABS_W
    0U,	// FADD_D
    0U,	// FADD_D32
    0U,	// FADD_D64
    0U,	// FADD_S
    0U,	// FADD_W
    0U,	// FCAF_D
    0U,	// FCAF_W
    0U,	// FCEQ_D
    0U,	// FCEQ_W
    0U,	// FCLASS_D
    0U,	// FCLASS_W
    0U,	// FCLE_D
    0U,	// FCLE_W
    0U,	// FCLT_D
    0U,	// FCLT_W
    0U,	// FCMP_D32
    0U,	// FCMP_D64
    0U,	// FCMP_S32
    0U,	// FCNE_D
    0U,	// FCNE_W
    0U,	// FCOR_D
    0U,	// FCOR_W
    0U,	// FCUEQ_D
    0U,	// FCUEQ_W
    0U,	// FCULE_D
    0U,	// FCULE_W
    0U,	// FCULT_D
    0U,	// FCULT_W
    0U,	// FCUNE_D
    0U,	// FCUNE_W
    0U,	// FCUN_D
    0U,	// FCUN_W
    0U,	// FDIV_D
    0U,	// FDIV_D32
    0U,	// FDIV_D64
    0U,	// FDIV_S
    0U,	// FDIV_W
    0U,	// FEXDO_H
    0U,	// FEXDO_W
    0U,	// FEXP2_D
    0U,	// FEXP2_D_1_PSEUDO
    0U,	// FEXP2_W
    0U,	// FEXP2_W_1_PSEUDO
    0U,	// FEXUPL_D
    0U,	// FEXUPL_W
    0U,	// FEXUPR_D
    0U,	// FEXUPR_W
    0U,	// FFINT_S_D
    0U,	// FFINT_S_W
    0U,	// FFINT_U_D
    0U,	// FFINT_U_W
    0U,	// FFQL_D
    0U,	// FFQL_W
    0U,	// FFQR_D
    0U,	// FFQR_W
    0U,	// FILL_B
    0U,	// FILL_FD_PSEUDO
    0U,	// FILL_FW_PSEUDO
    0U,	// FILL_H
    0U,	// FILL_W
    0U,	// FLOG2_D
    0U,	// FLOG2_W
    0U,	// FLOOR_L_D64
    0U,	// FLOOR_L_S
    0U,	// FLOOR_W_D32
    0U,	// FLOOR_W_D64
    0U,	// FLOOR_W_S
    0U,	// FMADD_D
    0U,	// FMADD_W
    0U,	// FMAX_A_D
    0U,	// FMAX_A_W
    0U,	// FMAX_D
    0U,	// FMAX_W
    0U,	// FMIN_A_D
    0U,	// FMIN_A_W
    0U,	// FMIN_D
    0U,	// FMIN_W
    0U,	// FMOV_D32
    0U,	// FMOV_D64
    0U,	// FMOV_S
    0U,	// FMSUB_D
    0U,	// FMSUB_W
    0U,	// FMUL_D
    0U,	// FMUL_D32
    0U,	// FMUL_D64
    0U,	// FMUL_S
    0U,	// FMUL_W
    0U,	// FNEG_D32
    0U,	// FNEG_D64
    0U,	// FNEG_S
    0U,	// FRCP_D
    0U,	// FRCP_W
    0U,	// FRINT_D
    0U,	// FRINT_W
    0U,	// FRSQRT_D
    0U,	// FRSQRT_W
    0U,	// FSAF_D
    0U,	// FSAF_W
    0U,	// FSEQ_D
    0U,	// FSEQ_W
    0U,	// FSLE_D
    0U,	// FSLE_W
    0U,	// FSLT_D
    0U,	// FSLT_W
    0U,	// FSNE_D
    0U,	// FSNE_W
    0U,	// FSOR_D
    0U,	// FSOR_W
    0U,	// FSQRT_D
    0U,	// FSQRT_D32
    0U,	// FSQRT_D64
    0U,	// FSQRT_S
    0U,	// FSQRT_W
    0U,	// FSUB_D
    0U,	// FSUB_D32
    0U,	// FSUB_D64
    0U,	// FSUB_S
    0U,	// FSUB_W
    0U,	// FSUEQ_D
    0U,	// FSUEQ_W
    0U,	// FSULE_D
    0U,	// FSULE_W
    0U,	// FSULT_D
    0U,	// FSULT_W
    0U,	// FSUNE_D
    0U,	// FSUNE_W
    0U,	// FSUN_D
    0U,	// FSUN_W
    0U,	// FTINT_S_D
    0U,	// FTINT_S_W
    0U,	// FTINT_U_D
    0U,	// FTINT_U_W
    0U,	// FTQ_H
    0U,	// FTQ_W
    0U,	// FTRUNC_S_D
    0U,	// FTRUNC_S_W
    0U,	// FTRUNC_U_D
    0U,	// FTRUNC_U_W
    0U,	// GotPrologue16
    0U,	// HADD_S_D
    0U,	// HADD_S_H
    0U,	// HADD_S_W
    0U,	// HADD_U_D
    0U,	// HADD_U_H
    0U,	// HADD_U_W
    0U,	// HSUB_S_D
    0U,	// HSUB_S_H
    0U,	// HSUB_S_W
    0U,	// HSUB_U_D
    0U,	// HSUB_U_H
    0U,	// HSUB_U_W
    0U,	// ILVEV_B
    0U,	// ILVEV_D
    0U,	// ILVEV_H
    0U,	// ILVEV_W
    0U,	// ILVL_B
    0U,	// ILVL_D
    0U,	// ILVL_H
    0U,	// ILVL_W
    0U,	// ILVOD_B
    0U,	// ILVOD_D
    0U,	// ILVOD_H
    0U,	// ILVOD_W
    0U,	// ILVR_B
    0U,	// ILVR_D
    0U,	// ILVR_H
    0U,	// ILVR_W
    1U,	// INS
    0U,	// INSERT_B
    0U,	// INSERT_FD_PSEUDO
    0U,	// INSERT_FW_PSEUDO
    0U,	// INSERT_H
    0U,	// INSERT_W
    0U,	// INSV
    0U,	// INSVE_B
    0U,	// INSVE_D
    0U,	// INSVE_H
    0U,	// INSVE_W
    1U,	// INS_MM
    0U,	// J
    0U,	// JAL
    0U,	// JALR
    0U,	// JALR64
    0U,	// JALR64Pseudo
    0U,	// JALRPseudo
    0U,	// JALR_MM
    0U,	// JAL_MM
    0U,	// JR
    0U,	// JR64
    0U,	// JR_MM
    0U,	// J_MM
    0U,	// Jal16
    0U,	// JrRa16
    0U,	// JrcRa16
    0U,	// JrcRx16
    0U,	// JumpLinkReg16
    0U,	// LB
    0U,	// LB64
    0U,	// LBUX
    0U,	// LB_MM
    0U,	// LBu
    0U,	// LBu64
    0U,	// LBu_MM
    0U,	// LD
    0U,	// LDC1
    0U,	// LDC164
    0U,	// LDC2
    0U,	// LDI_B
    0U,	// LDI_D
    0U,	// LDI_H
    0U,	// LDI_W
    0U,	// LDL
    0U,	// LDR
    0U,	// LDXC1
    0U,	// LDXC164
    0U,	// LD_B
    0U,	// LD_D
    0U,	// LD_H
    0U,	// LD_W
    0U,	// LEA_ADDiu
    0U,	// LEA_ADDiu64
    0U,	// LH
    0U,	// LH64
    0U,	// LHX
    0U,	// LH_MM
    0U,	// LHu
    0U,	// LHu64
    0U,	// LHu_MM
    0U,	// LL
    0U,	// LLD
    0U,	// LOAD_ACC128
    0U,	// LOAD_ACC64
    0U,	// LOAD_ACC64DSP
    0U,	// LOAD_CCOND_DSP
    3U,	// LSA
    0U,	// LUXC1
    0U,	// LUXC164
    0U,	// LUi
    0U,	// LUi64
    0U,	// LUi_MM
    0U,	// LW
    0U,	// LW64
    0U,	// LWC1
    0U,	// LWC2
    0U,	// LWL
    0U,	// LWL64
    0U,	// LWL_MM
    0U,	// LWR
    0U,	// LWR64
    0U,	// LWR_MM
    0U,	// LWX
    0U,	// LWXC1
    0U,	// LW_MM
    0U,	// LWu
    0U,	// LbRxRyOffMemX16
    0U,	// LbuRxRyOffMemX16
    0U,	// LhRxRyOffMemX16
    0U,	// LhuRxRyOffMemX16
    0U,	// LiRxImm16
    0U,	// LiRxImmAlignX16
    0U,	// LiRxImmX16
    0U,	// LoadAddr32Imm
    0U,	// LoadAddr32Reg
    0U,	// LoadImm32Reg
    0U,	// LwConstant32
    0U,	// LwRxPcTcp16
    0U,	// LwRxPcTcpX16
    0U,	// LwRxRyOffMemX16
    0U,	// LwRxSpImmX16
    0U,	// MADD
    0U,	// MADDR_Q_H
    0U,	// MADDR_Q_W
    0U,	// MADDU
    0U,	// MADDU_DSP
    0U,	// MADDU_MM
    0U,	// MADDV_B
    0U,	// MADDV_D
    0U,	// MADDV_H
    0U,	// MADDV_W
    1U,	// MADD_D32
    1U,	// MADD_D64
    0U,	// MADD_DSP
    0U,	// MADD_MM
    0U,	// MADD_Q_H
    0U,	// MADD_Q_W
    1U,	// MADD_S
    0U,	// MAQ_SA_W_PHL
    0U,	// MAQ_SA_W_PHR
    0U,	// MAQ_S_W_PHL
    0U,	// MAQ_S_W_PHR
    0U,	// MAXI_S_B
    0U,	// MAXI_S_D
    0U,	// MAXI_S_H
    0U,	// MAXI_S_W
    0U,	// MAXI_U_B
    0U,	// MAXI_U_D
    0U,	// MAXI_U_H
    0U,	// MAXI_U_W
    0U,	// MAX_A_B
    0U,	// MAX_A_D
    0U,	// MAX_A_H
    0U,	// MAX_A_W
    0U,	// MAX_S_B
    0U,	// MAX_S_D
    0U,	// MAX_S_H
    0U,	// MAX_S_W
    0U,	// MAX_U_B
    0U,	// MAX_U_D
    0U,	// MAX_U_H
    0U,	// MAX_U_W
    0U,	// MFC0
    0U,	// MFC1
    0U,	// MFC2
    0U,	// MFHC1
    0U,	// MFHI
    0U,	// MFHI64
    0U,	// MFHI_DSP
    0U,	// MFHI_MM
    0U,	// MFLO
    0U,	// MFLO64
    0U,	// MFLO_DSP
    0U,	// MFLO_MM
    0U,	// MINI_S_B
    0U,	// MINI_S_D
    0U,	// MINI_S_H
    0U,	// MINI_S_W
    0U,	// MINI_U_B
    0U,	// MINI_U_D
    0U,	// MINI_U_H
    0U,	// MINI_U_W
    0U,	// MIN_A_B
    0U,	// MIN_A_D
    0U,	// MIN_A_H
    0U,	// MIN_A_W
    0U,	// MIN_S_B
    0U,	// MIN_S_D
    0U,	// MIN_S_H
    0U,	// MIN_S_W
    0U,	// MIN_U_B
    0U,	// MIN_U_D
    0U,	// MIN_U_H
    0U,	// MIN_U_W
    0U,	// MIPSeh_return32
    0U,	// MIPSeh_return64
    0U,	// MODSUB
    0U,	// MOD_S_B
    0U,	// MOD_S_D
    0U,	// MOD_S_H
    0U,	// MOD_S_W
    0U,	// MOD_U_B
    0U,	// MOD_U_D
    0U,	// MOD_U_H
    0U,	// MOD_U_W
    0U,	// MOVE_V
    0U,	// MOVF_D32
    0U,	// MOVF_D64
    0U,	// MOVF_I
    0U,	// MOVF_I64
    0U,	// MOVF_I_MM
    0U,	// MOVF_S
    0U,	// MOVN_I64_D64
    0U,	// MOVN_I64_I
    0U,	// MOVN_I64_I64
    0U,	// MOVN_I64_S
    0U,	// MOVN_I_D32
    0U,	// MOVN_I_D64
    0U,	// MOVN_I_I
    0U,	// MOVN_I_I64
    0U,	// MOVN_I_MM
    0U,	// MOVN_I_S
    0U,	// MOVT_D32
    0U,	// MOVT_D64
    0U,	// MOVT_I
    0U,	// MOVT_I64
    0U,	// MOVT_I_MM
    0U,	// MOVT_S
    0U,	// MOVZ_I64_D64
    0U,	// MOVZ_I64_I
    0U,	// MOVZ_I64_I64
    0U,	// MOVZ_I64_S
    0U,	// MOVZ_I_D32
    0U,	// MOVZ_I_D64
    0U,	// MOVZ_I_I
    0U,	// MOVZ_I_I64
    0U,	// MOVZ_I_MM
    0U,	// MOVZ_I_S
    0U,	// MSUB
    0U,	// MSUBR_Q_H
    0U,	// MSUBR_Q_W
    0U,	// MSUBU
    0U,	// MSUBU_DSP
    0U,	// MSUBU_MM
    0U,	// MSUBV_B
    0U,	// MSUBV_D
    0U,	// MSUBV_H
    0U,	// MSUBV_W
    1U,	// MSUB_D32
    1U,	// MSUB_D64
    0U,	// MSUB_DSP
    0U,	// MSUB_MM
    0U,	// MSUB_Q_H
    0U,	// MSUB_Q_W
    1U,	// MSUB_S
    0U,	// MTC0
    0U,	// MTC1
    0U,	// MTC2
    0U,	// MTHC1
    0U,	// MTHI
    0U,	// MTHI64
    0U,	// MTHI_DSP
    0U,	// MTHI_MM
    0U,	// MTHLIP
    0U,	// MTLO
    0U,	// MTLO64
    0U,	// MTLO_DSP
    0U,	// MTLO_MM
    0U,	// MUL
    0U,	// MULEQ_S_W_PHL
    0U,	// MULEQ_S_W_PHR
    0U,	// MULEU_S_PH_QBL
    0U,	// MULEU_S_PH_QBR
    0U,	// MULQ_RS_PH
    0U,	// MULQ_RS_W
    0U,	// MULQ_S_PH
    0U,	// MULQ_S_W
    0U,	// MULR_Q_H
    0U,	// MULR_Q_W
    0U,	// MULSAQ_S_W_PH
    0U,	// MULSA_W_PH
    0U,	// MULT
    0U,	// MULTU_DSP
    0U,	// MULT_DSP
    0U,	// MULT_MM
    0U,	// MULTu
    0U,	// MULTu_MM
    0U,	// MULV_B
    0U,	// MULV_D
    0U,	// MULV_H
    0U,	// MULV_W
    0U,	// MUL_MM
    0U,	// MUL_PH
    0U,	// MUL_Q_H
    0U,	// MUL_Q_W
    0U,	// MUL_S_PH
    0U,	// Mfhi16
    0U,	// Mflo16
    0U,	// Move32R16
    0U,	// MoveR3216
    0U,	// MultRxRy16
    0U,	// MultRxRyRz16
    0U,	// MultuRxRy16
    0U,	// MultuRxRyRz16
    0U,	// NLOC_B
    0U,	// NLOC_D
    0U,	// NLOC_H
    0U,	// NLOC_W
    0U,	// NLZC_B
    0U,	// NLZC_D
    0U,	// NLZC_H
    0U,	// NLZC_W
    1U,	// NMADD_D32
    1U,	// NMADD_D64
    1U,	// NMADD_S
    1U,	// NMSUB_D32
    1U,	// NMSUB_D64
    1U,	// NMSUB_S
    0U,	// NOP
    0U,	// NOR
    0U,	// NOR64
    0U,	// NORI_B
    0U,	// NOR_MM
    0U,	// NOR_V
    0U,	// NOR_V_D_PSEUDO
    0U,	// NOR_V_H_PSEUDO
    0U,	// NOR_V_W_PSEUDO
    0U,	// NegRxRy16
    0U,	// NotRxRy16
    0U,	// OR
    0U,	// OR64
    0U,	// ORI_B
    0U,	// OR_MM
    0U,	// OR_V
    0U,	// OR_V_D_PSEUDO
    0U,	// OR_V_H_PSEUDO
    0U,	// OR_V_W_PSEUDO
    0U,	// ORi
    0U,	// ORi64
    0U,	// ORi_MM
    0U,	// OrRxRxRy16
    0U,	// PACKRL_PH
    0U,	// PCKEV_B
    0U,	// PCKEV_D
    0U,	// PCKEV_H
    0U,	// PCKEV_W
    0U,	// PCKOD_B
    0U,	// PCKOD_D
    0U,	// PCKOD_H
    0U,	// PCKOD_W
    0U,	// PCNT_B
    0U,	// PCNT_D
    0U,	// PCNT_H
    0U,	// PCNT_W
    0U,	// PICK_PH
    0U,	// PICK_QB
    0U,	// PRECEQU_PH_QBL
    0U,	// PRECEQU_PH_QBLA
    0U,	// PRECEQU_PH_QBR
    0U,	// PRECEQU_PH_QBRA
    0U,	// PRECEQ_W_PHL
    0U,	// PRECEQ_W_PHR
    0U,	// PRECEU_PH_QBL
    0U,	// PRECEU_PH_QBLA
    0U,	// PRECEU_PH_QBR
    0U,	// PRECEU_PH_QBRA
    0U,	// PRECRQU_S_QB_PH
    0U,	// PRECRQ_PH_W
    0U,	// PRECRQ_QB_PH
    0U,	// PRECRQ_RS_PH_W
    0U,	// PRECR_QB_PH
    0U,	// PRECR_SRA_PH_W
    0U,	// PRECR_SRA_R_PH_W
    0U,	// PREPEND
    0U,	// PseudoCMPU_EQ_QB
    0U,	// PseudoCMPU_LE_QB
    0U,	// PseudoCMPU_LT_QB
    0U,	// PseudoCMP_EQ_PH
    0U,	// PseudoCMP_LE_PH
    0U,	// PseudoCMP_LT_PH
    0U,	// PseudoCVT_D32_W
    0U,	// PseudoCVT_D64_L
    0U,	// PseudoCVT_D64_W
    0U,	// PseudoCVT_S_L
    0U,	// PseudoCVT_S_W
    0U,	// PseudoDMULT
    0U,	// PseudoDMULTu
    0U,	// PseudoDSDIV
    0U,	// PseudoDUDIV
    0U,	// PseudoMADD
    0U,	// PseudoMADDU
    0U,	// PseudoMFHI
    0U,	// PseudoMFHI64
    0U,	// PseudoMFLO
    0U,	// PseudoMFLO64
    0U,	// PseudoMSUB
    0U,	// PseudoMSUBU
    0U,	// PseudoMTLOHI
    0U,	// PseudoMTLOHI64
    0U,	// PseudoMTLOHI_DSP
    0U,	// PseudoMULT
    0U,	// PseudoMULTu
    0U,	// PseudoPICK_PH
    0U,	// PseudoPICK_QB
    0U,	// PseudoSDIV
    0U,	// PseudoUDIV
    0U,	// RADDU_W_QB
    0U,	// RDDSP
    0U,	// RDHWR
    0U,	// RDHWR64
    0U,	// REPLV_PH
    0U,	// REPLV_QB
    0U,	// REPL_PH
    0U,	// REPL_QB
    0U,	// RET
    0U,	// RET_MM
    0U,	// ROTR
    0U,	// ROTRV
    0U,	// ROTRV_MM
    0U,	// ROTR_MM
    0U,	// ROUND_L_D64
    0U,	// ROUND_L_S
    0U,	// ROUND_W_D32
    0U,	// ROUND_W_D64
    0U,	// ROUND_W_S
    0U,	// RestoreIncSpF16
    0U,	// RestoreRaF16
    0U,	// RetRA
    0U,	// RetRA16
    0U,	// SAT_S_B
    0U,	// SAT_S_D
    0U,	// SAT_S_H
    0U,	// SAT_S_W
    0U,	// SAT_U_B
    0U,	// SAT_U_D
    0U,	// SAT_U_H
    0U,	// SAT_U_W
    0U,	// SB
    0U,	// SB64
    0U,	// SB_MM
    0U,	// SC
    0U,	// SCD
    0U,	// SD
    0U,	// SDC1
    0U,	// SDC164
    0U,	// SDC2
    0U,	// SDIV
    0U,	// SDIV_MM
    0U,	// SDL
    0U,	// SDR
    0U,	// SDXC1
    0U,	// SDXC164
    0U,	// SEB
    0U,	// SEB64
    0U,	// SEB_MM
    0U,	// SEH
    0U,	// SEH64
    0U,	// SEH_MM
    0U,	// SH
    0U,	// SH64
    0U,	// SHF_B
    0U,	// SHF_H
    0U,	// SHF_W
    0U,	// SHILO
    0U,	// SHILOV
    0U,	// SHLLV_PH
    0U,	// SHLLV_QB
    0U,	// SHLLV_S_PH
    0U,	// SHLLV_S_W
    0U,	// SHLL_PH
    0U,	// SHLL_QB
    0U,	// SHLL_S_PH
    0U,	// SHLL_S_W
    0U,	// SHRAV_PH
    0U,	// SHRAV_QB
    0U,	// SHRAV_R_PH
    0U,	// SHRAV_R_QB
    0U,	// SHRAV_R_W
    0U,	// SHRA_PH
    0U,	// SHRA_QB
    0U,	// SHRA_R_PH
    0U,	// SHRA_R_QB
    0U,	// SHRA_R_W
    0U,	// SHRLV_PH
    0U,	// SHRLV_QB
    0U,	// SHRL_PH
    0U,	// SHRL_QB
    0U,	// SH_MM
    0U,	// SLDI_B
    0U,	// SLDI_D
    0U,	// SLDI_H
    0U,	// SLDI_W
    0U,	// SLD_B
    0U,	// SLD_D
    0U,	// SLD_H
    0U,	// SLD_W
    0U,	// SLL
    0U,	// SLL64_32
    0U,	// SLL64_64
    0U,	// SLLI_B
    0U,	// SLLI_D
    0U,	// SLLI_H
    0U,	// SLLI_W
    0U,	// SLLV
    0U,	// SLLV_MM
    0U,	// SLL_B
    0U,	// SLL_D
    0U,	// SLL_H
    0U,	// SLL_MM
    0U,	// SLL_W
    0U,	// SLT
    0U,	// SLT64
    0U,	// SLT_MM
    0U,	// SLTi
    0U,	// SLTi64
    0U,	// SLTi_MM
    0U,	// SLTiu
    0U,	// SLTiu64
    0U,	// SLTiu_MM
    0U,	// SLTu
    0U,	// SLTu64
    0U,	// SLTu_MM
    0U,	// SNZ_B_PSEUDO
    0U,	// SNZ_D_PSEUDO
    0U,	// SNZ_H_PSEUDO
    0U,	// SNZ_V_PSEUDO
    0U,	// SNZ_W_PSEUDO
    0U,	// SPLATI_B
    0U,	// SPLATI_D
    0U,	// SPLATI_H
    0U,	// SPLATI_W
    0U,	// SPLAT_B
    0U,	// SPLAT_D
    0U,	// SPLAT_H
    0U,	// SPLAT_W
    0U,	// SRA
    0U,	// SRAI_B
    0U,	// SRAI_D
    0U,	// SRAI_H
    0U,	// SRAI_W
    0U,	// SRARI_B
    0U,	// SRARI_D
    0U,	// SRARI_H
    0U,	// SRARI_W
    0U,	// SRAR_B
    0U,	// SRAR_D
    0U,	// SRAR_H
    0U,	// SRAR_W
    0U,	// SRAV
    0U,	// SRAV_MM
    0U,	// SRA_B
    0U,	// SRA_D
    0U,	// SRA_H
    0U,	// SRA_MM
    0U,	// SRA_W
    0U,	// SRL
    0U,	// SRLI_B
    0U,	// SRLI_D
    0U,	// SRLI_H
    0U,	// SRLI_W
    0U,	// SRLRI_B
    0U,	// SRLRI_D
    0U,	// SRLRI_H
    0U,	// SRLRI_W
    0U,	// SRLR_B
    0U,	// SRLR_D
    0U,	// SRLR_H
    0U,	// SRLR_W
    0U,	// SRLV
    0U,	// SRLV_MM
    0U,	// SRL_B
    0U,	// SRL_D
    0U,	// SRL_H
    0U,	// SRL_MM
    0U,	// SRL_W
    0U,	// STORE_ACC128
    0U,	// STORE_ACC64
    0U,	// STORE_ACC64DSP
    0U,	// STORE_CCOND_DSP
    0U,	// ST_B
    0U,	// ST_D
    0U,	// ST_H
    0U,	// ST_W
    0U,	// SUB
    0U,	// SUBQH_PH
    0U,	// SUBQH_R_PH
    0U,	// SUBQH_R_W
    0U,	// SUBQH_W
    0U,	// SUBQ_PH
    0U,	// SUBQ_S_PH
    0U,	// SUBQ_S_W
    0U,	// SUBSUS_U_B
    0U,	// SUBSUS_U_D
    0U,	// SUBSUS_U_H
    0U,	// SUBSUS_U_W
    0U,	// SUBSUU_S_B
    0U,	// SUBSUU_S_D
    0U,	// SUBSUU_S_H
    0U,	// SUBSUU_S_W
    0U,	// SUBS_S_B
    0U,	// SUBS_S_D
    0U,	// SUBS_S_H
    0U,	// SUBS_S_W
    0U,	// SUBS_U_B
    0U,	// SUBS_U_D
    0U,	// SUBS_U_H
    0U,	// SUBS_U_W
    0U,	// SUBUH_QB
    0U,	// SUBUH_R_QB
    0U,	// SUBU_PH
    0U,	// SUBU_QB
    0U,	// SUBU_S_PH
    0U,	// SUBU_S_QB
    0U,	// SUBVI_B
    0U,	// SUBVI_D
    0U,	// SUBVI_H
    0U,	// SUBVI_W
    0U,	// SUBV_B
    0U,	// SUBV_D
    0U,	// SUBV_H
    0U,	// SUBV_W
    0U,	// SUB_MM
    0U,	// SUBu
    0U,	// SUBu_MM
    0U,	// SUXC1
    0U,	// SUXC164
    0U,	// SW
    0U,	// SW64
    0U,	// SWC1
    0U,	// SWC2
    0U,	// SWL
    0U,	// SWL64
    0U,	// SWL_MM
    0U,	// SWR
    0U,	// SWR64
    0U,	// SWR_MM
    0U,	// SWXC1
    0U,	// SW_MM
    0U,	// SYNC
    0U,	// SYSCALL
    0U,	// SZ_B_PSEUDO
    0U,	// SZ_D_PSEUDO
    0U,	// SZ_H_PSEUDO
    0U,	// SZ_V_PSEUDO
    0U,	// SZ_W_PSEUDO
    0U,	// SaveDecSpF16
    0U,	// SaveRaF16
    0U,	// SbRxRyOffMemX16
    0U,	// SebRx16
    0U,	// SehRx16
    0U,	// SelBeqZ
    0U,	// SelBneZ
    0U,	// SelTBteqZCmp
    0U,	// SelTBteqZCmpi
    0U,	// SelTBteqZSlt
    0U,	// SelTBteqZSlti
    0U,	// SelTBteqZSltiu
    0U,	// SelTBteqZSltu
    0U,	// SelTBtneZCmp
    0U,	// SelTBtneZCmpi
    0U,	// SelTBtneZSlt
    0U,	// SelTBtneZSlti
    0U,	// SelTBtneZSltiu
    0U,	// SelTBtneZSltu
    0U,	// ShRxRyOffMemX16
    0U,	// SllX16
    0U,	// SllvRxRy16
    0U,	// SltCCRxRy16
    0U,	// SltRxRy16
    0U,	// SltiCCRxImmX16
    0U,	// SltiRxImm16
    0U,	// SltiRxImmX16
    0U,	// SltiuCCRxImmX16
    0U,	// SltiuRxImm16
    0U,	// SltiuRxImmX16
    0U,	// SltuCCRxRy16
    0U,	// SltuRxRy16
    0U,	// SltuRxRyRz16
    0U,	// SraX16
    0U,	// SravRxRy16
    0U,	// SrlX16
    0U,	// SrlvRxRy16
    0U,	// SubuRxRyRz16
    0U,	// SwRxRyOffMemX16
    0U,	// SwRxSpImmX16
    0U,	// TAILCALL
    0U,	// TAILCALL64_R
    0U,	// TAILCALL_MM
    0U,	// TAILCALL_R
    0U,	// TAILCALL_R_MM
    0U,	// TEQ
    0U,	// TEQI
    0U,	// TEQI_MM
    0U,	// TEQ_MM
    0U,	// TGE
    0U,	// TGEI
    0U,	// TGEIU
    0U,	// TGEIU_MM
    0U,	// TGEI_MM
    0U,	// TGEU
    0U,	// TGEU_MM
    0U,	// TGE_MM
    0U,	// TLT
    0U,	// TLTI
    0U,	// TLTIU_MM
    0U,	// TLTI_MM
    0U,	// TLTU
    0U,	// TLTU_MM
    0U,	// TLT_MM
    0U,	// TNE
    0U,	// TNEI
    0U,	// TNEI_MM
    0U,	// TNE_MM
    0U,	// TRAP
    0U,	// TRUNC_L_D64
    0U,	// TRUNC_L_S
    0U,	// TRUNC_W_D32
    0U,	// TRUNC_W_D64
    0U,	// TRUNC_W_S
    0U,	// TTLTIU
    0U,	// UDIV
    0U,	// UDIV_MM
    0U,	// VSHF_B
    0U,	// VSHF_D
    0U,	// VSHF_H
    0U,	// VSHF_W
    0U,	// WAIT
    0U,	// WRDSP
    0U,	// WSBH
    0U,	// WSBH_MM
    0U,	// XOR
    0U,	// XOR64
    0U,	// XORI_B
    0U,	// XOR_MM
    0U,	// XOR_V
    0U,	// XOR_V_D_PSEUDO
    0U,	// XOR_V_H_PSEUDO
    0U,	// XOR_V_W_PSEUDO
    0U,	// XORi
    0U,	// XORi64
    0U,	// XORi_MM
    0U,	// XorRxRxRy16
    0U
  };

  const char AsmStrs[] = {
  /* 0 */ 'j', 'a', 'l', 'r', 'c', 32, 9, 0,
  /* 8 */ 'd', 'm', 'f', 'c', '0', 9, 0,
  /* 15 */ 'd', 'm', 't', 'c', '0', 9, 0,
  /* 22 */ 'l', 'd', 'c', '1', 9, 0,
  /* 28 */ 's', 'd', 'c', '1', 9, 0,
  /* 34 */ 'c', 'f', 'c', '1', 9, 0,
  /* 40 */ 'd', 'm', 'f', 'c', '1', 9, 0,
  /* 47 */ 'm', 'f', 'h', 'c', '1', 9, 0,
  /* 54 */ 'm', 't', 'h', 'c', '1', 9, 0,
  /* 61 */ 'c', 't', 'c', '1', 9, 0,
  /* 67 */ 'd', 'm', 't', 'c', '1', 9, 0,
  /* 74 */ 'l', 'w', 'c', '1', 9, 0,
  /* 80 */ 's', 'w', 'c', '1', 9, 0,
  /* 86 */ 'l', 'd', 'x', 'c', '1', 9, 0,
  /* 93 */ 's', 'd', 'x', 'c', '1', 9, 0,
  /* 100 */ 'l', 'u', 'x', 'c', '1', 9, 0,
  /* 107 */ 's', 'u', 'x', 'c', '1', 9, 0,
  /* 114 */ 'l', 'w', 'x', 'c', '1', 9, 0,
  /* 121 */ 's', 'w', 'x', 'c', '1', 9, 0,
  /* 128 */ 'd', 's', 'r', 'a', '3', '2', 9, 0,
  /* 136 */ 'b', 'p', 'o', 's', 'g', 'e', '3', '2', 9, 0,
  /* 146 */ 'd', 's', 'l', 'l', '3', '2', 9, 0,
  /* 154 */ 'd', 's', 'r', 'l', '3', '2', 9, 0,
  /* 162 */ 'd', 'r', 'o', 't', 'r', '3', '2', 9, 0,
  /* 171 */ 'l', 'd', 'c', '2', 9, 0,
  /* 177 */ 's', 'd', 'c', '2', 9, 0,
  /* 183 */ 'd', 'm', 'f', 'c', '2', 9, 0,
  /* 190 */ 'd', 'm', 't', 'c', '2', 9, 0,
  /* 197 */ 'l', 'w', 'c', '2', 9, 0,
  /* 203 */ 's', 'w', 'c', '2', 9, 0,
  /* 209 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 'a', 9, 0,
  /* 225 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 'a', 9, 0,
  /* 242 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 'a', 9, 0,
  /* 258 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 'a', 9, 0,
  /* 275 */ 'd', 's', 'r', 'a', 9, 0,
  /* 281 */ 'l', 's', 'a', 9, 0,
  /* 286 */ 'c', 'f', 'c', 'm', 's', 'a', 9, 0,
  /* 294 */ 'c', 't', 'c', 'm', 's', 'a', 9, 0,
  /* 302 */ 'a', 'd', 'd', '_', 'a', '.', 'b', 9, 0,
  /* 311 */ 'm', 'i', 'n', '_', 'a', '.', 'b', 9, 0,
  /* 320 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'b', 9, 0,
  /* 330 */ 'm', 'a', 'x', '_', 'a', '.', 'b', 9, 0,
  /* 339 */ 's', 'r', 'a', '.', 'b', 9, 0,
  /* 346 */ 'n', 'l', 'o', 'c', '.', 'b', 9, 0,
  /* 354 */ 'n', 'l', 'z', 'c', '.', 'b', 9, 0,
  /* 362 */ 's', 'l', 'd', '.', 'b', 9, 0,
  /* 369 */ 'p', 'c', 'k', 'o', 'd', '.', 'b', 9, 0,
  /* 378 */ 'i', 'l', 'v', 'o', 'd', '.', 'b', 9, 0,
  /* 387 */ 'i', 'n', 's', 'v', 'e', '.', 'b', 9, 0,
  /* 396 */ 'v', 's', 'h', 'f', '.', 'b', 9, 0,
  /* 404 */ 'b', 'n', 'e', 'g', '.', 'b', 9, 0,
  /* 412 */ 's', 'r', 'a', 'i', '.', 'b', 9, 0,
  /* 420 */ 's', 'l', 'd', 'i', '.', 'b', 9, 0,
  /* 428 */ 'a', 'n', 'd', 'i', '.', 'b', 9, 0,
  /* 436 */ 'b', 'n', 'e', 'g', 'i', '.', 'b', 9, 0,
  /* 445 */ 'b', 's', 'e', 'l', 'i', '.', 'b', 9, 0,
  /* 454 */ 's', 'l', 'l', 'i', '.', 'b', 9, 0,
  /* 462 */ 's', 'r', 'l', 'i', '.', 'b', 9, 0,
  /* 470 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'b', 9, 0,
  /* 480 */ 'c', 'e', 'q', 'i', '.', 'b', 9, 0,
  /* 488 */ 's', 'r', 'a', 'r', 'i', '.', 'b', 9, 0,
  /* 497 */ 'b', 'c', 'l', 'r', 'i', '.', 'b', 9, 0,
  /* 506 */ 's', 'r', 'l', 'r', 'i', '.', 'b', 9, 0,
  /* 515 */ 'n', 'o', 'r', 'i', '.', 'b', 9, 0,
  /* 523 */ 'x', 'o', 'r', 'i', '.', 'b', 9, 0,
  /* 531 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'b', 9, 0,
  /* 541 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'b', 9, 0,
  /* 551 */ 'b', 's', 'e', 't', 'i', '.', 'b', 9, 0,
  /* 560 */ 's', 'u', 'b', 'v', 'i', '.', 'b', 9, 0,
  /* 569 */ 'a', 'd', 'd', 'v', 'i', '.', 'b', 9, 0,
  /* 578 */ 'b', 'm', 'z', 'i', '.', 'b', 9, 0,
  /* 586 */ 'b', 'm', 'n', 'z', 'i', '.', 'b', 9, 0,
  /* 595 */ 'f', 'i', 'l', 'l', '.', 'b', 9, 0,
  /* 603 */ 's', 'l', 'l', '.', 'b', 9, 0,
  /* 610 */ 's', 'r', 'l', '.', 'b', 9, 0,
  /* 617 */ 'b', 'i', 'n', 's', 'l', '.', 'b', 9, 0,
  /* 626 */ 'i', 'l', 'v', 'l', '.', 'b', 9, 0,
  /* 634 */ 'c', 'e', 'q', '.', 'b', 9, 0,
  /* 641 */ 's', 'r', 'a', 'r', '.', 'b', 9, 0,
  /* 649 */ 'b', 'c', 'l', 'r', '.', 'b', 9, 0,
  /* 657 */ 's', 'r', 'l', 'r', '.', 'b', 9, 0,
  /* 665 */ 'b', 'i', 'n', 's', 'r', '.', 'b', 9, 0,
  /* 674 */ 'i', 'l', 'v', 'r', '.', 'b', 9, 0,
  /* 682 */ 'a', 's', 'u', 'b', '_', 's', '.', 'b', 9, 0,
  /* 692 */ 'm', 'o', 'd', '_', 's', '.', 'b', 9, 0,
  /* 701 */ 'c', 'l', 'e', '_', 's', '.', 'b', 9, 0,
  /* 710 */ 'a', 'v', 'e', '_', 's', '.', 'b', 9, 0,
  /* 719 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'b', 9, 0,
  /* 729 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'b', 9, 0,
  /* 739 */ 'c', 'l', 't', 'i', '_', 's', '.', 'b', 9, 0,
  /* 749 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'b', 9, 0,
  /* 759 */ 'm', 'i', 'n', '_', 's', '.', 'b', 9, 0,
  /* 768 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'b', 9, 0,
  /* 778 */ 's', 'u', 'b', 's', '_', 's', '.', 'b', 9, 0,
  /* 788 */ 'a', 'd', 'd', 's', '_', 's', '.', 'b', 9, 0,
  /* 798 */ 's', 'a', 't', '_', 's', '.', 'b', 9, 0,
  /* 807 */ 'c', 'l', 't', '_', 's', '.', 'b', 9, 0,
  /* 816 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'b', 9, 0,
  /* 828 */ 'd', 'i', 'v', '_', 's', '.', 'b', 9, 0,
  /* 837 */ 'm', 'a', 'x', '_', 's', '.', 'b', 9, 0,
  /* 846 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'b', 9, 0,
  /* 856 */ 's', 'p', 'l', 'a', 't', '.', 'b', 9, 0,
  /* 865 */ 'b', 's', 'e', 't', '.', 'b', 9, 0,
  /* 873 */ 'p', 'c', 'n', 't', '.', 'b', 9, 0,
  /* 881 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'b', 9, 0,
  /* 891 */ 's', 't', '.', 'b', 9, 0,
  /* 897 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'b', 9, 0,
  /* 907 */ 'm', 'o', 'd', '_', 'u', '.', 'b', 9, 0,
  /* 916 */ 'c', 'l', 'e', '_', 'u', '.', 'b', 9, 0,
  /* 925 */ 'a', 'v', 'e', '_', 'u', '.', 'b', 9, 0,
  /* 934 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 944 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 954 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 964 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'b', 9, 0,
  /* 974 */ 'm', 'i', 'n', '_', 'u', '.', 'b', 9, 0,
  /* 983 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'b', 9, 0,
  /* 993 */ 's', 'u', 'b', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1003 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1013 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'b', 9, 0,
  /* 1025 */ 's', 'a', 't', '_', 'u', '.', 'b', 9, 0,
  /* 1034 */ 'c', 'l', 't', '_', 'u', '.', 'b', 9, 0,
  /* 1043 */ 'd', 'i', 'v', '_', 'u', '.', 'b', 9, 0,
  /* 1052 */ 'm', 'a', 'x', '_', 'u', '.', 'b', 9, 0,
  /* 1061 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'b', 9, 0,
  /* 1071 */ 'm', 's', 'u', 'b', 'v', '.', 'b', 9, 0,
  /* 1080 */ 'm', 'a', 'd', 'd', 'v', '.', 'b', 9, 0,
  /* 1089 */ 'p', 'c', 'k', 'e', 'v', '.', 'b', 9, 0,
  /* 1098 */ 'i', 'l', 'v', 'e', 'v', '.', 'b', 9, 0,
  /* 1107 */ 'm', 'u', 'l', 'v', '.', 'b', 9, 0,
  /* 1115 */ 'b', 'z', '.', 'b', 9, 0,
  /* 1121 */ 'b', 'n', 'z', '.', 'b', 9, 0,
  /* 1128 */ 's', 'e', 'b', 9, 0,
  /* 1133 */ 'l', 'b', 9, 0,
  /* 1137 */ 's', 'h', 'r', 'a', '.', 'q', 'b', 9, 0,
  /* 1146 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1160 */ 'c', 'm', 'p', 'g', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1173 */ 'c', 'm', 'p', 'u', '.', 'l', 'e', '.', 'q', 'b', 9, 0,
  /* 1185 */ 's', 'u', 'b', 'u', 'h', '.', 'q', 'b', 9, 0,
  /* 1195 */ 'a', 'd', 'd', 'u', 'h', '.', 'q', 'b', 9, 0,
  /* 1205 */ 'p', 'i', 'c', 'k', '.', 'q', 'b', 9, 0,
  /* 1214 */ 's', 'h', 'l', 'l', '.', 'q', 'b', 9, 0,
  /* 1223 */ 'r', 'e', 'p', 'l', '.', 'q', 'b', 9, 0,
  /* 1232 */ 's', 'h', 'r', 'l', '.', 'q', 'b', 9, 0,
  /* 1241 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1255 */ 'c', 'm', 'p', 'g', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1268 */ 'c', 'm', 'p', 'u', '.', 'e', 'q', '.', 'q', 'b', 9, 0,
  /* 1280 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1291 */ 's', 'u', 'b', 'u', 'h', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1303 */ 'a', 'd', 'd', 'u', 'h', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1315 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'q', 'b', 9, 0,
  /* 1327 */ 'a', 'b', 's', 'q', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1338 */ 's', 'u', 'b', 'u', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1349 */ 'a', 'd', 'd', 'u', '_', 's', '.', 'q', 'b', 9, 0,
  /* 1360 */ 'c', 'm', 'p', 'g', 'd', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1374 */ 'c', 'm', 'p', 'g', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1387 */ 'c', 'm', 'p', 'u', '.', 'l', 't', '.', 'q', 'b', 9, 0,
  /* 1399 */ 's', 'u', 'b', 'u', '.', 'q', 'b', 9, 0,
  /* 1408 */ 'a', 'd', 'd', 'u', '.', 'q', 'b', 9, 0,
  /* 1417 */ 's', 'h', 'r', 'a', 'v', '.', 'q', 'b', 9, 0,
  /* 1427 */ 's', 'h', 'l', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1437 */ 'r', 'e', 'p', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1447 */ 's', 'h', 'r', 'l', 'v', '.', 'q', 'b', 9, 0,
  /* 1457 */ 'r', 'a', 'd', 'd', 'u', '.', 'w', '.', 'q', 'b', 9, 0,
  /* 1469 */ 's', 'b', 9, 0,
  /* 1473 */ 'm', 'o', 'd', 's', 'u', 'b', 9, 0,
  /* 1481 */ 'm', 's', 'u', 'b', 9, 0,
  /* 1487 */ 'a', 'd', 'd', 's', 'c', 9, 0,
  /* 1494 */ 'a', 'd', 'd', 'w', 'c', 9, 0,
  /* 1501 */ 'f', 'l', 'o', 'g', '2', '.', 'd', 9, 0,
  /* 1510 */ 'f', 'e', 'x', 'p', '2', '.', 'd', 9, 0,
  /* 1519 */ 'a', 'd', 'd', '_', 'a', '.', 'd', 9, 0,
  /* 1528 */ 'f', 'm', 'i', 'n', '_', 'a', '.', 'd', 9, 0,
  /* 1538 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'd', 9, 0,
  /* 1548 */ 'f', 'm', 'a', 'x', '_', 'a', '.', 'd', 9, 0,
  /* 1558 */ 's', 'r', 'a', '.', 'd', 9, 0,
  /* 1565 */ 'f', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1573 */ 'f', 'm', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1582 */ 'n', 'm', 's', 'u', 'b', '.', 'd', 9, 0,
  /* 1591 */ 'n', 'l', 'o', 'c', '.', 'd', 9, 0,
  /* 1599 */ 'n', 'l', 'z', 'c', '.', 'd', 9, 0,
  /* 1607 */ 'f', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1615 */ 'f', 'm', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1624 */ 'n', 'm', 'a', 'd', 'd', '.', 'd', 9, 0,
  /* 1633 */ 's', 'l', 'd', '.', 'd', 9, 0,
  /* 1640 */ 'p', 'c', 'k', 'o', 'd', '.', 'd', 9, 0,
  /* 1649 */ 'i', 'l', 'v', 'o', 'd', '.', 'd', 9, 0,
  /* 1658 */ 'c', '.', 'n', 'g', 'e', '.', 'd', 9, 0,
  /* 1667 */ 'c', '.', 'l', 'e', '.', 'd', 9, 0,
  /* 1675 */ 'f', 'c', 'l', 'e', '.', 'd', 9, 0,
  /* 1683 */ 'c', '.', 'n', 'g', 'l', 'e', '.', 'd', 9, 0,
  /* 1693 */ 'c', '.', 'o', 'l', 'e', '.', 'd', 9, 0,
  /* 1702 */ 'f', 's', 'l', 'e', '.', 'd', 9, 0,
  /* 1710 */ 'c', '.', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1719 */ 'f', 'c', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1728 */ 'f', 's', 'u', 'l', 'e', '.', 'd', 9, 0,
  /* 1737 */ 'f', 'c', 'n', 'e', '.', 'd', 9, 0,
  /* 1745 */ 'f', 's', 'n', 'e', '.', 'd', 9, 0,
  /* 1753 */ 'f', 'c', 'u', 'n', 'e', '.', 'd', 9, 0,
  /* 1762 */ 'f', 's', 'u', 'n', 'e', '.', 'd', 9, 0,
  /* 1771 */ 'i', 'n', 's', 'v', 'e', '.', 'd', 9, 0,
  /* 1780 */ 'c', '.', 'f', '.', 'd', 9, 0,
  /* 1787 */ 'f', 'c', 'a', 'f', '.', 'd', 9, 0,
  /* 1795 */ 'f', 's', 'a', 'f', '.', 'd', 9, 0,
  /* 1803 */ 'v', 's', 'h', 'f', '.', 'd', 9, 0,
  /* 1811 */ 'c', '.', 's', 'f', '.', 'd', 9, 0,
  /* 1819 */ 'm', 'o', 'v', 'f', '.', 'd', 9, 0,
  /* 1827 */ 'b', 'n', 'e', 'g', '.', 'd', 9, 0,
  /* 1835 */ 's', 'r', 'a', 'i', '.', 'd', 9, 0,
  /* 1843 */ 's', 'l', 'd', 'i', '.', 'd', 9, 0,
  /* 1851 */ 'b', 'n', 'e', 'g', 'i', '.', 'd', 9, 0,
  /* 1860 */ 's', 'l', 'l', 'i', '.', 'd', 9, 0,
  /* 1868 */ 's', 'r', 'l', 'i', '.', 'd', 9, 0,
  /* 1876 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'd', 9, 0,
  /* 1886 */ 'c', 'e', 'q', 'i', '.', 'd', 9, 0,
  /* 1894 */ 's', 'r', 'a', 'r', 'i', '.', 'd', 9, 0,
  /* 1903 */ 'b', 'c', 'l', 'r', 'i', '.', 'd', 9, 0,
  /* 1912 */ 's', 'r', 'l', 'r', 'i', '.', 'd', 9, 0,
  /* 1921 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'd', 9, 0,
  /* 1931 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'd', 9, 0,
  /* 1941 */ 'b', 's', 'e', 't', 'i', '.', 'd', 9, 0,
  /* 1950 */ 's', 'u', 'b', 'v', 'i', '.', 'd', 9, 0,
  /* 1959 */ 'a', 'd', 'd', 'v', 'i', '.', 'd', 9, 0,
  /* 1968 */ 't', 'r', 'u', 'n', 'c', '.', 'l', '.', 'd', 9, 0,
  /* 1979 */ 'r', 'o', 'u', 'n', 'd', '.', 'l', '.', 'd', 9, 0,
  /* 1990 */ 'c', 'e', 'i', 'l', '.', 'l', '.', 'd', 9, 0,
  /* 2000 */ 'f', 'l', 'o', 'o', 'r', '.', 'l', '.', 'd', 9, 0,
  /* 2011 */ 'c', 'v', 't', '.', 'l', '.', 'd', 9, 0,
  /* 2020 */ 'c', '.', 'n', 'g', 'l', '.', 'd', 9, 0,
  /* 2029 */ 's', 'l', 'l', '.', 'd', 9, 0,
  /* 2036 */ 'f', 'e', 'x', 'u', 'p', 'l', '.', 'd', 9, 0,
  /* 2046 */ 'f', 'f', 'q', 'l', '.', 'd', 9, 0,
  /* 2054 */ 's', 'r', 'l', '.', 'd', 9, 0,
  /* 2061 */ 'b', 'i', 'n', 's', 'l', '.', 'd', 9, 0,
  /* 2070 */ 'f', 'm', 'u', 'l', '.', 'd', 9, 0,
  /* 2078 */ 'i', 'l', 'v', 'l', '.', 'd', 9, 0,
  /* 2086 */ 'f', 'm', 'i', 'n', '.', 'd', 9, 0,
  /* 2094 */ 'c', '.', 'u', 'n', '.', 'd', 9, 0,
  /* 2102 */ 'f', 'c', 'u', 'n', '.', 'd', 9, 0,
  /* 2110 */ 'f', 's', 'u', 'n', '.', 'd', 9, 0,
  /* 2118 */ 'm', 'o', 'v', 'n', '.', 'd', 9, 0,
  /* 2126 */ 'f', 'r', 'c', 'p', '.', 'd', 9, 0,
  /* 2134 */ 'c', '.', 'e', 'q', '.', 'd', 9, 0,
  /* 2142 */ 'f', 'c', 'e', 'q', '.', 'd', 9, 0,
  /* 2150 */ 'c', '.', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 2159 */ 'f', 's', 'e', 'q', '.', 'd', 9, 0,
  /* 2167 */ 'c', '.', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2176 */ 'f', 'c', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2185 */ 'f', 's', 'u', 'e', 'q', '.', 'd', 9, 0,
  /* 2194 */ 's', 'r', 'a', 'r', '.', 'd', 9, 0,
  /* 2202 */ 'b', 'c', 'l', 'r', '.', 'd', 9, 0,
  /* 2210 */ 's', 'r', 'l', 'r', '.', 'd', 9, 0,
  /* 2218 */ 'f', 'c', 'o', 'r', '.', 'd', 9, 0,
  /* 2226 */ 'f', 's', 'o', 'r', '.', 'd', 9, 0,
  /* 2234 */ 'f', 'e', 'x', 'u', 'p', 'r', '.', 'd', 9, 0,
  /* 2244 */ 'f', 'f', 'q', 'r', '.', 'd', 9, 0,
  /* 2252 */ 'b', 'i', 'n', 's', 'r', '.', 'd', 9, 0,
  /* 2261 */ 'i', 'l', 'v', 'r', '.', 'd', 9, 0,
  /* 2269 */ 'c', 'v', 't', '.', 's', '.', 'd', 9, 0,
  /* 2278 */ 'a', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2288 */ 'h', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2298 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'd', 9, 0,
  /* 2309 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 's', '.', 'd', 9, 0,
  /* 2321 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2331 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2342 */ 'm', 'o', 'd', '_', 's', '.', 'd', 9, 0,
  /* 2351 */ 'c', 'l', 'e', '_', 's', '.', 'd', 9, 0,
  /* 2360 */ 'a', 'v', 'e', '_', 's', '.', 'd', 9, 0,
  /* 2369 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2379 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2389 */ 'c', 'l', 't', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2399 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'd', 9, 0,
  /* 2409 */ 'm', 'i', 'n', '_', 's', '.', 'd', 9, 0,
  /* 2418 */ 'd', 'o', 't', 'p', '_', 's', '.', 'd', 9, 0,
  /* 2428 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'd', 9, 0,
  /* 2438 */ 's', 'u', 'b', 's', '_', 's', '.', 'd', 9, 0,
  /* 2448 */ 'a', 'd', 'd', 's', '_', 's', '.', 'd', 9, 0,
  /* 2458 */ 's', 'a', 't', '_', 's', '.', 'd', 9, 0,
  /* 2467 */ 'c', 'l', 't', '_', 's', '.', 'd', 9, 0,
  /* 2476 */ 'f', 'f', 'i', 'n', 't', '_', 's', '.', 'd', 9, 0,
  /* 2487 */ 'f', 't', 'i', 'n', 't', '_', 's', '.', 'd', 9, 0,
  /* 2498 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'd', 9, 0,
  /* 2510 */ 'd', 'i', 'v', '_', 's', '.', 'd', 9, 0,
  /* 2519 */ 'm', 'a', 'x', '_', 's', '.', 'd', 9, 0,
  /* 2528 */ 'a', 'b', 's', '.', 'd', 9, 0,
  /* 2535 */ 'f', 'c', 'l', 'a', 's', 's', '.', 'd', 9, 0,
  /* 2545 */ 's', 'p', 'l', 'a', 't', '.', 'd', 9, 0,
  /* 2554 */ 'b', 's', 'e', 't', '.', 'd', 9, 0,
  /* 2562 */ 'c', '.', 'n', 'g', 't', '.', 'd', 9, 0,
  /* 2571 */ 'c', '.', 'l', 't', '.', 'd', 9, 0,
  /* 2579 */ 'f', 'c', 'l', 't', '.', 'd', 9, 0,
  /* 2587 */ 'c', '.', 'o', 'l', 't', '.', 'd', 9, 0,
  /* 2596 */ 'f', 's', 'l', 't', '.', 'd', 9, 0,
  /* 2604 */ 'c', '.', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2613 */ 'f', 'c', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2622 */ 'f', 's', 'u', 'l', 't', '.', 'd', 9, 0,
  /* 2631 */ 'p', 'c', 'n', 't', '.', 'd', 9, 0,
  /* 2639 */ 'f', 'r', 'i', 'n', 't', '.', 'd', 9, 0,
  /* 2648 */ 'f', 's', 'q', 'r', 't', '.', 'd', 9, 0,
  /* 2657 */ 'f', 'r', 's', 'q', 'r', 't', '.', 'd', 9, 0,
  /* 2667 */ 's', 't', '.', 'd', 9, 0,
  /* 2673 */ 'm', 'o', 'v', 't', '.', 'd', 9, 0,
  /* 2681 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2691 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2701 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'd', 9, 0,
  /* 2712 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 'u', '.', 'd', 9, 0,
  /* 2724 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2734 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2745 */ 'm', 'o', 'd', '_', 'u', '.', 'd', 9, 0,
  /* 2754 */ 'c', 'l', 'e', '_', 'u', '.', 'd', 9, 0,
  /* 2763 */ 'a', 'v', 'e', '_', 'u', '.', 'd', 9, 0,
  /* 2772 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2782 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2792 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2802 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'd', 9, 0,
  /* 2812 */ 'm', 'i', 'n', '_', 'u', '.', 'd', 9, 0,
  /* 2821 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'd', 9, 0,
  /* 2831 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'd', 9, 0,
  /* 2841 */ 's', 'u', 'b', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2851 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2861 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'd', 9, 0,
  /* 2873 */ 's', 'a', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2882 */ 'c', 'l', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2891 */ 'f', 'f', 'i', 'n', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2902 */ 'f', 't', 'i', 'n', 't', '_', 'u', '.', 'd', 9, 0,
  /* 2913 */ 'd', 'i', 'v', '_', 'u', '.', 'd', 9, 0,
  /* 2922 */ 'm', 'a', 'x', '_', 'u', '.', 'd', 9, 0,
  /* 2931 */ 'm', 's', 'u', 'b', 'v', '.', 'd', 9, 0,
  /* 2940 */ 'm', 'a', 'd', 'd', 'v', '.', 'd', 9, 0,
  /* 2949 */ 'p', 'c', 'k', 'e', 'v', '.', 'd', 9, 0,
  /* 2958 */ 'i', 'l', 'v', 'e', 'v', '.', 'd', 9, 0,
  /* 2967 */ 'f', 'd', 'i', 'v', '.', 'd', 9, 0,
  /* 2975 */ 'm', 'u', 'l', 'v', '.', 'd', 9, 0,
  /* 2983 */ 'm', 'o', 'v', '.', 'd', 9, 0,
  /* 2990 */ 't', 'r', 'u', 'n', 'c', '.', 'w', '.', 'd', 9, 0,
  /* 3001 */ 'r', 'o', 'u', 'n', 'd', '.', 'w', '.', 'd', 9, 0,
  /* 3012 */ 'c', 'e', 'i', 'l', '.', 'w', '.', 'd', 9, 0,
  /* 3022 */ 'f', 'l', 'o', 'o', 'r', '.', 'w', '.', 'd', 9, 0,
  /* 3033 */ 'c', 'v', 't', '.', 'w', '.', 'd', 9, 0,
  /* 3042 */ 'f', 'm', 'a', 'x', '.', 'd', 9, 0,
  /* 3050 */ 'b', 'z', '.', 'd', 9, 0,
  /* 3056 */ 'b', 'n', 'z', '.', 'd', 9, 0,
  /* 3063 */ 'm', 'o', 'v', 'z', '.', 'd', 9, 0,
  /* 3071 */ 's', 'c', 'd', 9, 0,
  /* 3076 */ 'd', 'a', 'd', 'd', 9, 0,
  /* 3082 */ 'm', 'a', 'd', 'd', 9, 0,
  /* 3088 */ 'd', 's', 'h', 'd', 9, 0,
  /* 3094 */ 'l', 'l', 'd', 9, 0,
  /* 3099 */ 'a', 'n', 'd', 9, 0,
  /* 3104 */ 'p', 'r', 'e', 'p', 'e', 'n', 'd', 9, 0,
  /* 3113 */ 'a', 'p', 'p', 'e', 'n', 'd', 9, 0,
  /* 3121 */ 's', 'd', 9, 0,
  /* 3125 */ 't', 'g', 'e', 9, 0,
  /* 3130 */ 'b', 'n', 'e', 9, 0,
  /* 3135 */ 't', 'n', 'e', 9, 0,
  /* 3140 */ 'r', 'e', 's', 't', 'o', 'r', 'e', 9, 0,
  /* 3149 */ 's', 'a', 'v', 'e', 9, 0,
  /* 3155 */ 'm', 'o', 'v', 'e', 9, 0,
  /* 3161 */ 'b', 'c', '1', 'f', 9, 0,
  /* 3167 */ 'm', 'o', 'v', 'f', 9, 0,
  /* 3173 */ 'n', 'e', 'g', 9, 0,
  /* 3178 */ 'a', 'd', 'd', '_', 'a', '.', 'h', 9, 0,
  /* 3187 */ 'm', 'i', 'n', '_', 'a', '.', 'h', 9, 0,
  /* 3196 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'h', 9, 0,
  /* 3206 */ 'm', 'a', 'x', '_', 'a', '.', 'h', 9, 0,
  /* 3215 */ 's', 'r', 'a', '.', 'h', 9, 0,
  /* 3222 */ 'n', 'l', 'o', 'c', '.', 'h', 9, 0,
  /* 3230 */ 'n', 'l', 'z', 'c', '.', 'h', 9, 0,
  /* 3238 */ 's', 'l', 'd', '.', 'h', 9, 0,
  /* 3245 */ 'p', 'c', 'k', 'o', 'd', '.', 'h', 9, 0,
  /* 3254 */ 'i', 'l', 'v', 'o', 'd', '.', 'h', 9, 0,
  /* 3263 */ 'i', 'n', 's', 'v', 'e', '.', 'h', 9, 0,
  /* 3272 */ 'v', 's', 'h', 'f', '.', 'h', 9, 0,
  /* 3280 */ 'b', 'n', 'e', 'g', '.', 'h', 9, 0,
  /* 3288 */ 's', 'r', 'a', 'i', '.', 'h', 9, 0,
  /* 3296 */ 's', 'l', 'd', 'i', '.', 'h', 9, 0,
  /* 3304 */ 'b', 'n', 'e', 'g', 'i', '.', 'h', 9, 0,
  /* 3313 */ 's', 'l', 'l', 'i', '.', 'h', 9, 0,
  /* 3321 */ 's', 'r', 'l', 'i', '.', 'h', 9, 0,
  /* 3329 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'h', 9, 0,
  /* 3339 */ 'c', 'e', 'q', 'i', '.', 'h', 9, 0,
  /* 3347 */ 's', 'r', 'a', 'r', 'i', '.', 'h', 9, 0,
  /* 3356 */ 'b', 'c', 'l', 'r', 'i', '.', 'h', 9, 0,
  /* 3365 */ 's', 'r', 'l', 'r', 'i', '.', 'h', 9, 0,
  /* 3374 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'h', 9, 0,
  /* 3384 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'h', 9, 0,
  /* 3394 */ 'b', 's', 'e', 't', 'i', '.', 'h', 9, 0,
  /* 3403 */ 's', 'u', 'b', 'v', 'i', '.', 'h', 9, 0,
  /* 3412 */ 'a', 'd', 'd', 'v', 'i', '.', 'h', 9, 0,
  /* 3421 */ 'f', 'i', 'l', 'l', '.', 'h', 9, 0,
  /* 3429 */ 's', 'l', 'l', '.', 'h', 9, 0,
  /* 3436 */ 's', 'r', 'l', '.', 'h', 9, 0,
  /* 3443 */ 'b', 'i', 'n', 's', 'l', '.', 'h', 9, 0,
  /* 3452 */ 'i', 'l', 'v', 'l', '.', 'h', 9, 0,
  /* 3460 */ 'f', 'e', 'x', 'd', 'o', '.', 'h', 9, 0,
  /* 3469 */ 'm', 's', 'u', 'b', '_', 'q', '.', 'h', 9, 0,
  /* 3479 */ 'm', 'a', 'd', 'd', '_', 'q', '.', 'h', 9, 0,
  /* 3489 */ 'm', 'u', 'l', '_', 'q', '.', 'h', 9, 0,
  /* 3498 */ 'm', 's', 'u', 'b', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3509 */ 'm', 'a', 'd', 'd', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3520 */ 'm', 'u', 'l', 'r', '_', 'q', '.', 'h', 9, 0,
  /* 3530 */ 'c', 'e', 'q', '.', 'h', 9, 0,
  /* 3537 */ 'f', 't', 'q', '.', 'h', 9, 0,
  /* 3544 */ 's', 'r', 'a', 'r', '.', 'h', 9, 0,
  /* 3552 */ 'b', 'c', 'l', 'r', '.', 'h', 9, 0,
  /* 3560 */ 's', 'r', 'l', 'r', '.', 'h', 9, 0,
  /* 3568 */ 'b', 'i', 'n', 's', 'r', '.', 'h', 9, 0,
  /* 3577 */ 'i', 'l', 'v', 'r', '.', 'h', 9, 0,
  /* 3585 */ 'a', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3595 */ 'h', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3605 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'h', 9, 0,
  /* 3616 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3626 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3637 */ 'm', 'o', 'd', '_', 's', '.', 'h', 9, 0,
  /* 3646 */ 'c', 'l', 'e', '_', 's', '.', 'h', 9, 0,
  /* 3655 */ 'a', 'v', 'e', '_', 's', '.', 'h', 9, 0,
  /* 3664 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3674 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3684 */ 'c', 'l', 't', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3694 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'h', 9, 0,
  /* 3704 */ 'm', 'i', 'n', '_', 's', '.', 'h', 9, 0,
  /* 3713 */ 'd', 'o', 't', 'p', '_', 's', '.', 'h', 9, 0,
  /* 3723 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'h', 9, 0,
  /* 3733 */ 'e', 'x', 't', 'r', '_', 's', '.', 'h', 9, 0,
  /* 3743 */ 's', 'u', 'b', 's', '_', 's', '.', 'h', 9, 0,
  /* 3753 */ 'a', 'd', 'd', 's', '_', 's', '.', 'h', 9, 0,
  /* 3763 */ 's', 'a', 't', '_', 's', '.', 'h', 9, 0,
  /* 3772 */ 'c', 'l', 't', '_', 's', '.', 'h', 9, 0,
  /* 3781 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'h', 9, 0,
  /* 3793 */ 'd', 'i', 'v', '_', 's', '.', 'h', 9, 0,
  /* 3802 */ 'e', 'x', 't', 'r', 'v', '_', 's', '.', 'h', 9, 0,
  /* 3813 */ 'm', 'a', 'x', '_', 's', '.', 'h', 9, 0,
  /* 3822 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'h', 9, 0,
  /* 3832 */ 's', 'p', 'l', 'a', 't', '.', 'h', 9, 0,
  /* 3841 */ 'b', 's', 'e', 't', '.', 'h', 9, 0,
  /* 3849 */ 'p', 'c', 'n', 't', '.', 'h', 9, 0,
  /* 3857 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'h', 9, 0,
  /* 3867 */ 's', 't', '.', 'h', 9, 0,
  /* 3873 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3883 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3893 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'h', 9, 0,
  /* 3904 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3914 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3925 */ 'm', 'o', 'd', '_', 'u', '.', 'h', 9, 0,
  /* 3934 */ 'c', 'l', 'e', '_', 'u', '.', 'h', 9, 0,
  /* 3943 */ 'a', 'v', 'e', '_', 'u', '.', 'h', 9, 0,
  /* 3952 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3962 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3972 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3982 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'h', 9, 0,
  /* 3992 */ 'm', 'i', 'n', '_', 'u', '.', 'h', 9, 0,
  /* 4001 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'h', 9, 0,
  /* 4011 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'h', 9, 0,
  /* 4021 */ 's', 'u', 'b', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4031 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4041 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'h', 9, 0,
  /* 4053 */ 's', 'a', 't', '_', 'u', '.', 'h', 9, 0,
  /* 4062 */ 'c', 'l', 't', '_', 'u', '.', 'h', 9, 0,
  /* 4071 */ 'd', 'i', 'v', '_', 'u', '.', 'h', 9, 0,
  /* 4080 */ 'm', 'a', 'x', '_', 'u', '.', 'h', 9, 0,
  /* 4089 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'h', 9, 0,
  /* 4099 */ 'm', 's', 'u', 'b', 'v', '.', 'h', 9, 0,
  /* 4108 */ 'm', 'a', 'd', 'd', 'v', '.', 'h', 9, 0,
  /* 4117 */ 'p', 'c', 'k', 'e', 'v', '.', 'h', 9, 0,
  /* 4126 */ 'i', 'l', 'v', 'e', 'v', '.', 'h', 9, 0,
  /* 4135 */ 'm', 'u', 'l', 'v', '.', 'h', 9, 0,
  /* 4143 */ 'b', 'z', '.', 'h', 9, 0,
  /* 4149 */ 'b', 'n', 'z', '.', 'h', 9, 0,
  /* 4156 */ 'd', 's', 'b', 'h', 9, 0,
  /* 4162 */ 'w', 's', 'b', 'h', 9, 0,
  /* 4168 */ 's', 'e', 'h', 9, 0,
  /* 4173 */ 'l', 'h', 9, 0,
  /* 4177 */ 's', 'h', 'r', 'a', '.', 'p', 'h', 9, 0,
  /* 4186 */ 'p', 'r', 'e', 'c', 'r', 'q', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4200 */ 'p', 'r', 'e', 'c', 'r', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4213 */ 'p', 'r', 'e', 'c', 'r', 'q', 'u', '_', 's', '.', 'q', 'b', '.', 'p', 'h', 9, 0,
  /* 4230 */ 'c', 'm', 'p', '.', 'l', 'e', '.', 'p', 'h', 9, 0,
  /* 4241 */ 's', 'u', 'b', 'q', 'h', '.', 'p', 'h', 9, 0,
  /* 4251 */ 'a', 'd', 'd', 'q', 'h', '.', 'p', 'h', 9, 0,
  /* 4261 */ 'p', 'i', 'c', 'k', '.', 'p', 'h', 9, 0,
  /* 4270 */ 's', 'h', 'l', 'l', '.', 'p', 'h', 9, 0,
  /* 4279 */ 'r', 'e', 'p', 'l', '.', 'p', 'h', 9, 0,
  /* 4288 */ 's', 'h', 'r', 'l', '.', 'p', 'h', 9, 0,
  /* 4297 */ 'p', 'a', 'c', 'k', 'r', 'l', '.', 'p', 'h', 9, 0,
  /* 4308 */ 'm', 'u', 'l', '.', 'p', 'h', 9, 0,
  /* 4316 */ 's', 'u', 'b', 'q', '.', 'p', 'h', 9, 0,
  /* 4325 */ 'a', 'd', 'd', 'q', '.', 'p', 'h', 9, 0,
  /* 4334 */ 'c', 'm', 'p', '.', 'e', 'q', '.', 'p', 'h', 9, 0,
  /* 4345 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4356 */ 's', 'u', 'b', 'q', 'h', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4368 */ 'a', 'd', 'd', 'q', 'h', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4380 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'p', 'h', 9, 0,
  /* 4392 */ 's', 'h', 'l', 'l', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4403 */ 'm', 'u', 'l', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4413 */ 's', 'u', 'b', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4424 */ 'a', 'd', 'd', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4435 */ 'm', 'u', 'l', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4446 */ 'a', 'b', 's', 'q', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4457 */ 's', 'u', 'b', 'u', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4468 */ 'a', 'd', 'd', 'u', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4479 */ 's', 'h', 'l', 'l', 'v', '_', 's', '.', 'p', 'h', 9, 0,
  /* 4491 */ 'm', 'u', 'l', 'q', '_', 'r', 's', '.', 'p', 'h', 9, 0,
  /* 4503 */ 'c', 'm', 'p', '.', 'l', 't', '.', 'p', 'h', 9, 0,
  /* 4514 */ 's', 'u', 'b', 'u', '.', 'p', 'h', 9, 0,
  /* 4523 */ 'a', 'd', 'd', 'u', '.', 'p', 'h', 9, 0,
  /* 4532 */ 's', 'h', 'r', 'a', 'v', '.', 'p', 'h', 9, 0,
  /* 4542 */ 's', 'h', 'l', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4552 */ 'r', 'e', 'p', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4562 */ 's', 'h', 'r', 'l', 'v', '.', 'p', 'h', 9, 0,
  /* 4572 */ 'd', 'p', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4582 */ 'd', 'p', 'a', 'q', 'x', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4597 */ 'd', 'p', 's', 'q', 'x', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4612 */ 'm', 'u', 'l', 's', 'a', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4624 */ 'd', 'p', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4637 */ 'm', 'u', 'l', 's', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4652 */ 'd', 'p', 's', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4665 */ 'd', 'p', 'a', 'q', 'x', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4679 */ 'd', 'p', 's', 'q', 'x', '_', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4693 */ 'd', 'p', 's', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4703 */ 'd', 'p', 'a', 'x', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4714 */ 'd', 'p', 's', 'x', '.', 'w', '.', 'p', 'h', 9, 0,
  /* 4725 */ 's', 'h', 9, 0,
  /* 4729 */ 'd', 'a', 'd', 'd', 'i', 9, 0,
  /* 4736 */ 'a', 'n', 'd', 'i', 9, 0,
  /* 4742 */ 't', 'g', 'e', 'i', 9, 0,
  /* 4748 */ 't', 'n', 'e', 'i', 9, 0,
  /* 4754 */ 'm', 'f', 'h', 'i', 9, 0,
  /* 4760 */ 'm', 't', 'h', 'i', 9, 0,
  /* 4766 */ '.', 'a', 'l', 'i', 'g', 'n', 32, '2', 10, 9, 'l', 'i', 9, 0,
  /* 4780 */ 'c', 'm', 'p', 'i', 9, 0,
  /* 4786 */ 't', 'e', 'q', 'i', 9, 0,
  /* 4792 */ 'x', 'o', 'r', 'i', 9, 0,
  /* 4798 */ 's', 'l', 't', 'i', 9, 0,
  /* 4804 */ 't', 'l', 't', 'i', 9, 0,
  /* 4810 */ 'l', 'u', 'i', 9, 0,
  /* 4815 */ 'j', 9, 0,
  /* 4818 */ 'b', 'r', 'e', 'a', 'k', 9, 0,
  /* 4825 */ 'c', 'v', 't', '.', 'd', '.', 'l', 9, 0,
  /* 4834 */ 'c', 'v', 't', '.', 's', '.', 'l', 9, 0,
  /* 4843 */ 'j', 'a', 'l', 9, 0,
  /* 4848 */ 'b', 'g', 'e', 'z', 'a', 'l', 9, 0,
  /* 4856 */ 'b', 'l', 't', 'z', 'a', 'l', 9, 0,
  /* 4864 */ 'd', 'p', 'a', 'u', '.', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4876 */ 'd', 'p', 's', 'u', '.', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4888 */ 'm', 'u', 'l', 'e', 'u', '_', 's', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4904 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4919 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'l', 9, 0,
  /* 4935 */ 'l', 'd', 'l', 9, 0,
  /* 4940 */ 's', 'd', 'l', 9, 0,
  /* 4945 */ 'm', 'a', 'q', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4959 */ 'p', 'r', 'e', 'c', 'e', 'q', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4973 */ 'm', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 4986 */ 'm', 'u', 'l', 'e', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'l', 9, 0,
  /* 5001 */ 's', 'y', 's', 'c', 'a', 'l', 'l', 9, 0,
  /* 5010 */ 'd', 's', 'l', 'l', 9, 0,
  /* 5016 */ 'd', 's', 'r', 'l', 9, 0,
  /* 5022 */ 'm', 'u', 'l', 9, 0,
  /* 5027 */ 'l', 'w', 'l', 9, 0,
  /* 5032 */ 's', 'w', 'l', 9, 0,
  /* 5037 */ 'b', 'a', 'l', 'i', 'g', 'n', 9, 0,
  /* 5045 */ 'm', 'o', 'v', 'n', 9, 0,
  /* 5051 */ 'd', 'c', 'l', 'o', 9, 0,
  /* 5057 */ 'm', 'f', 'l', 'o', 9, 0,
  /* 5063 */ 's', 'h', 'i', 'l', 'o', 9, 0,
  /* 5070 */ 'm', 't', 'l', 'o', 9, 0,
  /* 5076 */ 'e', 'x', 't', 'p', 'd', 'p', 9, 0,
  /* 5084 */ 'm', 't', 'h', 'l', 'i', 'p', 9, 0,
  /* 5092 */ 'c', 'm', 'p', 9, 0,
  /* 5097 */ 'l', 'o', 'a', 'd', '_', 'c', 'c', 'o', 'n', 'd', '_', 'd', 's', 'p', 9, 0,
  /* 5113 */ 's', 't', 'o', 'r', 'e', '_', 'c', 'c', 'o', 'n', 'd', '_', 'd', 's', 'p', 9, 0,
  /* 5130 */ 'r', 'd', 'd', 's', 'p', 9, 0,
  /* 5137 */ 'w', 'r', 'd', 's', 'p', 9, 0,
  /* 5144 */ 'e', 'x', 't', 'p', 9, 0,
  /* 5150 */ 'b', 'e', 'q', 9, 0,
  /* 5155 */ 't', 'e', 'q', 9, 0,
  /* 5160 */ 'd', 'p', 'a', 'u', '.', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5172 */ 'd', 'p', 's', 'u', '.', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5184 */ 'm', 'u', 'l', 'e', 'u', '_', 's', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5200 */ 'p', 'r', 'e', 'c', 'e', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5215 */ 'p', 'r', 'e', 'c', 'e', 'q', 'u', '.', 'p', 'h', '.', 'q', 'b', 'r', 9, 0,
  /* 5231 */ 'l', 'd', 'r', 9, 0,
  /* 5236 */ 's', 'd', 'r', 9, 0,
  /* 5241 */ 'm', 'a', 'q', '_', 's', 'a', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5255 */ 'p', 'r', 'e', 'c', 'e', 'q', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5269 */ 'm', 'a', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5282 */ 'm', 'u', 'l', 'e', 'q', '_', 's', '.', 'w', '.', 'p', 'h', 'r', 9, 0,
  /* 5297 */ 'j', 'r', 9, 0,
  /* 5301 */ 'j', 'a', 'l', 'r', 9, 0,
  /* 5307 */ 'n', 'o', 'r', 9, 0,
  /* 5312 */ 'x', 'o', 'r', 9, 0,
  /* 5317 */ 'd', 'r', 'o', 't', 'r', 9, 0,
  /* 5324 */ 'r', 'd', 'h', 'w', 'r', 9, 0,
  /* 5331 */ 'l', 'w', 'r', 9, 0,
  /* 5336 */ 's', 'w', 'r', 9, 0,
  /* 5341 */ 'n', 'm', 's', 'u', 'b', '.', 's', 9, 0,
  /* 5350 */ 'c', 'v', 't', '.', 'd', '.', 's', 9, 0,
  /* 5359 */ 'n', 'm', 'a', 'd', 'd', '.', 's', 9, 0,
  /* 5368 */ 'c', '.', 'n', 'g', 'e', '.', 's', 9, 0,
  /* 5377 */ 'c', '.', 'l', 'e', '.', 's', 9, 0,
  /* 5385 */ 'c', '.', 'n', 'g', 'l', 'e', '.', 's', 9, 0,
  /* 5395 */ 'c', '.', 'o', 'l', 'e', '.', 's', 9, 0,
  /* 5404 */ 'c', '.', 'u', 'l', 'e', '.', 's', 9, 0,
  /* 5413 */ 'c', '.', 'f', '.', 's', 9, 0,
  /* 5420 */ 'c', '.', 's', 'f', '.', 's', 9, 0,
  /* 5428 */ 'm', 'o', 'v', 'f', '.', 's', 9, 0,
  /* 5436 */ 'n', 'e', 'g', '.', 's', 9, 0,
  /* 5443 */ 't', 'r', 'u', 'n', 'c', '.', 'l', '.', 's', 9, 0,
  /* 5454 */ 'r', 'o', 'u', 'n', 'd', '.', 'l', '.', 's', 9, 0,
  /* 5465 */ 'c', 'e', 'i', 'l', '.', 'l', '.', 's', 9, 0,
  /* 5475 */ 'f', 'l', 'o', 'o', 'r', '.', 'l', '.', 's', 9, 0,
  /* 5486 */ 'c', 'v', 't', '.', 'l', '.', 's', 9, 0,
  /* 5495 */ 'c', '.', 'n', 'g', 'l', '.', 's', 9, 0,
  /* 5504 */ 'm', 'u', 'l', '.', 's', 9, 0,
  /* 5511 */ 'c', '.', 'u', 'n', '.', 's', 9, 0,
  /* 5519 */ 'm', 'o', 'v', 'n', '.', 's', 9, 0,
  /* 5527 */ 'c', '.', 'e', 'q', '.', 's', 9, 0,
  /* 5535 */ 'c', '.', 's', 'e', 'q', '.', 's', 9, 0,
  /* 5544 */ 'c', '.', 'u', 'e', 'q', '.', 's', 9, 0,
  /* 5553 */ 'a', 'b', 's', '.', 's', 9, 0,
  /* 5560 */ 'c', '.', 'n', 'g', 't', '.', 's', 9, 0,
  /* 5569 */ 'c', '.', 'l', 't', '.', 's', 9, 0,
  /* 5577 */ 'c', '.', 'o', 'l', 't', '.', 's', 9, 0,
  /* 5586 */ 'c', '.', 'u', 'l', 't', '.', 's', 9, 0,
  /* 5595 */ 's', 'q', 'r', 't', '.', 's', 9, 0,
  /* 5603 */ 'm', 'o', 'v', 't', '.', 's', 9, 0,
  /* 5611 */ 'd', 'i', 'v', '.', 's', 9, 0,
  /* 5618 */ 'm', 'o', 'v', '.', 's', 9, 0,
  /* 5625 */ 't', 'r', 'u', 'n', 'c', '.', 'w', '.', 's', 9, 0,
  /* 5636 */ 'r', 'o', 'u', 'n', 'd', '.', 'w', '.', 's', 9, 0,
  /* 5647 */ 'c', 'e', 'i', 'l', '.', 'w', '.', 's', 9, 0,
  /* 5657 */ 'f', 'l', 'o', 'o', 'r', '.', 'w', '.', 's', 9, 0,
  /* 5668 */ 'c', 'v', 't', '.', 'w', '.', 's', 9, 0,
  /* 5677 */ 'm', 'o', 'v', 'z', '.', 's', 9, 0,
  /* 5685 */ 'b', 'c', '1', 't', 9, 0,
  /* 5691 */ 's', 'l', 't', 9, 0,
  /* 5696 */ 't', 'l', 't', 9, 0,
  /* 5701 */ 'd', 'm', 'u', 'l', 't', 9, 0,
  /* 5708 */ 'n', 'o', 't', 9, 0,
  /* 5713 */ 'm', 'o', 'v', 't', 9, 0,
  /* 5719 */ 'l', 'b', 'u', 9, 0,
  /* 5724 */ 'd', 's', 'u', 'b', 'u', 9, 0,
  /* 5731 */ 'm', 's', 'u', 'b', 'u', 9, 0,
  /* 5738 */ 'd', 'a', 'd', 'd', 'u', 9, 0,
  /* 5745 */ 'm', 'a', 'd', 'd', 'u', 9, 0,
  /* 5752 */ 't', 'g', 'e', 'u', 9, 0,
  /* 5758 */ 'l', 'h', 'u', 9, 0,
  /* 5763 */ 'd', 'a', 'd', 'd', 'i', 'u', 9, 0,
  /* 5771 */ 't', 'g', 'e', 'i', 'u', 9, 0,
  /* 5778 */ 's', 'l', 't', 'i', 'u', 9, 0,
  /* 5785 */ 't', 'l', 't', 'i', 'u', 9, 0,
  /* 5792 */ 's', 'l', 't', 'u', 9, 0,
  /* 5798 */ 't', 'l', 't', 'u', 9, 0,
  /* 5804 */ 'd', 'm', 'u', 'l', 't', 'u', 9, 0,
  /* 5812 */ 'l', 'w', 'u', 9, 0,
  /* 5817 */ 'a', 'n', 'd', '.', 'v', 9, 0,
  /* 5824 */ 'm', 'o', 'v', 'e', '.', 'v', 9, 0,
  /* 5832 */ 'b', 's', 'e', 'l', '.', 'v', 9, 0,
  /* 5840 */ 'n', 'o', 'r', '.', 'v', 9, 0,
  /* 5847 */ 'x', 'o', 'r', '.', 'v', 9, 0,
  /* 5854 */ 'b', 'z', '.', 'v', 9, 0,
  /* 5860 */ 'b', 'm', 'z', '.', 'v', 9, 0,
  /* 5867 */ 'b', 'n', 'z', '.', 'v', 9, 0,
  /* 5874 */ 'b', 'm', 'n', 'z', '.', 'v', 9, 0,
  /* 5882 */ 'd', 's', 'r', 'a', 'v', 9, 0,
  /* 5889 */ 'b', 'i', 't', 'r', 'e', 'v', 9, 0,
  /* 5897 */ 'd', 's', 'l', 'l', 'v', 9, 0,
  /* 5904 */ 'd', 's', 'r', 'l', 'v', 9, 0,
  /* 5911 */ 's', 'h', 'i', 'l', 'o', 'v', 9, 0,
  /* 5919 */ 'e', 'x', 't', 'p', 'd', 'p', 'v', 9, 0,
  /* 5928 */ 'e', 'x', 't', 'p', 'v', 9, 0,
  /* 5935 */ 'd', 'r', 'o', 't', 'r', 'v', 9, 0,
  /* 5943 */ 'i', 'n', 's', 'v', 9, 0,
  /* 5949 */ 'f', 'l', 'o', 'g', '2', '.', 'w', 9, 0,
  /* 5958 */ 'f', 'e', 'x', 'p', '2', '.', 'w', 9, 0,
  /* 5967 */ 'a', 'd', 'd', '_', 'a', '.', 'w', 9, 0,
  /* 5976 */ 'f', 'm', 'i', 'n', '_', 'a', '.', 'w', 9, 0,
  /* 5986 */ 'a', 'd', 'd', 's', '_', 'a', '.', 'w', 9, 0,
  /* 5996 */ 'f', 'm', 'a', 'x', '_', 'a', '.', 'w', 9, 0,
  /* 6006 */ 's', 'r', 'a', '.', 'w', 9, 0,
  /* 6013 */ 'f', 's', 'u', 'b', '.', 'w', 9, 0,
  /* 6021 */ 'f', 'm', 's', 'u', 'b', '.', 'w', 9, 0,
  /* 6030 */ 'n', 'l', 'o', 'c', '.', 'w', 9, 0,
  /* 6038 */ 'n', 'l', 'z', 'c', '.', 'w', 9, 0,
  /* 6046 */ 'c', 'v', 't', '.', 'd', '.', 'w', 9, 0,
  /* 6055 */ 'f', 'a', 'd', 'd', '.', 'w', 9, 0,
  /* 6063 */ 'f', 'm', 'a', 'd', 'd', '.', 'w', 9, 0,
  /* 6072 */ 's', 'l', 'd', '.', 'w', 9, 0,
  /* 6079 */ 'p', 'c', 'k', 'o', 'd', '.', 'w', 9, 0,
  /* 6088 */ 'i', 'l', 'v', 'o', 'd', '.', 'w', 9, 0,
  /* 6097 */ 'f', 'c', 'l', 'e', '.', 'w', 9, 0,
  /* 6105 */ 'f', 's', 'l', 'e', '.', 'w', 9, 0,
  /* 6113 */ 'f', 'c', 'u', 'l', 'e', '.', 'w', 9, 0,
  /* 6122 */ 'f', 's', 'u', 'l', 'e', '.', 'w', 9, 0,
  /* 6131 */ 'f', 'c', 'n', 'e', '.', 'w', 9, 0,
  /* 6139 */ 'f', 's', 'n', 'e', '.', 'w', 9, 0,
  /* 6147 */ 'f', 'c', 'u', 'n', 'e', '.', 'w', 9, 0,
  /* 6156 */ 'f', 's', 'u', 'n', 'e', '.', 'w', 9, 0,
  /* 6165 */ 'i', 'n', 's', 'v', 'e', '.', 'w', 9, 0,
  /* 6174 */ 'f', 'c', 'a', 'f', '.', 'w', 9, 0,
  /* 6182 */ 'f', 's', 'a', 'f', '.', 'w', 9, 0,
  /* 6190 */ 'v', 's', 'h', 'f', '.', 'w', 9, 0,
  /* 6198 */ 'b', 'n', 'e', 'g', '.', 'w', 9, 0,
  /* 6206 */ 'p', 'r', 'e', 'c', 'r', '_', 's', 'r', 'a', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6222 */ 'p', 'r', 'e', 'c', 'r', 'q', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6235 */ 'p', 'r', 'e', 'c', 'r', '_', 's', 'r', 'a', '_', 'r', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6253 */ 'p', 'r', 'e', 'c', 'r', 'q', '_', 'r', 's', '.', 'p', 'h', '.', 'w', 9, 0,
  /* 6269 */ 's', 'u', 'b', 'q', 'h', '.', 'w', 9, 0,
  /* 6278 */ 'a', 'd', 'd', 'q', 'h', '.', 'w', 9, 0,
  /* 6287 */ 's', 'r', 'a', 'i', '.', 'w', 9, 0,
  /* 6295 */ 's', 'l', 'd', 'i', '.', 'w', 9, 0,
  /* 6303 */ 'b', 'n', 'e', 'g', 'i', '.', 'w', 9, 0,
  /* 6312 */ 's', 'l', 'l', 'i', '.', 'w', 9, 0,
  /* 6320 */ 's', 'r', 'l', 'i', '.', 'w', 9, 0,
  /* 6328 */ 'b', 'i', 'n', 's', 'l', 'i', '.', 'w', 9, 0,
  /* 6338 */ 'c', 'e', 'q', 'i', '.', 'w', 9, 0,
  /* 6346 */ 's', 'r', 'a', 'r', 'i', '.', 'w', 9, 0,
  /* 6355 */ 'b', 'c', 'l', 'r', 'i', '.', 'w', 9, 0,
  /* 6364 */ 's', 'r', 'l', 'r', 'i', '.', 'w', 9, 0,
  /* 6373 */ 'b', 'i', 'n', 's', 'r', 'i', '.', 'w', 9, 0,
  /* 6383 */ 's', 'p', 'l', 'a', 't', 'i', '.', 'w', 9, 0,
  /* 6393 */ 'b', 's', 'e', 't', 'i', '.', 'w', 9, 0,
  /* 6402 */ 's', 'u', 'b', 'v', 'i', '.', 'w', 9, 0,
  /* 6411 */ 'a', 'd', 'd', 'v', 'i', '.', 'w', 9, 0,
  /* 6420 */ 'd', 'p', 'a', 'q', '_', 's', 'a', '.', 'l', '.', 'w', 9, 0,
  /* 6433 */ 'd', 'p', 's', 'q', '_', 's', 'a', '.', 'l', '.', 'w', 9, 0,
  /* 6446 */ 'f', 'i', 'l', 'l', '.', 'w', 9, 0,
  /* 6454 */ 's', 'l', 'l', '.', 'w', 9, 0,
  /* 6461 */ 'f', 'e', 'x', 'u', 'p', 'l', '.', 'w', 9, 0,
  /* 6471 */ 'f', 'f', 'q', 'l', '.', 'w', 9, 0,
  /* 6479 */ 's', 'r', 'l', '.', 'w', 9, 0,
  /* 6486 */ 'b', 'i', 'n', 's', 'l', '.', 'w', 9, 0,
  /* 6495 */ 'f', 'm', 'u', 'l', '.', 'w', 9, 0,
  /* 6503 */ 'i', 'l', 'v', 'l', '.', 'w', 9, 0,
  /* 6511 */ 'f', 'm', 'i', 'n', '.', 'w', 9, 0,
  /* 6519 */ 'f', 'c', 'u', 'n', '.', 'w', 9, 0,
  /* 6527 */ 'f', 's', 'u', 'n', '.', 'w', 9, 0,
  /* 6535 */ 'f', 'e', 'x', 'd', 'o', '.', 'w', 9, 0,
  /* 6544 */ 'f', 'r', 'c', 'p', '.', 'w', 9, 0,
  /* 6552 */ 'm', 's', 'u', 'b', '_', 'q', '.', 'w', 9, 0,
  /* 6562 */ 'm', 'a', 'd', 'd', '_', 'q', '.', 'w', 9, 0,
  /* 6572 */ 'm', 'u', 'l', '_', 'q', '.', 'w', 9, 0,
  /* 6581 */ 'm', 's', 'u', 'b', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6592 */ 'm', 'a', 'd', 'd', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6603 */ 'm', 'u', 'l', 'r', '_', 'q', '.', 'w', 9, 0,
  /* 6613 */ 'f', 'c', 'e', 'q', '.', 'w', 9, 0,
  /* 6621 */ 'f', 's', 'e', 'q', '.', 'w', 9, 0,
  /* 6629 */ 'f', 'c', 'u', 'e', 'q', '.', 'w', 9, 0,
  /* 6638 */ 'f', 's', 'u', 'e', 'q', '.', 'w', 9, 0,
  /* 6647 */ 'f', 't', 'q', '.', 'w', 9, 0,
  /* 6654 */ 's', 'h', 'r', 'a', '_', 'r', '.', 'w', 9, 0,
  /* 6664 */ 's', 'u', 'b', 'q', 'h', '_', 'r', '.', 'w', 9, 0,
  /* 6675 */ 'a', 'd', 'd', 'q', 'h', '_', 'r', '.', 'w', 9, 0,
  /* 6686 */ 'e', 'x', 't', 'r', '_', 'r', '.', 'w', 9, 0,
  /* 6696 */ 's', 'h', 'r', 'a', 'v', '_', 'r', '.', 'w', 9, 0,
  /* 6707 */ 'e', 'x', 't', 'r', 'v', '_', 'r', '.', 'w', 9, 0,
  /* 6718 */ 's', 'r', 'a', 'r', '.', 'w', 9, 0,
  /* 6726 */ 'b', 'c', 'l', 'r', '.', 'w', 9, 0,
  /* 6734 */ 's', 'r', 'l', 'r', '.', 'w', 9, 0,
  /* 6742 */ 'f', 'c', 'o', 'r', '.', 'w', 9, 0,
  /* 6750 */ 'f', 's', 'o', 'r', '.', 'w', 9, 0,
  /* 6758 */ 'f', 'e', 'x', 'u', 'p', 'r', '.', 'w', 9, 0,
  /* 6768 */ 'f', 'f', 'q', 'r', '.', 'w', 9, 0,
  /* 6776 */ 'b', 'i', 'n', 's', 'r', '.', 'w', 9, 0,
  /* 6785 */ 'e', 'x', 't', 'r', '.', 'w', 9, 0,
  /* 6793 */ 'i', 'l', 'v', 'r', '.', 'w', 9, 0,
  /* 6801 */ 'c', 'v', 't', '.', 's', '.', 'w', 9, 0,
  /* 6810 */ 'a', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6820 */ 'h', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6830 */ 'd', 'p', 's', 'u', 'b', '_', 's', '.', 'w', 9, 0,
  /* 6841 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 's', '.', 'w', 9, 0,
  /* 6853 */ 'h', 'a', 'd', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6863 */ 'd', 'p', 'a', 'd', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6874 */ 'm', 'o', 'd', '_', 's', '.', 'w', 9, 0,
  /* 6883 */ 'c', 'l', 'e', '_', 's', '.', 'w', 9, 0,
  /* 6892 */ 'a', 'v', 'e', '_', 's', '.', 'w', 9, 0,
  /* 6901 */ 'c', 'l', 'e', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6911 */ 'm', 'i', 'n', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6921 */ 'c', 'l', 't', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6931 */ 'm', 'a', 'x', 'i', '_', 's', '.', 'w', 9, 0,
  /* 6941 */ 's', 'h', 'l', 'l', '_', 's', '.', 'w', 9, 0,
  /* 6951 */ 'm', 'i', 'n', '_', 's', '.', 'w', 9, 0,
  /* 6960 */ 'd', 'o', 't', 'p', '_', 's', '.', 'w', 9, 0,
  /* 6970 */ 's', 'u', 'b', 'q', '_', 's', '.', 'w', 9, 0,
  /* 6980 */ 'a', 'd', 'd', 'q', '_', 's', '.', 'w', 9, 0,
  /* 6990 */ 'm', 'u', 'l', 'q', '_', 's', '.', 'w', 9, 0,
  /* 7000 */ 'a', 'b', 's', 'q', '_', 's', '.', 'w', 9, 0,
  /* 7010 */ 'a', 'v', 'e', 'r', '_', 's', '.', 'w', 9, 0,
  /* 7020 */ 's', 'u', 'b', 's', '_', 's', '.', 'w', 9, 0,
  /* 7030 */ 'a', 'd', 'd', 's', '_', 's', '.', 'w', 9, 0,
  /* 7040 */ 's', 'a', 't', '_', 's', '.', 'w', 9, 0,
  /* 7049 */ 'c', 'l', 't', '_', 's', '.', 'w', 9, 0,
  /* 7058 */ 'f', 'f', 'i', 'n', 't', '_', 's', '.', 'w', 9, 0,
  /* 7069 */ 'f', 't', 'i', 'n', 't', '_', 's', '.', 'w', 9, 0,
  /* 7080 */ 's', 'u', 'b', 's', 'u', 'u', '_', 's', '.', 'w', 9, 0,
  /* 7092 */ 'd', 'i', 'v', '_', 's', '.', 'w', 9, 0,
  /* 7101 */ 's', 'h', 'l', 'l', 'v', '_', 's', '.', 'w', 9, 0,
  /* 7112 */ 'm', 'a', 'x', '_', 's', '.', 'w', 9, 0,
  /* 7121 */ 'c', 'o', 'p', 'y', '_', 's', '.', 'w', 9, 0,
  /* 7131 */ 'm', 'u', 'l', 'q', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7142 */ 'e', 'x', 't', 'r', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7153 */ 'e', 'x', 't', 'r', 'v', '_', 'r', 's', '.', 'w', 9, 0,
  /* 7165 */ 'f', 'c', 'l', 'a', 's', 's', '.', 'w', 9, 0,
  /* 7175 */ 's', 'p', 'l', 'a', 't', '.', 'w', 9, 0,
  /* 7184 */ 'b', 's', 'e', 't', '.', 'w', 9, 0,
  /* 7192 */ 'f', 'c', 'l', 't', '.', 'w', 9, 0,
  /* 7200 */ 'f', 's', 'l', 't', '.', 'w', 9, 0,
  /* 7208 */ 'f', 'c', 'u', 'l', 't', '.', 'w', 9, 0,
  /* 7217 */ 'f', 's', 'u', 'l', 't', '.', 'w', 9, 0,
  /* 7226 */ 'p', 'c', 'n', 't', '.', 'w', 9, 0,
  /* 7234 */ 'f', 'r', 'i', 'n', 't', '.', 'w', 9, 0,
  /* 7243 */ 'i', 'n', 's', 'e', 'r', 't', '.', 'w', 9, 0,
  /* 7253 */ 'f', 's', 'q', 'r', 't', '.', 'w', 9, 0,
  /* 7262 */ 'f', 'r', 's', 'q', 'r', 't', '.', 'w', 9, 0,
  /* 7272 */ 's', 't', '.', 'w', 9, 0,
  /* 7278 */ 'a', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7288 */ 'h', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7298 */ 'd', 'p', 's', 'u', 'b', '_', 'u', '.', 'w', 9, 0,
  /* 7309 */ 'f', 't', 'r', 'u', 'n', 'c', '_', 'u', '.', 'w', 9, 0,
  /* 7321 */ 'h', 'a', 'd', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7331 */ 'd', 'p', 'a', 'd', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7342 */ 'm', 'o', 'd', '_', 'u', '.', 'w', 9, 0,
  /* 7351 */ 'c', 'l', 'e', '_', 'u', '.', 'w', 9, 0,
  /* 7360 */ 'a', 'v', 'e', '_', 'u', '.', 'w', 9, 0,
  /* 7369 */ 'c', 'l', 'e', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7379 */ 'm', 'i', 'n', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7389 */ 'c', 'l', 't', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7399 */ 'm', 'a', 'x', 'i', '_', 'u', '.', 'w', 9, 0,
  /* 7409 */ 'm', 'i', 'n', '_', 'u', '.', 'w', 9, 0,
  /* 7418 */ 'd', 'o', 't', 'p', '_', 'u', '.', 'w', 9, 0,
  /* 7428 */ 'a', 'v', 'e', 'r', '_', 'u', '.', 'w', 9, 0,
  /* 7438 */ 's', 'u', 'b', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7448 */ 'a', 'd', 'd', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7458 */ 's', 'u', 'b', 's', 'u', 's', '_', 'u', '.', 'w', 9, 0,
  /* 7470 */ 's', 'a', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7479 */ 'c', 'l', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7488 */ 'f', 'f', 'i', 'n', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7499 */ 'f', 't', 'i', 'n', 't', '_', 'u', '.', 'w', 9, 0,
  /* 7510 */ 'd', 'i', 'v', '_', 'u', '.', 'w', 9, 0,
  /* 7519 */ 'm', 'a', 'x', '_', 'u', '.', 'w', 9, 0,
  /* 7528 */ 'c', 'o', 'p', 'y', '_', 'u', '.', 'w', 9, 0,
  /* 7538 */ 'm', 's', 'u', 'b', 'v', '.', 'w', 9, 0,
  /* 7547 */ 'm', 'a', 'd', 'd', 'v', '.', 'w', 9, 0,
  /* 7556 */ 'p', 'c', 'k', 'e', 'v', '.', 'w', 9, 0,
  /* 7565 */ 'i', 'l', 'v', 'e', 'v', '.', 'w', 9, 0,
  /* 7574 */ 'f', 'd', 'i', 'v', '.', 'w', 9, 0,
  /* 7582 */ 'm', 'u', 'l', 'v', '.', 'w', 9, 0,
  /* 7590 */ 'e', 'x', 't', 'r', 'v', '.', 'w', 9, 0,
  /* 7599 */ 'f', 'm', 'a', 'x', '.', 'w', 9, 0,
  /* 7607 */ 'b', 'z', '.', 'w', 9, 0,
  /* 7613 */ 'b', 'n', 'z', '.', 'w', 9, 0,
  /* 7620 */ 'l', 'w', 9, 0,
  /* 7624 */ 's', 'w', 9, 0,
  /* 7628 */ 'l', 'h', 'x', 9, 0,
  /* 7633 */ 'l', 'b', 'u', 'x', 9, 0,
  /* 7639 */ 'l', 'w', 'x', 9, 0,
  /* 7644 */ 'b', 'g', 'e', 'z', 9, 0,
  /* 7650 */ 'b', 'l', 'e', 'z', 9, 0,
  /* 7656 */ 'b', 'n', 'e', 'z', 9, 0,
  /* 7662 */ 'b', 't', 'n', 'e', 'z', 9, 0,
  /* 7669 */ 'd', 'c', 'l', 'z', 9, 0,
  /* 7675 */ 'b', 'e', 'q', 'z', 9, 0,
  /* 7681 */ 'b', 't', 'e', 'q', 'z', 9, 0,
  /* 7688 */ 'b', 'g', 't', 'z', 9, 0,
  /* 7694 */ 'b', 'l', 't', 'z', 9, 0,
  /* 7700 */ 'm', 'o', 'v', 'z', 9, 0,
  /* 7706 */ 's', 'e', 'b', 9, 32, 0,
  /* 7712 */ 'j', 'r', 'c', 9, 32, 0,
  /* 7718 */ 's', 'e', 'h', 9, 32, 0,
  /* 7724 */ 'r', 'e', 's', 't', 'o', 'r', 'e', 9, '$', 'r', 'a', ',', 32, 32, '$', 's', '0', ',', 32, '$', 's', '1', ',', 32, '$', 's', '2', ',', 32, 0,
  /* 7754 */ 's', 'a', 'v', 'e', 9, '$', 'r', 'a', ',', 32, '$', 's', '0', ',', 32, '$', 's', '1', ',', 32, '$', 's', '2', ',', 32, 0,
  /* 7780 */ 'd', 'd', 'i', 'v', 'u', 9, '$', 'z', 'e', 'r', 'o', ',', 32, 0,
  /* 7794 */ 'd', 'd', 'i', 'v', 9, '$', 'z', 'e', 'r', 'o', ',', 32, 0,
  /* 7807 */ 'a', 'd', 'd', 'i', 'u', 9, '$', 's', 'p', ',', 32, 0,
  /* 7819 */ 's', 'y', 'n', 'c', 32, 0,
  /* 7825 */ 9, '.', 'w', 'o', 'r', 'd', 32, 0,
  /* 7833 */ 'd', 'i', 'n', 's', 'm', 32, 0,
  /* 7840 */ 'd', 'e', 'x', 't', 'm', 32, 0,
  /* 7847 */ 'd', 'i', 'n', 's', 32, 0,
  /* 7853 */ 'd', 'e', 'x', 't', 32, 0,
  /* 7859 */ 'd', 'i', 'n', 's', 'u', 32, 0,
  /* 7866 */ 'd', 'e', 'x', 't', 'u', 32, 0,
  /* 7873 */ 'c', '.', 0,
  /* 7876 */ 'b', 'r', 'e', 'a', 'k', 32, '0', 0,
  /* 7884 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 7897 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 7904 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 7914 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 7929 */ 'j', 'r', 'c', 9, 32, '$', 'r', 'a', 0,
  /* 7938 */ 'j', 'r', 9, 32, '$', 'r', 'a', 0,
  /* 7946 */ 'f', 'o', 'o', 0,
  /* 7950 */ 'd', 'e', 'r', 'e', 't', 0,
  /* 7956 */ 'w', 'a', 'i', 't', 0,
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits1 = OpInfo[MI->getOpcode()];
  uint64_t Bits2 = OpInfo2[MI->getOpcode()];
  uint64_t Bits = (Bits2 << 32) | Bits1;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 13) & 7) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, Break16, CONSTPOOL_EN...
    return;
    break;
  case 1:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // CTC1, DMTC1, MTC1, MTHC1, MTHI_DSP, MTHLIP, MTLO_DSP, MultRxRyRz16, Mu...
    printOperand(MI, 1, O); 
    O << ", "; 
    break;
  case 3:
    // FCMP_D32, FCMP_D64, FCMP_S32
    printFCCOperand(MI, 2, O); 
    break;
  case 4:
    // RestoreIncSpF16, RestoreRaF16, SaveDecSpF16, SaveRaF16
    printUnsignedImm(MI, 0, O); 
    return;
    break;
  case 5:
    // SelBeqZ, SelBneZ, SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZ...
    printOperand(MI, 3, O); 
    break;
  }


  // Fragment 1 encoded into 4 bits for 14 unique commands.
  switch ((Bits >> 16) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    O << ", "; 
    break;
  case 1:
    // AddiuRxPcImmX16
    O << ", $pc, "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 2:
    // AddiuSpImm16, Bimm16
    O << " # 16 bit inst"; 
    return;
    break;
  case 3:
    // AddiuSpImmX16, BPOSGE32, BimmX16, BteqzX16, BtnezX16, Constant32, DI, ...
    return;
    break;
  case 4:
    // Bteqz16, Btnez16
    O << "  # 16 bit inst"; 
    return;
    break;
  case 5:
    // CTC1, DMTC1, MTC1, MTHC1, MTHI_DSP, MTHLIP, MTLO_DSP
    printOperand(MI, 0, O); 
    return;
    break;
  case 6:
    // FCMP_D32, FCMP_D64
    O << ".d\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 7:
    // FCMP_S32
    O << ".s\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 8:
    // INSERT_B, INSERT_H, INSERT_W, INSVE_B, INSVE_D, INSVE_H, INSVE_W
    O << '['; 
    break;
  case 9:
    // Jal16
    O << "\n\tnop"; 
    return;
    break;
  case 10:
    // LwConstant32
    O << ", 1f\n\tb\t2f\n\t.align\t2\n1: \t.word\t"; 
    printOperand(MI, 1, O); 
    O << "\n2:"; 
    return;
    break;
  case 11:
    // MultRxRyRz16, MultuRxRyRz16, SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImm...
    printOperand(MI, 2, O); 
    break;
  case 12:
    // SC, SCD
    printMemOperand(MI, 2, O); 
    return;
    break;
  case 13:
    // SelBeqZ, SelBneZ
    O << ", .+4\n\t\n\tmove "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 2 encoded into 4 bits for 10 unique commands.
  switch ((Bits >> 20) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ...
    printOperand(MI, 1, O); 
    break;
  case 1:
    // AddiuRxRxImm16, AddiuRxRxImmX16, AndRxRxRy16, BINSLI_B, BINSLI_D, BINS...
    printOperand(MI, 2, O); 
    break;
  case 2:
    // AddiuRxRyOffMemX16, LEA_ADDiu, LEA_ADDiu64
    printMemOperandEA(MI, 1, O); 
    return;
    break;
  case 3:
    // INSERT_B, INSERT_H, INSERT_W
    printUnsignedImm(MI, 3, O); 
    O << "], "; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // INSVE_B, INSVE_D, INSVE_H, INSVE_W
    printUnsignedImm(MI, 2, O); 
    O << "], "; 
    printOperand(MI, 3, O); 
    O << "[0]"; 
    return;
    break;
  case 5:
    // LB, LB64, LB_MM, LBu, LBu64, LBu_MM, LD, LDC1, LDC164, LDC2, LDL, LDR,...
    printMemOperand(MI, 1, O); 
    return;
    break;
  case 6:
    // LUi, LUi64, LUi_MM, LoadAddr32Imm, LoadImm32Reg, RDDSP, REPL_PH, REPL_...
    printUnsignedImm(MI, 1, O); 
    return;
    break;
  case 7:
    // MultRxRyRz16, MultuRxRyRz16
    O << "\n\tmflo\t"; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 8:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    printOperand(MI, 4, O); 
    break;
  case 9:
    // SltCCRxRy16, SltiCCRxImmX16, SltiuCCRxImmX16, SltuCCRxRy16, SltuRxRyRz...
    O << "\n\tmove\t"; 
    printOperand(MI, 0, O); 
    O << ", $t8"; 
    return;
    break;
  }


  // Fragment 3 encoded into 4 bits for 15 unique commands.
  switch ((Bits >> 24) & 15) {
  default:   // unreachable.
  case 0:
    // ABSQ_S_PH, ABSQ_S_QB, ABSQ_S_W, AddiuRxImmX16, AddiuRxRxImmX16, AndRxR...
    return;
    break;
  case 1:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    O << ", "; 
    break;
  case 2:
    // AddiuRxRxImm16, LwRxPcTcp16
    O << "\t# 16 bit inst"; 
    return;
    break;
  case 3:
    // BeqzRxImm16, BnezRxImm16
    O << "  # 16 bit inst"; 
    return;
    break;
  case 4:
    // BteqzT8CmpX16, BteqzT8CmpiX16, BteqzT8SltX16, BteqzT8SltiX16, BteqzT8S...
    O << "\n\tbteqz\t"; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 5:
    // BtnezT8CmpX16, BtnezT8CmpiX16, BtnezT8SltX16, BtnezT8SltiX16, BtnezT8S...
    O << "\n\tbtnez\t"; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 6:
    // COPY_S_B, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_H, COPY_U_W, SLDI_B, SL...
    O << '['; 
    break;
  case 7:
    // CmpiRxImm16, LiRxImm16, SltiRxImm16, SltiuRxImm16
    O << " \t# 16 bit inst"; 
    return;
    break;
  case 8:
    // DSLL64_32
    O << ", 32"; 
    return;
    break;
  case 9:
    // GotPrologue16
    O << "\n\taddiu\t"; 
    printOperand(MI, 1, O); 
    O << ", $pc, "; 
    printOperand(MI, 3, O); 
    O << "\n "; 
    return;
    break;
  case 10:
    // LBUX, LDXC1, LDXC164, LHX, LUXC1, LUXC164, LWX, LWXC1, SDXC1, SDXC164,...
    O << '('; 
    printOperand(MI, 1, O); 
    O << ')'; 
    return;
    break;
  case 11:
    // LwRxSpImmX16, SwRxSpImmX16
    O << " ( "; 
    printOperand(MI, 1, O); 
    O << " ); "; 
    return;
    break;
  case 12:
    // SLL64_32, SLL64_64
    O << ", 0"; 
    return;
    break;
  case 13:
    // SelTBteqZCmp, SelTBteqZCmpi, SelTBteqZSlt, SelTBteqZSlti, SelTBteqZSlt...
    O << "\n\tbteqz\t.+4\n\tmove "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  case 14:
    // SelTBtneZCmp, SelTBtneZCmpi, SelTBtneZSlt, SelTBtneZSlti, SelTBtneZSlt...
    O << "\n\tbtnez\t.+4\n\tmove "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    return;
    break;
  }


  // Fragment 4 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 28) & 7) {
  default:   // unreachable.
  case 0:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    printOperand(MI, 2, O); 
    break;
  case 1:
    // ADDVI_B, ADDVI_D, ADDVI_H, ADDVI_W, ANDI_B, BCLRI_B, BCLRI_D, BCLRI_H,...
    printUnsignedImm8(MI, 2, O); 
    break;
  case 2:
    // ANDi, ANDi64, ANDi_MM, APPEND, BALIGN, DEXT, DEXTM, DEXTU, DINS, DINSM...
    printUnsignedImm(MI, 2, O); 
    break;
  case 3:
    // BINSLI_B, BINSLI_D, BINSLI_H, BINSLI_W, BINSRI_B, BINSRI_D, BINSRI_H, ...
    printUnsignedImm8(MI, 3, O); 
    return;
    break;
  case 4:
    // BINSL_B, BINSL_D, BINSL_H, BINSL_W, BINSR_B, BINSR_D, BINSR_H, BINSR_W...
    printOperand(MI, 3, O); 
    return;
    break;
  }


  // Fragment 5 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 31) & 3) {
  default:   // unreachable.
  case 0:
    // ADD, ADDQH_PH, ADDQH_R_PH, ADDQH_R_W, ADDQH_W, ADDQ_PH, ADDQ_S_PH, ADD...
    return;
    break;
  case 1:
    // COPY_S_B, COPY_S_H, COPY_S_W, COPY_U_B, COPY_U_H, COPY_U_W, SLDI_B, SL...
    O << ']'; 
    return;
    break;
  case 2:
    // DEXT, DEXTM, DEXTU, DINS, DINSM, DINSU, EXT, EXT_MM, INS, INS_MM, LSA,...
    O << ", "; 
    break;
  }


  // Fragment 6 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 33) & 1) {
    // LSA
    printUnsignedImm(MI, 3, O); 
    return;
  } else {
    // DEXT, DEXTM, DEXTU, DINS, DINSM, DINSU, EXT, EXT_MM, INS, INS_MM, MADD...
    printOperand(MI, 3, O); 
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *MipsInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 317 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'f', '1', '0', 0,
  /* 4 */ 'w', '1', '0', 0,
  /* 8 */ 'f', '2', '0', 0,
  /* 12 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '0', 0,
  /* 25 */ 'w', '2', '0', 0,
  /* 29 */ 'f', '3', '0', 0,
  /* 33 */ 'w', '3', '0', 0,
  /* 37 */ 'a', 'c', '0', 0,
  /* 41 */ 'f', 'c', 'c', '0', 0,
  /* 46 */ 'f', '0', 0,
  /* 49 */ 'w', '0', 0,
  /* 52 */ 'f', '1', '1', 0,
  /* 56 */ 'w', '1', '1', 0,
  /* 60 */ 'f', '2', '1', 0,
  /* 64 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '1', 0,
  /* 77 */ 'w', '2', '1', 0,
  /* 81 */ 'f', '3', '1', 0,
  /* 85 */ 'w', '3', '1', 0,
  /* 89 */ 'a', 'c', '1', 0,
  /* 93 */ 'f', 'c', 'c', '1', 0,
  /* 98 */ 'f', '1', 0,
  /* 101 */ 'w', '1', 0,
  /* 104 */ 'f', '1', '2', 0,
  /* 108 */ 'w', '1', '2', 0,
  /* 112 */ 'f', '2', '2', 0,
  /* 116 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '2', 0,
  /* 129 */ 'w', '2', '2', 0,
  /* 133 */ 'a', 'c', '2', 0,
  /* 137 */ 'f', 'c', 'c', '2', 0,
  /* 142 */ 'f', '2', 0,
  /* 145 */ 'w', '2', 0,
  /* 148 */ 'f', '1', '3', 0,
  /* 152 */ 'w', '1', '3', 0,
  /* 156 */ 'f', '2', '3', 0,
  /* 160 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '2', '3', 0,
  /* 173 */ 'w', '2', '3', 0,
  /* 177 */ 'a', 'c', '3', 0,
  /* 181 */ 'f', 'c', 'c', '3', 0,
  /* 186 */ 'f', '3', 0,
  /* 189 */ 'w', '3', 0,
  /* 192 */ 'f', '1', '4', 0,
  /* 196 */ 'w', '1', '4', 0,
  /* 200 */ 'f', '2', '4', 0,
  /* 204 */ 'w', '2', '4', 0,
  /* 208 */ 'f', 'c', 'c', '4', 0,
  /* 213 */ 'f', '4', 0,
  /* 216 */ 'w', '4', 0,
  /* 219 */ 'f', '1', '5', 0,
  /* 223 */ 'w', '1', '5', 0,
  /* 227 */ 'f', '2', '5', 0,
  /* 231 */ 'w', '2', '5', 0,
  /* 235 */ 'f', 'c', 'c', '5', 0,
  /* 240 */ 'f', '5', 0,
  /* 243 */ 'w', '5', 0,
  /* 246 */ 'f', '1', '6', 0,
  /* 250 */ 'w', '1', '6', 0,
  /* 254 */ 'f', '2', '6', 0,
  /* 258 */ 'w', '2', '6', 0,
  /* 262 */ 'f', 'c', 'c', '6', 0,
  /* 267 */ 'f', '6', 0,
  /* 270 */ 'w', '6', 0,
  /* 273 */ 'f', '1', '7', 0,
  /* 277 */ 'w', '1', '7', 0,
  /* 281 */ 'f', '2', '7', 0,
  /* 285 */ 'w', '2', '7', 0,
  /* 289 */ 'f', 'c', 'c', '7', 0,
  /* 294 */ 'f', '7', 0,
  /* 297 */ 'w', '7', 0,
  /* 300 */ 'f', '1', '8', 0,
  /* 304 */ 'w', '1', '8', 0,
  /* 308 */ 'f', '2', '8', 0,
  /* 312 */ 'w', '2', '8', 0,
  /* 316 */ 'f', '8', 0,
  /* 319 */ 'w', '8', 0,
  /* 322 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', '1', '6', '_', '1', '9', 0,
  /* 338 */ 'f', '1', '9', 0,
  /* 342 */ 'w', '1', '9', 0,
  /* 346 */ 'f', '2', '9', 0,
  /* 350 */ 'w', '2', '9', 0,
  /* 354 */ 'f', '9', 0,
  /* 357 */ 'w', '9', 0,
  /* 360 */ 'D', 'S', 'P', 'E', 'F', 'I', 0,
  /* 367 */ 'r', 'a', 0,
  /* 370 */ 'p', 'c', 0,
  /* 373 */ 'D', 'S', 'P', 'C', 'C', 'o', 'n', 'd', 0,
  /* 382 */ 'D', 'S', 'P', 'O', 'u', 't', 'F', 'l', 'a', 'g', 0,
  /* 393 */ 'h', 'i', 0,
  /* 396 */ 'l', 'o', 0,
  /* 399 */ 'z', 'e', 'r', 'o', 0,
  /* 404 */ 'f', 'p', 0,
  /* 407 */ 'g', 'p', 0,
  /* 410 */ 's', 'p', 0,
  /* 413 */ 'D', 'S', 'P', 'P', 'o', 's', 0,
  /* 420 */ 'D', 'S', 'P', 'S', 'C', 'o', 'u', 'n', 't', 0,
  /* 430 */ 'D', 'S', 'P', 'C', 'a', 'r', 'r', 'y', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    54, 373, 430, 360, 382, 413, 420, 404, 407, 106, 54, 2, 248, 194, 
    221, 150, 275, 370, 367, 410, 399, 194, 221, 248, 275, 37, 89, 133, 
    177, 54, 2, 54, 106, 150, 194, 221, 248, 275, 302, 336, 1, 53, 
    105, 149, 193, 220, 247, 274, 301, 335, 9, 61, 113, 157, 201, 228, 
    255, 282, 309, 347, 30, 82, 46, 142, 213, 267, 316, 0, 104, 192, 
    246, 300, 8, 112, 200, 254, 308, 29, 12, 64, 116, 160, 46, 98, 
    142, 186, 213, 240, 267, 294, 316, 354, 0, 52, 104, 148, 192, 219, 
    246, 273, 300, 338, 8, 60, 112, 156, 200, 227, 254, 281, 308, 346, 
    29, 81, 41, 93, 137, 181, 208, 235, 262, 289, 2, 54, 106, 150, 
    194, 221, 248, 275, 302, 336, 1, 53, 105, 149, 193, 220, 247, 274, 
    301, 335, 9, 61, 113, 157, 201, 228, 255, 282, 309, 347, 30, 82, 
    404, 46, 98, 142, 186, 213, 240, 267, 294, 316, 354, 0, 52, 104, 
    148, 192, 219, 246, 273, 300, 338, 8, 60, 112, 156, 200, 227, 254, 
    281, 308, 346, 29, 81, 407, 37, 89, 133, 177, 347, 255, 282, 37, 
    89, 133, 177, 367, 247, 274, 301, 335, 9, 61, 113, 157, 410, 302, 
    336, 1, 53, 105, 149, 193, 220, 201, 228, 106, 150, 49, 101, 145, 
    189, 216, 243, 270, 297, 319, 357, 4, 56, 108, 152, 196, 223, 250, 
    277, 304, 342, 25, 77, 129, 173, 204, 231, 258, 285, 312, 350, 33, 
    85, 399, 194, 221, 248, 275, 37, 46, 98, 142, 186, 213, 240, 267, 
    294, 316, 354, 0, 52, 104, 148, 192, 219, 246, 273, 300, 338, 8, 
    60, 112, 156, 200, 227, 254, 281, 308, 346, 29, 81, 322, 393, 255, 
    282, 396, 247, 274, 301, 335, 9, 61, 113, 157, 302, 336, 1, 53, 
    105, 149, 193, 220, 201, 228, 106, 150, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool MipsInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  const char *AsmString;
  switch (MI->getOpcode()) {
  default: return false;
  case Mips::ADDu:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).getReg() == Mips::ZERO) {
      // (ADDu GPR32Opnd:$dst, GPR32Opnd:$src, ZERO)
      AsmString = "move $\x01, $\x02";
      break;
    }
    return false;
  case Mips::BREAK:
    if (MI->getNumOperands() == 2 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 0 &&
        MI->getOperand(1).isImm() &&
        MI->getOperand(1).getImm() == 0) {
      // (BREAK 0, 0)
      AsmString = "break";
      break;
    }
    return false;
  case Mips::DADDu:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR64RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(Mips::GPR64RegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).getReg() == Mips::ZERO_64) {
      // (DADDu GPR64Opnd:$dst, GPR64Opnd:$src, ZERO_64)
      AsmString = "move $\x01, $\x02";
      break;
    }
    return false;
  case Mips::DI:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == Mips::ZERO) {
      // (DI ZERO)
      AsmString = "di";
      break;
    }
    return false;
  case Mips::EI:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).getReg() == Mips::ZERO) {
      // (EI ZERO)
      AsmString = "ei";
      break;
    }
    return false;
  case Mips::SLL:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).getReg() == Mips::ZERO &&
        MI->getOperand(1).getReg() == Mips::ZERO &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (SLL ZERO, ZERO, 0)
      AsmString = "nop";
      break;
    }
    return false;
  case Mips::SUB:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).getReg() == Mips::ZERO &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(2).getReg())) {
      // (SUB GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs)
      AsmString = "neg $\x01, $\x03";
      break;
    }
    return false;
  case Mips::SUBu:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).getReg() == Mips::ZERO &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(2).getReg())) {
      // (SUBu GPR32Opnd:$rt, ZERO, GPR32Opnd:$rs)
      AsmString = "negu $\x01, $\x03";
      break;
    }
    return false;
  case Mips::SYSCALL:
    if (MI->getNumOperands() == 1 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 0) {
      // (SYSCALL 0)
      AsmString = "syscall";
      break;
    }
    return false;
  case Mips::TEQ:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (TEQ GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "teq $\x01, $\x02";
      break;
    }
    return false;
  case Mips::TGE:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (TGE GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tge $\x01, $\x02";
      break;
    }
    return false;
  case Mips::TGEU:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (TGEU GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tgeu $\x01, $\x02";
      break;
    }
    return false;
  case Mips::TLT:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (TLT GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tlt $\x01, $\x02";
      break;
    }
    return false;
  case Mips::TLTU:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (TLTU GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tltu $\x01, $\x02";
      break;
    }
    return false;
  case Mips::TNE:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(Mips::GPR32RegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isImm() &&
        MI->getOperand(2).getImm() == 0) {
      // (TNE GPR32Opnd:$rs, GPR32Opnd:$rt, 0)
      AsmString = "tne $\x01, $\x02";
      break;
    }
    return false;
  }

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    OS << '\t';
    do {
      if (AsmString[I] == '$') {
        ++I;
        printOperand(MI, unsigned(AsmString[I++]) - 1, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

#endif // PRINT_ALIAS_INSTR
