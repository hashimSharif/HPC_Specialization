/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Register Enum Values                                                 *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_ENUM
#undef GET_REGINFO_ENUM
namespace llvm {

class MCRegisterClass;
extern const MCRegisterClass AArch64MCRegisterClasses[];

namespace AArch64 {
enum {
  NoRegister,
  NZCV = 1,
  WSP = 2,
  WZR = 3,
  XSP = 4,
  XZR = 5,
  B0 = 6,
  B1 = 7,
  B2 = 8,
  B3 = 9,
  B4 = 10,
  B5 = 11,
  B6 = 12,
  B7 = 13,
  B8 = 14,
  B9 = 15,
  B10 = 16,
  B11 = 17,
  B12 = 18,
  B13 = 19,
  B14 = 20,
  B15 = 21,
  B16 = 22,
  B17 = 23,
  B18 = 24,
  B19 = 25,
  B20 = 26,
  B21 = 27,
  B22 = 28,
  B23 = 29,
  B24 = 30,
  B25 = 31,
  B26 = 32,
  B27 = 33,
  B28 = 34,
  B29 = 35,
  B30 = 36,
  B31 = 37,
  D0 = 38,
  D1 = 39,
  D2 = 40,
  D3 = 41,
  D4 = 42,
  D5 = 43,
  D6 = 44,
  D7 = 45,
  D8 = 46,
  D9 = 47,
  D10 = 48,
  D11 = 49,
  D12 = 50,
  D13 = 51,
  D14 = 52,
  D15 = 53,
  D16 = 54,
  D17 = 55,
  D18 = 56,
  D19 = 57,
  D20 = 58,
  D21 = 59,
  D22 = 60,
  D23 = 61,
  D24 = 62,
  D25 = 63,
  D26 = 64,
  D27 = 65,
  D28 = 66,
  D29 = 67,
  D30 = 68,
  D31 = 69,
  H0 = 70,
  H1 = 71,
  H2 = 72,
  H3 = 73,
  H4 = 74,
  H5 = 75,
  H6 = 76,
  H7 = 77,
  H8 = 78,
  H9 = 79,
  H10 = 80,
  H11 = 81,
  H12 = 82,
  H13 = 83,
  H14 = 84,
  H15 = 85,
  H16 = 86,
  H17 = 87,
  H18 = 88,
  H19 = 89,
  H20 = 90,
  H21 = 91,
  H22 = 92,
  H23 = 93,
  H24 = 94,
  H25 = 95,
  H26 = 96,
  H27 = 97,
  H28 = 98,
  H29 = 99,
  H30 = 100,
  H31 = 101,
  Q0 = 102,
  Q1 = 103,
  Q2 = 104,
  Q3 = 105,
  Q4 = 106,
  Q5 = 107,
  Q6 = 108,
  Q7 = 109,
  Q8 = 110,
  Q9 = 111,
  Q10 = 112,
  Q11 = 113,
  Q12 = 114,
  Q13 = 115,
  Q14 = 116,
  Q15 = 117,
  Q16 = 118,
  Q17 = 119,
  Q18 = 120,
  Q19 = 121,
  Q20 = 122,
  Q21 = 123,
  Q22 = 124,
  Q23 = 125,
  Q24 = 126,
  Q25 = 127,
  Q26 = 128,
  Q27 = 129,
  Q28 = 130,
  Q29 = 131,
  Q30 = 132,
  Q31 = 133,
  S0 = 134,
  S1 = 135,
  S2 = 136,
  S3 = 137,
  S4 = 138,
  S5 = 139,
  S6 = 140,
  S7 = 141,
  S8 = 142,
  S9 = 143,
  S10 = 144,
  S11 = 145,
  S12 = 146,
  S13 = 147,
  S14 = 148,
  S15 = 149,
  S16 = 150,
  S17 = 151,
  S18 = 152,
  S19 = 153,
  S20 = 154,
  S21 = 155,
  S22 = 156,
  S23 = 157,
  S24 = 158,
  S25 = 159,
  S26 = 160,
  S27 = 161,
  S28 = 162,
  S29 = 163,
  S30 = 164,
  S31 = 165,
  W0 = 166,
  W1 = 167,
  W2 = 168,
  W3 = 169,
  W4 = 170,
  W5 = 171,
  W6 = 172,
  W7 = 173,
  W8 = 174,
  W9 = 175,
  W10 = 176,
  W11 = 177,
  W12 = 178,
  W13 = 179,
  W14 = 180,
  W15 = 181,
  W16 = 182,
  W17 = 183,
  W18 = 184,
  W19 = 185,
  W20 = 186,
  W21 = 187,
  W22 = 188,
  W23 = 189,
  W24 = 190,
  W25 = 191,
  W26 = 192,
  W27 = 193,
  W28 = 194,
  W29 = 195,
  W30 = 196,
  X0 = 197,
  X1 = 198,
  X2 = 199,
  X3 = 200,
  X4 = 201,
  X5 = 202,
  X6 = 203,
  X7 = 204,
  X8 = 205,
  X9 = 206,
  X10 = 207,
  X11 = 208,
  X12 = 209,
  X13 = 210,
  X14 = 211,
  X15 = 212,
  X16 = 213,
  X17 = 214,
  X18 = 215,
  X19 = 216,
  X20 = 217,
  X21 = 218,
  X22 = 219,
  X23 = 220,
  X24 = 221,
  X25 = 222,
  X26 = 223,
  X27 = 224,
  X28 = 225,
  X29 = 226,
  X30 = 227,
  D0_D1 = 228,
  D1_D2 = 229,
  D2_D3 = 230,
  D3_D4 = 231,
  D4_D5 = 232,
  D5_D6 = 233,
  D6_D7 = 234,
  D7_D8 = 235,
  D8_D9 = 236,
  D9_D10 = 237,
  D10_D11 = 238,
  D11_D12 = 239,
  D12_D13 = 240,
  D13_D14 = 241,
  D14_D15 = 242,
  D15_D16 = 243,
  D16_D17 = 244,
  D17_D18 = 245,
  D18_D19 = 246,
  D19_D20 = 247,
  D20_D21 = 248,
  D21_D22 = 249,
  D22_D23 = 250,
  D23_D24 = 251,
  D24_D25 = 252,
  D25_D26 = 253,
  D26_D27 = 254,
  D27_D28 = 255,
  D28_D29 = 256,
  D29_D30 = 257,
  D30_D31 = 258,
  D31_D0 = 259,
  Q0_Q1 = 260,
  Q1_Q2 = 261,
  Q2_Q3 = 262,
  Q3_Q4 = 263,
  Q4_Q5 = 264,
  Q5_Q6 = 265,
  Q6_Q7 = 266,
  Q7_Q8 = 267,
  Q8_Q9 = 268,
  Q9_Q10 = 269,
  Q10_Q11 = 270,
  Q11_Q12 = 271,
  Q12_Q13 = 272,
  Q13_Q14 = 273,
  Q14_Q15 = 274,
  Q15_Q16 = 275,
  Q16_Q17 = 276,
  Q17_Q18 = 277,
  Q18_Q19 = 278,
  Q19_Q20 = 279,
  Q20_Q21 = 280,
  Q21_Q22 = 281,
  Q22_Q23 = 282,
  Q23_Q24 = 283,
  Q24_Q25 = 284,
  Q25_Q26 = 285,
  Q26_Q27 = 286,
  Q27_Q28 = 287,
  Q28_Q29 = 288,
  Q29_Q30 = 289,
  Q30_Q31 = 290,
  Q31_Q0 = 291,
  D0_D1_D2 = 292,
  D1_D2_D3 = 293,
  D2_D3_D4 = 294,
  D3_D4_D5 = 295,
  D4_D5_D6 = 296,
  D5_D6_D7 = 297,
  D6_D7_D8 = 298,
  D7_D8_D9 = 299,
  D8_D9_D10 = 300,
  D9_D10_D11 = 301,
  D10_D11_D12 = 302,
  D11_D12_D13 = 303,
  D12_D13_D14 = 304,
  D13_D14_D15 = 305,
  D14_D15_D16 = 306,
  D15_D16_D17 = 307,
  D16_D17_D18 = 308,
  D17_D18_D19 = 309,
  D18_D19_D20 = 310,
  D19_D20_D21 = 311,
  D20_D21_D22 = 312,
  D21_D22_D23 = 313,
  D22_D23_D24 = 314,
  D23_D24_D25 = 315,
  D24_D25_D26 = 316,
  D25_D26_D27 = 317,
  D26_D27_D28 = 318,
  D27_D28_D29 = 319,
  D28_D29_D30 = 320,
  D29_D30_D31 = 321,
  D30_D31_D0 = 322,
  D31_D0_D1 = 323,
  Q0_Q1_Q2 = 324,
  Q1_Q2_Q3 = 325,
  Q2_Q3_Q4 = 326,
  Q3_Q4_Q5 = 327,
  Q4_Q5_Q6 = 328,
  Q5_Q6_Q7 = 329,
  Q6_Q7_Q8 = 330,
  Q7_Q8_Q9 = 331,
  Q8_Q9_Q10 = 332,
  Q9_Q10_Q11 = 333,
  Q10_Q11_Q12 = 334,
  Q11_Q12_Q13 = 335,
  Q12_Q13_Q14 = 336,
  Q13_Q14_Q15 = 337,
  Q14_Q15_Q16 = 338,
  Q15_Q16_Q17 = 339,
  Q16_Q17_Q18 = 340,
  Q17_Q18_Q19 = 341,
  Q18_Q19_Q20 = 342,
  Q19_Q20_Q21 = 343,
  Q20_Q21_Q22 = 344,
  Q21_Q22_Q23 = 345,
  Q22_Q23_Q24 = 346,
  Q23_Q24_Q25 = 347,
  Q24_Q25_Q26 = 348,
  Q25_Q26_Q27 = 349,
  Q26_Q27_Q28 = 350,
  Q27_Q28_Q29 = 351,
  Q28_Q29_Q30 = 352,
  Q29_Q30_Q31 = 353,
  Q30_Q31_Q0 = 354,
  Q31_Q0_Q1 = 355,
  D0_D1_D2_D3 = 356,
  D1_D2_D3_D4 = 357,
  D2_D3_D4_D5 = 358,
  D3_D4_D5_D6 = 359,
  D4_D5_D6_D7 = 360,
  D5_D6_D7_D8 = 361,
  D6_D7_D8_D9 = 362,
  D7_D8_D9_D10 = 363,
  D8_D9_D10_D11 = 364,
  D9_D10_D11_D12 = 365,
  D10_D11_D12_D13 = 366,
  D11_D12_D13_D14 = 367,
  D12_D13_D14_D15 = 368,
  D13_D14_D15_D16 = 369,
  D14_D15_D16_D17 = 370,
  D15_D16_D17_D18 = 371,
  D16_D17_D18_D19 = 372,
  D17_D18_D19_D20 = 373,
  D18_D19_D20_D21 = 374,
  D19_D20_D21_D22 = 375,
  D20_D21_D22_D23 = 376,
  D21_D22_D23_D24 = 377,
  D22_D23_D24_D25 = 378,
  D23_D24_D25_D26 = 379,
  D24_D25_D26_D27 = 380,
  D25_D26_D27_D28 = 381,
  D26_D27_D28_D29 = 382,
  D27_D28_D29_D30 = 383,
  D28_D29_D30_D31 = 384,
  D29_D30_D31_D0 = 385,
  D30_D31_D0_D1 = 386,
  D31_D0_D1_D2 = 387,
  Q0_Q1_Q2_Q3 = 388,
  Q1_Q2_Q3_Q4 = 389,
  Q2_Q3_Q4_Q5 = 390,
  Q3_Q4_Q5_Q6 = 391,
  Q4_Q5_Q6_Q7 = 392,
  Q5_Q6_Q7_Q8 = 393,
  Q6_Q7_Q8_Q9 = 394,
  Q7_Q8_Q9_Q10 = 395,
  Q8_Q9_Q10_Q11 = 396,
  Q9_Q10_Q11_Q12 = 397,
  Q10_Q11_Q12_Q13 = 398,
  Q11_Q12_Q13_Q14 = 399,
  Q12_Q13_Q14_Q15 = 400,
  Q13_Q14_Q15_Q16 = 401,
  Q14_Q15_Q16_Q17 = 402,
  Q15_Q16_Q17_Q18 = 403,
  Q16_Q17_Q18_Q19 = 404,
  Q17_Q18_Q19_Q20 = 405,
  Q18_Q19_Q20_Q21 = 406,
  Q19_Q20_Q21_Q22 = 407,
  Q20_Q21_Q22_Q23 = 408,
  Q21_Q22_Q23_Q24 = 409,
  Q22_Q23_Q24_Q25 = 410,
  Q23_Q24_Q25_Q26 = 411,
  Q24_Q25_Q26_Q27 = 412,
  Q25_Q26_Q27_Q28 = 413,
  Q26_Q27_Q28_Q29 = 414,
  Q27_Q28_Q29_Q30 = 415,
  Q28_Q29_Q30_Q31 = 416,
  Q29_Q30_Q31_Q0 = 417,
  Q30_Q31_Q0_Q1 = 418,
  Q31_Q0_Q1_Q2 = 419,
  NUM_TARGET_REGS 	// 420
};
}

// Register classes
namespace AArch64 {
enum {
  FPR8RegClassID = 0,
  FPR16RegClassID = 1,
  FPR32RegClassID = 2,
  GPR32RegClassID = 3,
  GPR32wspRegClassID = 4,
  GPR32nowzrRegClassID = 5,
  FlagClassRegClassID = 6,
  RwspRegClassID = 7,
  FPR64RegClassID = 8,
  GPR64RegClassID = 9,
  GPR64xspRegClassID = 10,
  GPR64noxzrRegClassID = 11,
  tcGPR64RegClassID = 12,
  FPR64LoRegClassID = 13,
  RxspRegClassID = 14,
  DPairRegClassID = 15,
  DPair_with_dsub_0_in_FPR64LoRegClassID = 16,
  DPair_with_dsub_1_in_FPR64LoRegClassID = 17,
  DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoRegClassID = 18,
  FPR128RegClassID = 19,
  FPR128LoRegClassID = 20,
  DTripleRegClassID = 21,
  DTriple_with_dsub_0_in_FPR64LoRegClassID = 22,
  DTriple_with_dsub_1_in_FPR64LoRegClassID = 23,
  DTriple_with_dsub_2_in_FPR64LoRegClassID = 24,
  DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoRegClassID = 25,
  DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClassID = 26,
  DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClassID = 27,
  DQuadRegClassID = 28,
  DQuad_with_dsub_0_in_FPR64LoRegClassID = 29,
  DQuad_with_dsub_1_in_FPR64LoRegClassID = 30,
  DQuad_with_dsub_2_in_FPR64LoRegClassID = 31,
  DQuad_with_dsub_3_in_FPR64LoRegClassID = 32,
  DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoRegClassID = 33,
  DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClassID = 34,
  DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID = 35,
  DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClassID = 36,
  DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID = 37,
  DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID = 38,
  QPairRegClassID = 39,
  QPair_with_qsub_0_in_FPR128LoRegClassID = 40,
  QPair_with_qsub_1_in_FPR128LoRegClassID = 41,
  QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoRegClassID = 42,
  QTripleRegClassID = 43,
  QTriple_with_qsub_0_in_FPR128LoRegClassID = 44,
  QTriple_with_qsub_1_in_FPR128LoRegClassID = 45,
  QTriple_with_qsub_2_in_FPR128LoRegClassID = 46,
  QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoRegClassID = 47,
  QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClassID = 48,
  QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClassID = 49,
  QQuadRegClassID = 50,
  QQuad_with_qsub_0_in_FPR128LoRegClassID = 51,
  QQuad_with_qsub_1_in_FPR128LoRegClassID = 52,
  QQuad_with_qsub_2_in_FPR128LoRegClassID = 53,
  QQuad_with_qsub_3_in_FPR128LoRegClassID = 54,
  QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoRegClassID = 55,
  QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClassID = 56,
  QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID = 57,
  QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClassID = 58,
  QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID = 59,
  QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID = 60
  };
}

// Subregister indices
namespace AArch64 {
enum {
  NoSubRegister,
  dsub_0,	// 1
  dsub_1,	// 2
  dsub_2,	// 3
  dsub_3,	// 4
  dsub_4,	// 5
  qqsub,	// 6
  qsub_0,	// 7
  qsub_1,	// 8
  qsub_2,	// 9
  qsub_3,	// 10
  sub_8,	// 11
  sub_16,	// 12
  sub_32,	// 13
  sub_64,	// 14
  sub_128,	// 15
  dsub_1_then_sub_8,	// 16
  dsub_1_then_sub_16,	// 17
  dsub_1_then_sub_32,	// 18
  qsub_1_then_sub_8,	// 19
  qsub_1_then_sub_16,	// 20
  qsub_1_then_sub_32,	// 21
  qsub_1_then_sub_64,	// 22
  dsub_2_then_sub_8,	// 23
  dsub_2_then_sub_16,	// 24
  dsub_2_then_sub_32,	// 25
  qsub_2_then_sub_8,	// 26
  qsub_2_then_sub_16,	// 27
  qsub_2_then_sub_32,	// 28
  qsub_2_then_sub_64,	// 29
  dsub_3_then_sub_8,	// 30
  dsub_3_then_sub_16,	// 31
  dsub_3_then_sub_32,	// 32
  qsub_3_then_sub_8,	// 33
  qsub_3_then_sub_16,	// 34
  qsub_3_then_sub_32,	// 35
  qsub_3_then_sub_64,	// 36
  sub_64_qsub_1_then_sub_64,	// 37
  dsub_0_dsub_1,	// 38
  dsub_1_dsub_2,	// 39
  qsub_0_qsub_1,	// 40
  qsub_1_qsub_2,	// 41
  sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64,	// 42
  qsub_1_then_sub_64_qsub_2_then_sub_64,	// 43
  dsub_0_dsub_1_dsub_2,	// 44
  dsub_1_dsub_2_dsub_3,	// 45
  dsub_2_dsub_3,	// 46
  qsub_0_qsub_1_qsub_2,	// 47
  qsub_1_qsub_2_qsub_3,	// 48
  qsub_2_qsub_3,	// 49
  sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64,	// 50
  qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64,	// 51
  qsub_2_then_sub_64_qsub_3_then_sub_64,	// 52
  NUM_TARGET_SUBREGS
};
}
} // End llvm namespace 
#endif // GET_REGINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*MC Register Information                                                     *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_MC_DESC
#undef GET_REGINFO_MC_DESC
namespace llvm {

extern const MCPhysReg AArch64RegDiffLists[] = {
  /* 0 */ 3, 1, 1, 1, 0,
  /* 5 */ 64, 64, 65440, 64, 125, 1, 31, 1, 30, 1, 1, 30, 1, 1, 29, 1, 1, 1, 29, 1, 1, 1, 0,
  /* 28 */ 157, 1, 62, 1, 1, 61, 1, 1, 1, 0,
  /* 38 */ 65151, 1, 1, 1, 0,
  /* 43 */ 65183, 1, 1, 1, 0,
  /* 48 */ 3, 1, 1, 0,
  /* 52 */ 64, 64, 65440, 64, 126, 31, 1, 31, 1, 30, 1, 1, 30, 1, 1, 29, 1, 1, 1, 29, 1, 1, 0,
  /* 75 */ 3, 29, 1, 1, 0,
  /* 80 */ 158, 31, 33, 30, 1, 33, 29, 1, 1, 0,
  /* 90 */ 32, 31, 1, 31, 1, 30, 1, 1, 30, 1, 1, 0,
  /* 102 */ 63, 1, 62, 1, 1, 0,
  /* 108 */ 65215, 1, 1, 0,
  /* 112 */ 65247, 1, 1, 0,
  /* 116 */ 3, 1, 0,
  /* 119 */ 64, 64, 65440, 64, 125, 1, 31, 1, 31, 1, 30, 1, 1, 30, 1, 1, 29, 1, 1, 1, 29, 1, 0,
  /* 142 */ 3, 1, 29, 1, 0,
  /* 147 */ 157, 1, 63, 1, 30, 33, 1, 29, 1, 0,
  /* 157 */ 32, 32, 31, 1, 31, 1, 30, 1, 1, 30, 1, 0,
  /* 169 */ 3, 30, 1, 0,
  /* 173 */ 64, 31, 33, 30, 1, 0,
  /* 179 */ 32, 31, 1, 31, 1, 0,
  /* 185 */ 63, 1, 0,
  /* 188 */ 65282, 96, 65472, 65472, 33, 96, 65472, 65472, 33, 96, 65472, 65472, 220, 1, 0,
  /* 203 */ 65282, 96, 65472, 65472, 33, 96, 65472, 65472, 1, 96, 65472, 65472, 252, 1, 0,
  /* 218 */ 65279, 1, 0,
  /* 221 */ 65311, 1, 0,
  /* 224 */ 2, 0,
  /* 226 */ 64, 64, 65440, 64, 125, 1, 31, 1, 30, 1, 1, 30, 1, 1, 30, 1, 1, 29, 1, 1, 1, 29, 0,
  /* 249 */ 3, 1, 1, 29, 0,
  /* 254 */ 157, 1, 62, 1, 1, 62, 1, 1, 29, 0,
  /* 264 */ 32, 31, 1, 31, 1, 31, 1, 30, 1, 1, 30, 0,
  /* 276 */ 3, 1, 30, 0,
  /* 280 */ 63, 1, 63, 1, 30, 0,
  /* 286 */ 32, 32, 31, 1, 31, 0,
  /* 292 */ 3, 31, 0,
  /* 295 */ 64, 31, 0,
  /* 298 */ 32, 0,
  /* 300 */ 65378, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 221, 0,
  /* 312 */ 65378, 65472, 96, 65472, 65472, 65, 65472, 96, 65472, 65472, 253, 0,
  /* 324 */ 65374, 0,
  /* 326 */ 65405, 0,
  /* 328 */ 65437, 0,
  /* 330 */ 65218, 96, 65472, 65472, 33, 96, 65472, 65472, 1, 96, 65472, 65472, 33, 96, 65472, 65472, 251, 1, 63, 1, 65441, 0,
  /* 352 */ 65314, 65472, 96, 65472, 65472, 65, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 252, 32, 65505, 63, 65441, 0,
  /* 373 */ 65250, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 65, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 251, 32, 1, 31, 65473, 95, 1, 65441, 126, 65473, 65441, 0,
  /* 405 */ 65469, 0,
  /* 407 */ 65346, 96, 65472, 65472, 1, 96, 65472, 65472, 0,
  /* 416 */ 65346, 96, 65472, 65472, 33, 96, 65472, 65472, 0,
  /* 425 */ 65472, 96, 65472, 65472, 0,
  /* 430 */ 65218, 96, 65472, 65472, 33, 96, 65472, 65472, 33, 96, 65472, 65472, 33, 96, 65472, 65472, 219, 1, 63, 1, 65473, 0,
  /* 452 */ 65218, 96, 65472, 65472, 33, 96, 65472, 65472, 33, 96, 65472, 65472, 1, 96, 65472, 65472, 251, 1, 63, 1, 65473, 0,
  /* 474 */ 65314, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 220, 32, 1, 31, 65473, 0,
  /* 495 */ 65314, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 65, 65472, 96, 65472, 65472, 252, 32, 1, 31, 65473, 0,
  /* 516 */ 65250, 65472, 96, 65472, 65472, 65, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 251, 32, 65505, 63, 65441, 127, 65505, 65473, 126, 65441, 65473, 0,
  /* 548 */ 65250, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 219, 32, 1, 31, 65473, 95, 1, 65473, 94, 65473, 65473, 0,
  /* 580 */ 65250, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 97, 65472, 96, 65472, 65472, 65, 65472, 96, 65472, 65472, 251, 32, 1, 31, 65473, 95, 1, 65473, 94, 65473, 65473, 0,
  /* 612 */ 65218, 96, 65472, 65472, 1, 96, 65472, 65472, 33, 96, 65472, 65472, 33, 96, 65472, 65472, 251, 65505, 95, 65505, 65473, 0,
  /* 634 */ 65501, 0,
  /* 636 */ 65282, 96, 65472, 65472, 1, 96, 65472, 65472, 33, 96, 65472, 65472, 252, 65505, 0,
  /* 651 */ 65533, 0,
  /* 653 */ 65534, 0,
  /* 655 */ 65535, 0,
};

extern const uint16_t AArch64SubRegIdxLists[] = {
  /* 0 */ 14, 13, 12, 11, 0,
  /* 5 */ 13, 0,
  /* 7 */ 1, 13, 12, 11, 2, 18, 17, 16, 0,
  /* 16 */ 7, 14, 13, 12, 11, 8, 22, 21, 20, 19, 37, 0,
  /* 28 */ 1, 13, 12, 11, 2, 18, 17, 16, 3, 25, 24, 23, 38, 39, 0,
  /* 43 */ 7, 14, 13, 12, 11, 8, 22, 21, 20, 19, 9, 29, 28, 27, 26, 37, 40, 41, 42, 43, 0,
  /* 64 */ 1, 13, 12, 11, 2, 18, 17, 16, 3, 25, 24, 23, 4, 32, 31, 30, 38, 39, 44, 45, 46, 0,
  /* 86 */ 7, 14, 13, 12, 11, 8, 22, 21, 20, 19, 9, 29, 28, 27, 26, 10, 36, 35, 34, 33, 37, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 0,
};

extern const MCRegisterInfo::SubRegCoveredBits AArch64SubRegIdxRanges[] = {
  { 65535, 65535 },
  { 0, 64 },	// dsub_0
  { 64, 64 },	// dsub_1
  { 128, 64 },	// dsub_2
  { 192, 64 },	// dsub_3
  { 256, 64 },	// dsub_4
  { 256, 256 },	// qqsub
  { 0, 128 },	// qsub_0
  { 128, 128 },	// qsub_1
  { 256, 128 },	// qsub_2
  { 384, 128 },	// qsub_3
  { 0, 8 },	// sub_8
  { 0, 16 },	// sub_16
  { 0, 32 },	// sub_32
  { 0, 64 },	// sub_64
  { 0, 128 },	// sub_128
  { 64, 8 },	// dsub_1_then_sub_8
  { 64, 16 },	// dsub_1_then_sub_16
  { 64, 32 },	// dsub_1_then_sub_32
  { 128, 8 },	// qsub_1_then_sub_8
  { 128, 16 },	// qsub_1_then_sub_16
  { 128, 32 },	// qsub_1_then_sub_32
  { 128, 64 },	// qsub_1_then_sub_64
  { 128, 8 },	// dsub_2_then_sub_8
  { 128, 16 },	// dsub_2_then_sub_16
  { 128, 32 },	// dsub_2_then_sub_32
  { 256, 8 },	// qsub_2_then_sub_8
  { 256, 16 },	// qsub_2_then_sub_16
  { 256, 32 },	// qsub_2_then_sub_32
  { 256, 64 },	// qsub_2_then_sub_64
  { 192, 8 },	// dsub_3_then_sub_8
  { 192, 16 },	// dsub_3_then_sub_16
  { 192, 32 },	// dsub_3_then_sub_32
  { 384, 8 },	// qsub_3_then_sub_8
  { 384, 16 },	// qsub_3_then_sub_16
  { 384, 32 },	// qsub_3_then_sub_32
  { 384, 64 },	// qsub_3_then_sub_64
  { 65535, 128 },	// sub_64_qsub_1_then_sub_64
  { 0, 128 },	// dsub_0_dsub_1
  { 64, 128 },	// dsub_1_dsub_2
  { 0, 256 },	// qsub_0_qsub_1
  { 128, 256 },	// qsub_1_qsub_2
  { 65535, 192 },	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  { 65535, 128 },	// qsub_1_then_sub_64_qsub_2_then_sub_64
  { 0, 192 },	// dsub_0_dsub_1_dsub_2
  { 64, 192 },	// dsub_1_dsub_2_dsub_3
  { 128, 128 },	// dsub_2_dsub_3
  { 0, 384 },	// qsub_0_qsub_1_qsub_2
  { 128, 384 },	// qsub_1_qsub_2_qsub_3
  { 256, 256 },	// qsub_2_qsub_3
  { 65535, 256 },	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
  { 65535, 192 },	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
  { 65535, 128 },	// qsub_2_then_sub_64_qsub_3_then_sub_64
};

extern const char AArch64RegStrings[] = {
  /* 0 */ 'B', '1', '0', 0,
  /* 4 */ 'D', '7', '_', 'D', '8', '_', 'D', '9', '_', 'D', '1', '0', 0,
  /* 17 */ 'H', '1', '0', 0,
  /* 21 */ 'Q', '7', '_', 'Q', '8', '_', 'Q', '9', '_', 'Q', '1', '0', 0,
  /* 34 */ 'S', '1', '0', 0,
  /* 38 */ 'W', '1', '0', 0,
  /* 42 */ 'X', '1', '0', 0,
  /* 46 */ 'B', '2', '0', 0,
  /* 50 */ 'D', '1', '7', '_', 'D', '1', '8', '_', 'D', '1', '9', '_', 'D', '2', '0', 0,
  /* 66 */ 'H', '2', '0', 0,
  /* 70 */ 'Q', '1', '7', '_', 'Q', '1', '8', '_', 'Q', '1', '9', '_', 'Q', '2', '0', 0,
  /* 86 */ 'S', '2', '0', 0,
  /* 90 */ 'W', '2', '0', 0,
  /* 94 */ 'X', '2', '0', 0,
  /* 98 */ 'B', '3', '0', 0,
  /* 102 */ 'D', '2', '7', '_', 'D', '2', '8', '_', 'D', '2', '9', '_', 'D', '3', '0', 0,
  /* 118 */ 'H', '3', '0', 0,
  /* 122 */ 'Q', '2', '7', '_', 'Q', '2', '8', '_', 'Q', '2', '9', '_', 'Q', '3', '0', 0,
  /* 138 */ 'S', '3', '0', 0,
  /* 142 */ 'W', '3', '0', 0,
  /* 146 */ 'X', '3', '0', 0,
  /* 150 */ 'B', '0', 0,
  /* 153 */ 'D', '2', '9', '_', 'D', '3', '0', '_', 'D', '3', '1', '_', 'D', '0', 0,
  /* 168 */ 'H', '0', 0,
  /* 171 */ 'Q', '2', '9', '_', 'Q', '3', '0', '_', 'Q', '3', '1', '_', 'Q', '0', 0,
  /* 186 */ 'S', '0', 0,
  /* 189 */ 'W', '0', 0,
  /* 192 */ 'X', '0', 0,
  /* 195 */ 'B', '1', '1', 0,
  /* 199 */ 'D', '8', '_', 'D', '9', '_', 'D', '1', '0', '_', 'D', '1', '1', 0,
  /* 213 */ 'H', '1', '1', 0,
  /* 217 */ 'Q', '8', '_', 'Q', '9', '_', 'Q', '1', '0', '_', 'Q', '1', '1', 0,
  /* 231 */ 'S', '1', '1', 0,
  /* 235 */ 'W', '1', '1', 0,
  /* 239 */ 'X', '1', '1', 0,
  /* 243 */ 'B', '2', '1', 0,
  /* 247 */ 'D', '1', '8', '_', 'D', '1', '9', '_', 'D', '2', '0', '_', 'D', '2', '1', 0,
  /* 263 */ 'H', '2', '1', 0,
  /* 267 */ 'Q', '1', '8', '_', 'Q', '1', '9', '_', 'Q', '2', '0', '_', 'Q', '2', '1', 0,
  /* 283 */ 'S', '2', '1', 0,
  /* 287 */ 'W', '2', '1', 0,
  /* 291 */ 'X', '2', '1', 0,
  /* 295 */ 'B', '3', '1', 0,
  /* 299 */ 'D', '2', '8', '_', 'D', '2', '9', '_', 'D', '3', '0', '_', 'D', '3', '1', 0,
  /* 315 */ 'H', '3', '1', 0,
  /* 319 */ 'Q', '2', '8', '_', 'Q', '2', '9', '_', 'Q', '3', '0', '_', 'Q', '3', '1', 0,
  /* 335 */ 'S', '3', '1', 0,
  /* 339 */ 'B', '1', 0,
  /* 342 */ 'D', '3', '0', '_', 'D', '3', '1', '_', 'D', '0', '_', 'D', '1', 0,
  /* 356 */ 'H', '1', 0,
  /* 359 */ 'Q', '3', '0', '_', 'Q', '3', '1', '_', 'Q', '0', '_', 'Q', '1', 0,
  /* 373 */ 'S', '1', 0,
  /* 376 */ 'W', '1', 0,
  /* 379 */ 'X', '1', 0,
  /* 382 */ 'B', '1', '2', 0,
  /* 386 */ 'D', '9', '_', 'D', '1', '0', '_', 'D', '1', '1', '_', 'D', '1', '2', 0,
  /* 401 */ 'H', '1', '2', 0,
  /* 405 */ 'Q', '9', '_', 'Q', '1', '0', '_', 'Q', '1', '1', '_', 'Q', '1', '2', 0,
  /* 420 */ 'S', '1', '2', 0,
  /* 424 */ 'W', '1', '2', 0,
  /* 428 */ 'X', '1', '2', 0,
  /* 432 */ 'B', '2', '2', 0,
  /* 436 */ 'D', '1', '9', '_', 'D', '2', '0', '_', 'D', '2', '1', '_', 'D', '2', '2', 0,
  /* 452 */ 'H', '2', '2', 0,
  /* 456 */ 'Q', '1', '9', '_', 'Q', '2', '0', '_', 'Q', '2', '1', '_', 'Q', '2', '2', 0,
  /* 472 */ 'S', '2', '2', 0,
  /* 476 */ 'W', '2', '2', 0,
  /* 480 */ 'X', '2', '2', 0,
  /* 484 */ 'B', '2', 0,
  /* 487 */ 'D', '3', '1', '_', 'D', '0', '_', 'D', '1', '_', 'D', '2', 0,
  /* 500 */ 'H', '2', 0,
  /* 503 */ 'Q', '3', '1', '_', 'Q', '0', '_', 'Q', '1', '_', 'Q', '2', 0,
  /* 516 */ 'S', '2', 0,
  /* 519 */ 'W', '2', 0,
  /* 522 */ 'X', '2', 0,
  /* 525 */ 'B', '1', '3', 0,
  /* 529 */ 'D', '1', '0', '_', 'D', '1', '1', '_', 'D', '1', '2', '_', 'D', '1', '3', 0,
  /* 545 */ 'H', '1', '3', 0,
  /* 549 */ 'Q', '1', '0', '_', 'Q', '1', '1', '_', 'Q', '1', '2', '_', 'Q', '1', '3', 0,
  /* 565 */ 'S', '1', '3', 0,
  /* 569 */ 'W', '1', '3', 0,
  /* 573 */ 'X', '1', '3', 0,
  /* 577 */ 'B', '2', '3', 0,
  /* 581 */ 'D', '2', '0', '_', 'D', '2', '1', '_', 'D', '2', '2', '_', 'D', '2', '3', 0,
  /* 597 */ 'H', '2', '3', 0,
  /* 601 */ 'Q', '2', '0', '_', 'Q', '2', '1', '_', 'Q', '2', '2', '_', 'Q', '2', '3', 0,
  /* 617 */ 'S', '2', '3', 0,
  /* 621 */ 'W', '2', '3', 0,
  /* 625 */ 'X', '2', '3', 0,
  /* 629 */ 'B', '3', 0,
  /* 632 */ 'D', '0', '_', 'D', '1', '_', 'D', '2', '_', 'D', '3', 0,
  /* 644 */ 'H', '3', 0,
  /* 647 */ 'Q', '0', '_', 'Q', '1', '_', 'Q', '2', '_', 'Q', '3', 0,
  /* 659 */ 'S', '3', 0,
  /* 662 */ 'W', '3', 0,
  /* 665 */ 'X', '3', 0,
  /* 668 */ 'B', '1', '4', 0,
  /* 672 */ 'D', '1', '1', '_', 'D', '1', '2', '_', 'D', '1', '3', '_', 'D', '1', '4', 0,
  /* 688 */ 'H', '1', '4', 0,
  /* 692 */ 'Q', '1', '1', '_', 'Q', '1', '2', '_', 'Q', '1', '3', '_', 'Q', '1', '4', 0,
  /* 708 */ 'S', '1', '4', 0,
  /* 712 */ 'W', '1', '4', 0,
  /* 716 */ 'X', '1', '4', 0,
  /* 720 */ 'B', '2', '4', 0,
  /* 724 */ 'D', '2', '1', '_', 'D', '2', '2', '_', 'D', '2', '3', '_', 'D', '2', '4', 0,
  /* 740 */ 'H', '2', '4', 0,
  /* 744 */ 'Q', '2', '1', '_', 'Q', '2', '2', '_', 'Q', '2', '3', '_', 'Q', '2', '4', 0,
  /* 760 */ 'S', '2', '4', 0,
  /* 764 */ 'W', '2', '4', 0,
  /* 768 */ 'X', '2', '4', 0,
  /* 772 */ 'B', '4', 0,
  /* 775 */ 'D', '1', '_', 'D', '2', '_', 'D', '3', '_', 'D', '4', 0,
  /* 787 */ 'H', '4', 0,
  /* 790 */ 'Q', '1', '_', 'Q', '2', '_', 'Q', '3', '_', 'Q', '4', 0,
  /* 802 */ 'S', '4', 0,
  /* 805 */ 'W', '4', 0,
  /* 808 */ 'X', '4', 0,
  /* 811 */ 'B', '1', '5', 0,
  /* 815 */ 'D', '1', '2', '_', 'D', '1', '3', '_', 'D', '1', '4', '_', 'D', '1', '5', 0,
  /* 831 */ 'H', '1', '5', 0,
  /* 835 */ 'Q', '1', '2', '_', 'Q', '1', '3', '_', 'Q', '1', '4', '_', 'Q', '1', '5', 0,
  /* 851 */ 'S', '1', '5', 0,
  /* 855 */ 'W', '1', '5', 0,
  /* 859 */ 'X', '1', '5', 0,
  /* 863 */ 'B', '2', '5', 0,
  /* 867 */ 'D', '2', '2', '_', 'D', '2', '3', '_', 'D', '2', '4', '_', 'D', '2', '5', 0,
  /* 883 */ 'H', '2', '5', 0,
  /* 887 */ 'Q', '2', '2', '_', 'Q', '2', '3', '_', 'Q', '2', '4', '_', 'Q', '2', '5', 0,
  /* 903 */ 'S', '2', '5', 0,
  /* 907 */ 'W', '2', '5', 0,
  /* 911 */ 'X', '2', '5', 0,
  /* 915 */ 'B', '5', 0,
  /* 918 */ 'D', '2', '_', 'D', '3', '_', 'D', '4', '_', 'D', '5', 0,
  /* 930 */ 'H', '5', 0,
  /* 933 */ 'Q', '2', '_', 'Q', '3', '_', 'Q', '4', '_', 'Q', '5', 0,
  /* 945 */ 'S', '5', 0,
  /* 948 */ 'W', '5', 0,
  /* 951 */ 'X', '5', 0,
  /* 954 */ 'B', '1', '6', 0,
  /* 958 */ 'D', '1', '3', '_', 'D', '1', '4', '_', 'D', '1', '5', '_', 'D', '1', '6', 0,
  /* 974 */ 'H', '1', '6', 0,
  /* 978 */ 'Q', '1', '3', '_', 'Q', '1', '4', '_', 'Q', '1', '5', '_', 'Q', '1', '6', 0,
  /* 994 */ 'S', '1', '6', 0,
  /* 998 */ 'W', '1', '6', 0,
  /* 1002 */ 'X', '1', '6', 0,
  /* 1006 */ 'B', '2', '6', 0,
  /* 1010 */ 'D', '2', '3', '_', 'D', '2', '4', '_', 'D', '2', '5', '_', 'D', '2', '6', 0,
  /* 1026 */ 'H', '2', '6', 0,
  /* 1030 */ 'Q', '2', '3', '_', 'Q', '2', '4', '_', 'Q', '2', '5', '_', 'Q', '2', '6', 0,
  /* 1046 */ 'S', '2', '6', 0,
  /* 1050 */ 'W', '2', '6', 0,
  /* 1054 */ 'X', '2', '6', 0,
  /* 1058 */ 'B', '6', 0,
  /* 1061 */ 'D', '3', '_', 'D', '4', '_', 'D', '5', '_', 'D', '6', 0,
  /* 1073 */ 'H', '6', 0,
  /* 1076 */ 'Q', '3', '_', 'Q', '4', '_', 'Q', '5', '_', 'Q', '6', 0,
  /* 1088 */ 'S', '6', 0,
  /* 1091 */ 'W', '6', 0,
  /* 1094 */ 'X', '6', 0,
  /* 1097 */ 'B', '1', '7', 0,
  /* 1101 */ 'D', '1', '4', '_', 'D', '1', '5', '_', 'D', '1', '6', '_', 'D', '1', '7', 0,
  /* 1117 */ 'H', '1', '7', 0,
  /* 1121 */ 'Q', '1', '4', '_', 'Q', '1', '5', '_', 'Q', '1', '6', '_', 'Q', '1', '7', 0,
  /* 1137 */ 'S', '1', '7', 0,
  /* 1141 */ 'W', '1', '7', 0,
  /* 1145 */ 'X', '1', '7', 0,
  /* 1149 */ 'B', '2', '7', 0,
  /* 1153 */ 'D', '2', '4', '_', 'D', '2', '5', '_', 'D', '2', '6', '_', 'D', '2', '7', 0,
  /* 1169 */ 'H', '2', '7', 0,
  /* 1173 */ 'Q', '2', '4', '_', 'Q', '2', '5', '_', 'Q', '2', '6', '_', 'Q', '2', '7', 0,
  /* 1189 */ 'S', '2', '7', 0,
  /* 1193 */ 'W', '2', '7', 0,
  /* 1197 */ 'X', '2', '7', 0,
  /* 1201 */ 'B', '7', 0,
  /* 1204 */ 'D', '4', '_', 'D', '5', '_', 'D', '6', '_', 'D', '7', 0,
  /* 1216 */ 'H', '7', 0,
  /* 1219 */ 'Q', '4', '_', 'Q', '5', '_', 'Q', '6', '_', 'Q', '7', 0,
  /* 1231 */ 'S', '7', 0,
  /* 1234 */ 'W', '7', 0,
  /* 1237 */ 'X', '7', 0,
  /* 1240 */ 'B', '1', '8', 0,
  /* 1244 */ 'D', '1', '5', '_', 'D', '1', '6', '_', 'D', '1', '7', '_', 'D', '1', '8', 0,
  /* 1260 */ 'H', '1', '8', 0,
  /* 1264 */ 'Q', '1', '5', '_', 'Q', '1', '6', '_', 'Q', '1', '7', '_', 'Q', '1', '8', 0,
  /* 1280 */ 'S', '1', '8', 0,
  /* 1284 */ 'W', '1', '8', 0,
  /* 1288 */ 'X', '1', '8', 0,
  /* 1292 */ 'B', '2', '8', 0,
  /* 1296 */ 'D', '2', '5', '_', 'D', '2', '6', '_', 'D', '2', '7', '_', 'D', '2', '8', 0,
  /* 1312 */ 'H', '2', '8', 0,
  /* 1316 */ 'Q', '2', '5', '_', 'Q', '2', '6', '_', 'Q', '2', '7', '_', 'Q', '2', '8', 0,
  /* 1332 */ 'S', '2', '8', 0,
  /* 1336 */ 'W', '2', '8', 0,
  /* 1340 */ 'X', '2', '8', 0,
  /* 1344 */ 'B', '8', 0,
  /* 1347 */ 'D', '5', '_', 'D', '6', '_', 'D', '7', '_', 'D', '8', 0,
  /* 1359 */ 'H', '8', 0,
  /* 1362 */ 'Q', '5', '_', 'Q', '6', '_', 'Q', '7', '_', 'Q', '8', 0,
  /* 1374 */ 'S', '8', 0,
  /* 1377 */ 'W', '8', 0,
  /* 1380 */ 'X', '8', 0,
  /* 1383 */ 'B', '1', '9', 0,
  /* 1387 */ 'D', '1', '6', '_', 'D', '1', '7', '_', 'D', '1', '8', '_', 'D', '1', '9', 0,
  /* 1403 */ 'H', '1', '9', 0,
  /* 1407 */ 'Q', '1', '6', '_', 'Q', '1', '7', '_', 'Q', '1', '8', '_', 'Q', '1', '9', 0,
  /* 1423 */ 'S', '1', '9', 0,
  /* 1427 */ 'W', '1', '9', 0,
  /* 1431 */ 'X', '1', '9', 0,
  /* 1435 */ 'B', '2', '9', 0,
  /* 1439 */ 'D', '2', '6', '_', 'D', '2', '7', '_', 'D', '2', '8', '_', 'D', '2', '9', 0,
  /* 1455 */ 'H', '2', '9', 0,
  /* 1459 */ 'Q', '2', '6', '_', 'Q', '2', '7', '_', 'Q', '2', '8', '_', 'Q', '2', '9', 0,
  /* 1475 */ 'S', '2', '9', 0,
  /* 1479 */ 'W', '2', '9', 0,
  /* 1483 */ 'X', '2', '9', 0,
  /* 1487 */ 'B', '9', 0,
  /* 1490 */ 'D', '6', '_', 'D', '7', '_', 'D', '8', '_', 'D', '9', 0,
  /* 1502 */ 'H', '9', 0,
  /* 1505 */ 'Q', '6', '_', 'Q', '7', '_', 'Q', '8', '_', 'Q', '9', 0,
  /* 1517 */ 'S', '9', 0,
  /* 1520 */ 'W', '9', 0,
  /* 1523 */ 'X', '9', 0,
  /* 1526 */ 'W', 'S', 'P', 0,
  /* 1530 */ 'X', 'S', 'P', 0,
  /* 1534 */ 'W', 'Z', 'R', 0,
  /* 1538 */ 'X', 'Z', 'R', 0,
  /* 1542 */ 'N', 'Z', 'C', 'V', 0,
};

extern const MCRegisterDesc AArch64RegDesc[] = { // Descriptors
  { 3, 0, 0, 0, 0 },
  { 1542, 4, 4, 4, 10481 },
  { 1526, 4, 224, 4, 10481 },
  { 1534, 4, 224, 4, 10481 },
  { 1530, 653, 4, 5, 10417 },
  { 1538, 653, 4, 5, 10417 },
  { 150, 4, 52, 4, 10417 },
  { 339, 4, 119, 4, 10417 },
  { 484, 4, 226, 4, 10417 },
  { 629, 4, 5, 4, 10417 },
  { 772, 4, 5, 4, 10417 },
  { 915, 4, 5, 4, 10417 },
  { 1058, 4, 5, 4, 10417 },
  { 1201, 4, 5, 4, 10417 },
  { 1344, 4, 5, 4, 10417 },
  { 1487, 4, 5, 4, 10417 },
  { 0, 4, 5, 4, 10417 },
  { 195, 4, 5, 4, 10417 },
  { 382, 4, 5, 4, 10417 },
  { 525, 4, 5, 4, 10417 },
  { 668, 4, 5, 4, 10417 },
  { 811, 4, 5, 4, 10417 },
  { 954, 4, 5, 4, 10417 },
  { 1097, 4, 5, 4, 10417 },
  { 1240, 4, 5, 4, 10417 },
  { 1383, 4, 5, 4, 10417 },
  { 46, 4, 5, 4, 10417 },
  { 243, 4, 5, 4, 10417 },
  { 432, 4, 5, 4, 10417 },
  { 577, 4, 5, 4, 10417 },
  { 720, 4, 5, 4, 10417 },
  { 863, 4, 5, 4, 10417 },
  { 1006, 4, 5, 4, 10417 },
  { 1149, 4, 5, 4, 10417 },
  { 1292, 4, 5, 4, 10417 },
  { 1435, 4, 5, 4, 10417 },
  { 98, 4, 5, 4, 10417 },
  { 295, 4, 5, 4, 10417 },
  { 165, 412, 55, 1, 10145 },
  { 353, 412, 122, 1, 10145 },
  { 497, 412, 229, 1, 10145 },
  { 641, 412, 8, 1, 10145 },
  { 784, 412, 8, 1, 10145 },
  { 927, 412, 8, 1, 10145 },
  { 1070, 412, 8, 1, 10145 },
  { 1213, 412, 8, 1, 10145 },
  { 1356, 412, 8, 1, 10145 },
  { 1499, 412, 8, 1, 10145 },
  { 13, 412, 8, 1, 10145 },
  { 209, 412, 8, 1, 10145 },
  { 397, 412, 8, 1, 10145 },
  { 541, 412, 8, 1, 10145 },
  { 684, 412, 8, 1, 10145 },
  { 827, 412, 8, 1, 10145 },
  { 970, 412, 8, 1, 10145 },
  { 1113, 412, 8, 1, 10145 },
  { 1256, 412, 8, 1, 10145 },
  { 1399, 412, 8, 1, 10145 },
  { 62, 412, 8, 1, 10145 },
  { 259, 412, 8, 1, 10145 },
  { 448, 412, 8, 1, 10145 },
  { 593, 412, 8, 1, 10145 },
  { 736, 412, 8, 1, 10145 },
  { 879, 412, 8, 1, 10145 },
  { 1022, 412, 8, 1, 10145 },
  { 1165, 412, 8, 1, 10145 },
  { 1308, 412, 8, 1, 10145 },
  { 1451, 412, 8, 1, 10145 },
  { 114, 412, 8, 1, 10145 },
  { 311, 412, 8, 1, 10145 },
  { 168, 414, 53, 3, 6481 },
  { 356, 414, 120, 3, 6481 },
  { 500, 414, 227, 3, 6481 },
  { 644, 414, 6, 3, 6481 },
  { 787, 414, 6, 3, 6481 },
  { 930, 414, 6, 3, 6481 },
  { 1073, 414, 6, 3, 6481 },
  { 1216, 414, 6, 3, 6481 },
  { 1359, 414, 6, 3, 6481 },
  { 1502, 414, 6, 3, 6481 },
  { 17, 414, 6, 3, 6481 },
  { 213, 414, 6, 3, 6481 },
  { 401, 414, 6, 3, 6481 },
  { 545, 414, 6, 3, 6481 },
  { 688, 414, 6, 3, 6481 },
  { 831, 414, 6, 3, 6481 },
  { 974, 414, 6, 3, 6481 },
  { 1117, 414, 6, 3, 6481 },
  { 1260, 414, 6, 3, 6481 },
  { 1403, 414, 6, 3, 6481 },
  { 66, 414, 6, 3, 6481 },
  { 263, 414, 6, 3, 6481 },
  { 452, 414, 6, 3, 6481 },
  { 597, 414, 6, 3, 6481 },
  { 740, 414, 6, 3, 6481 },
  { 883, 414, 6, 3, 6481 },
  { 1026, 414, 6, 3, 6481 },
  { 1169, 414, 6, 3, 6481 },
  { 1312, 414, 6, 3, 6481 },
  { 1455, 414, 6, 3, 6481 },
  { 118, 414, 6, 3, 6481 },
  { 315, 414, 6, 3, 6481 },
  { 183, 425, 80, 0, 5249 },
  { 370, 425, 147, 0, 5249 },
  { 513, 425, 254, 0, 5249 },
  { 656, 425, 28, 0, 5249 },
  { 799, 425, 28, 0, 5249 },
  { 942, 425, 28, 0, 5249 },
  { 1085, 425, 28, 0, 5249 },
  { 1228, 425, 28, 0, 5249 },
  { 1371, 425, 28, 0, 5249 },
  { 1514, 425, 28, 0, 5249 },
  { 30, 425, 28, 0, 5249 },
  { 227, 425, 28, 0, 5249 },
  { 416, 425, 28, 0, 5249 },
  { 561, 425, 28, 0, 5249 },
  { 704, 425, 28, 0, 5249 },
  { 847, 425, 28, 0, 5249 },
  { 990, 425, 28, 0, 5249 },
  { 1133, 425, 28, 0, 5249 },
  { 1276, 425, 28, 0, 5249 },
  { 1419, 425, 28, 0, 5249 },
  { 82, 425, 28, 0, 5249 },
  { 279, 425, 28, 0, 5249 },
  { 468, 425, 28, 0, 5249 },
  { 613, 425, 28, 0, 5249 },
  { 756, 425, 28, 0, 5249 },
  { 899, 425, 28, 0, 5249 },
  { 1042, 425, 28, 0, 5249 },
  { 1185, 425, 28, 0, 5249 },
  { 1328, 425, 28, 0, 5249 },
  { 1471, 425, 28, 0, 5249 },
  { 134, 425, 28, 0, 5249 },
  { 331, 425, 28, 0, 5249 },
  { 186, 413, 54, 2, 5217 },
  { 373, 413, 121, 2, 5217 },
  { 516, 413, 228, 2, 5217 },
  { 659, 413, 7, 2, 5217 },
  { 802, 413, 7, 2, 5217 },
  { 945, 413, 7, 2, 5217 },
  { 1088, 413, 7, 2, 5217 },
  { 1231, 413, 7, 2, 5217 },
  { 1374, 413, 7, 2, 5217 },
  { 1517, 413, 7, 2, 5217 },
  { 34, 413, 7, 2, 5217 },
  { 231, 413, 7, 2, 5217 },
  { 420, 413, 7, 2, 5217 },
  { 565, 413, 7, 2, 5217 },
  { 708, 413, 7, 2, 5217 },
  { 851, 413, 7, 2, 5217 },
  { 994, 413, 7, 2, 5217 },
  { 1137, 413, 7, 2, 5217 },
  { 1280, 413, 7, 2, 5217 },
  { 1423, 413, 7, 2, 5217 },
  { 86, 413, 7, 2, 5217 },
  { 283, 413, 7, 2, 5217 },
  { 472, 413, 7, 2, 5217 },
  { 617, 413, 7, 2, 5217 },
  { 760, 413, 7, 2, 5217 },
  { 903, 413, 7, 2, 5217 },
  { 1046, 413, 7, 2, 5217 },
  { 1189, 413, 7, 2, 5217 },
  { 1332, 413, 7, 2, 5217 },
  { 1475, 413, 7, 2, 5217 },
  { 138, 413, 7, 2, 5217 },
  { 335, 413, 7, 2, 5217 },
  { 189, 4, 290, 4, 5217 },
  { 376, 4, 290, 4, 5217 },
  { 519, 4, 290, 4, 5217 },
  { 662, 4, 290, 4, 5217 },
  { 805, 4, 290, 4, 5217 },
  { 948, 4, 290, 4, 5217 },
  { 1091, 4, 290, 4, 5217 },
  { 1234, 4, 290, 4, 5217 },
  { 1377, 4, 290, 4, 5217 },
  { 1520, 4, 290, 4, 5217 },
  { 38, 4, 290, 4, 5217 },
  { 235, 4, 290, 4, 5217 },
  { 424, 4, 290, 4, 5217 },
  { 569, 4, 290, 4, 5217 },
  { 712, 4, 290, 4, 5217 },
  { 855, 4, 290, 4, 5217 },
  { 998, 4, 290, 4, 5217 },
  { 1141, 4, 290, 4, 5217 },
  { 1284, 4, 290, 4, 5217 },
  { 1427, 4, 290, 4, 5217 },
  { 90, 4, 290, 4, 5217 },
  { 287, 4, 290, 4, 5217 },
  { 476, 4, 290, 4, 5217 },
  { 621, 4, 290, 4, 5217 },
  { 764, 4, 290, 4, 5217 },
  { 907, 4, 290, 4, 5217 },
  { 1050, 4, 290, 4, 5217 },
  { 1193, 4, 290, 4, 5217 },
  { 1336, 4, 290, 4, 5217 },
  { 1479, 4, 290, 4, 5217 },
  { 142, 4, 290, 4, 5217 },
  { 192, 649, 4, 5, 5185 },
  { 379, 649, 4, 5, 5185 },
  { 522, 649, 4, 5, 5185 },
  { 665, 649, 4, 5, 5185 },
  { 808, 649, 4, 5, 5185 },
  { 951, 649, 4, 5, 5185 },
  { 1094, 649, 4, 5, 5185 },
  { 1237, 649, 4, 5, 5185 },
  { 1380, 649, 4, 5, 5185 },
  { 1523, 649, 4, 5, 5185 },
  { 42, 649, 4, 5, 5185 },
  { 239, 649, 4, 5, 5185 },
  { 428, 649, 4, 5, 5185 },
  { 573, 649, 4, 5, 5185 },
  { 716, 649, 4, 5, 5185 },
  { 859, 649, 4, 5, 5185 },
  { 1002, 649, 4, 5, 5185 },
  { 1145, 649, 4, 5, 5185 },
  { 1288, 649, 4, 5, 5185 },
  { 1431, 649, 4, 5, 5185 },
  { 94, 649, 4, 5, 5185 },
  { 291, 649, 4, 5, 5185 },
  { 480, 649, 4, 5, 5185 },
  { 625, 649, 4, 5, 5185 },
  { 768, 649, 4, 5, 5185 },
  { 911, 649, 4, 5, 5185 },
  { 1054, 649, 4, 5, 5185 },
  { 1197, 649, 4, 5, 5185 },
  { 1340, 649, 4, 5, 5185 },
  { 1483, 649, 4, 5, 5185 },
  { 146, 649, 4, 5, 5185 },
  { 350, 416, 157, 7, 3537 },
  { 494, 416, 264, 7, 3537 },
  { 638, 416, 90, 7, 3537 },
  { 781, 416, 90, 7, 3537 },
  { 924, 416, 90, 7, 3537 },
  { 1067, 416, 90, 7, 3537 },
  { 1210, 416, 90, 7, 3537 },
  { 1353, 416, 90, 7, 3537 },
  { 1496, 416, 90, 7, 3537 },
  { 10, 416, 90, 7, 3537 },
  { 205, 416, 90, 7, 3537 },
  { 393, 416, 90, 7, 3537 },
  { 537, 416, 90, 7, 3537 },
  { 680, 416, 90, 7, 3537 },
  { 823, 416, 90, 7, 3537 },
  { 966, 416, 90, 7, 3537 },
  { 1109, 416, 90, 7, 3537 },
  { 1252, 416, 90, 7, 3537 },
  { 1395, 416, 90, 7, 3537 },
  { 58, 416, 90, 7, 3537 },
  { 255, 416, 90, 7, 3537 },
  { 444, 416, 90, 7, 3537 },
  { 589, 416, 90, 7, 3537 },
  { 732, 416, 90, 7, 3537 },
  { 875, 416, 90, 7, 3537 },
  { 1018, 416, 90, 7, 3537 },
  { 1161, 416, 90, 7, 3537 },
  { 1304, 416, 90, 7, 3537 },
  { 1447, 416, 90, 7, 3537 },
  { 110, 416, 90, 7, 3537 },
  { 307, 416, 90, 7, 3537 },
  { 161, 407, 90, 7, 4672 },
  { 367, 300, 173, 16, 1856 },
  { 510, 300, 280, 16, 3489 },
  { 653, 300, 102, 16, 3489 },
  { 796, 300, 102, 16, 3489 },
  { 939, 300, 102, 16, 3489 },
  { 1082, 300, 102, 16, 3489 },
  { 1225, 300, 102, 16, 3489 },
  { 1368, 300, 102, 16, 3489 },
  { 1511, 300, 102, 16, 3489 },
  { 27, 300, 102, 16, 3489 },
  { 223, 300, 102, 16, 3489 },
  { 412, 300, 102, 16, 3489 },
  { 557, 300, 102, 16, 3489 },
  { 700, 300, 102, 16, 3489 },
  { 843, 300, 102, 16, 3489 },
  { 986, 300, 102, 16, 3489 },
  { 1129, 300, 102, 16, 3489 },
  { 1272, 300, 102, 16, 3489 },
  { 1415, 300, 102, 16, 3489 },
  { 78, 300, 102, 16, 3489 },
  { 275, 300, 102, 16, 3489 },
  { 464, 300, 102, 16, 3489 },
  { 609, 300, 102, 16, 3489 },
  { 752, 300, 102, 16, 3489 },
  { 895, 300, 102, 16, 3489 },
  { 1038, 300, 102, 16, 3489 },
  { 1181, 300, 102, 16, 3489 },
  { 1324, 300, 102, 16, 3489 },
  { 1467, 300, 102, 16, 3489 },
  { 130, 300, 102, 16, 3489 },
  { 327, 300, 102, 16, 3489 },
  { 179, 312, 102, 16, 4672 },
  { 491, 188, 286, 28, 1793 },
  { 635, 188, 179, 28, 1793 },
  { 778, 188, 179, 28, 1793 },
  { 921, 188, 179, 28, 1793 },
  { 1064, 188, 179, 28, 1793 },
  { 1207, 188, 179, 28, 1793 },
  { 1350, 188, 179, 28, 1793 },
  { 1493, 188, 179, 28, 1793 },
  { 7, 188, 179, 28, 1793 },
  { 202, 188, 179, 28, 1793 },
  { 389, 188, 179, 28, 1793 },
  { 533, 188, 179, 28, 1793 },
  { 676, 188, 179, 28, 1793 },
  { 819, 188, 179, 28, 1793 },
  { 962, 188, 179, 28, 1793 },
  { 1105, 188, 179, 28, 1793 },
  { 1248, 188, 179, 28, 1793 },
  { 1391, 188, 179, 28, 1793 },
  { 54, 188, 179, 28, 1793 },
  { 251, 188, 179, 28, 1793 },
  { 440, 188, 179, 28, 1793 },
  { 585, 188, 179, 28, 1793 },
  { 728, 188, 179, 28, 1793 },
  { 871, 188, 179, 28, 1793 },
  { 1014, 188, 179, 28, 1793 },
  { 1157, 188, 179, 28, 1793 },
  { 1300, 188, 179, 28, 1793 },
  { 1443, 188, 179, 28, 1793 },
  { 106, 188, 179, 28, 1793 },
  { 303, 188, 179, 28, 1793 },
  { 157, 203, 179, 28, 2704 },
  { 346, 636, 179, 28, 4416 },
  { 507, 474, 295, 43, 768 },
  { 650, 474, 185, 43, 1729 },
  { 793, 474, 185, 43, 1729 },
  { 936, 474, 185, 43, 1729 },
  { 1079, 474, 185, 43, 1729 },
  { 1222, 474, 185, 43, 1729 },
  { 1365, 474, 185, 43, 1729 },
  { 1508, 474, 185, 43, 1729 },
  { 24, 474, 185, 43, 1729 },
  { 220, 474, 185, 43, 1729 },
  { 408, 474, 185, 43, 1729 },
  { 553, 474, 185, 43, 1729 },
  { 696, 474, 185, 43, 1729 },
  { 839, 474, 185, 43, 1729 },
  { 982, 474, 185, 43, 1729 },
  { 1125, 474, 185, 43, 1729 },
  { 1268, 474, 185, 43, 1729 },
  { 1411, 474, 185, 43, 1729 },
  { 74, 474, 185, 43, 1729 },
  { 271, 474, 185, 43, 1729 },
  { 460, 474, 185, 43, 1729 },
  { 605, 474, 185, 43, 1729 },
  { 748, 474, 185, 43, 1729 },
  { 891, 474, 185, 43, 1729 },
  { 1034, 474, 185, 43, 1729 },
  { 1177, 474, 185, 43, 1729 },
  { 1320, 474, 185, 43, 1729 },
  { 1463, 474, 185, 43, 1729 },
  { 126, 474, 185, 43, 1729 },
  { 323, 474, 185, 43, 1729 },
  { 175, 495, 185, 43, 2704 },
  { 363, 352, 185, 43, 4416 },
  { 632, 430, 298, 64, 689 },
  { 775, 430, 298, 64, 689 },
  { 918, 430, 298, 64, 689 },
  { 1061, 430, 298, 64, 689 },
  { 1204, 430, 298, 64, 689 },
  { 1347, 430, 298, 64, 689 },
  { 1490, 430, 298, 64, 689 },
  { 4, 430, 298, 64, 689 },
  { 199, 430, 298, 64, 689 },
  { 386, 430, 298, 64, 689 },
  { 529, 430, 298, 64, 689 },
  { 672, 430, 298, 64, 689 },
  { 815, 430, 298, 64, 689 },
  { 958, 430, 298, 64, 689 },
  { 1101, 430, 298, 64, 689 },
  { 1244, 430, 298, 64, 689 },
  { 1387, 430, 298, 64, 689 },
  { 50, 430, 298, 64, 689 },
  { 247, 430, 298, 64, 689 },
  { 436, 430, 298, 64, 689 },
  { 581, 430, 298, 64, 689 },
  { 724, 430, 298, 64, 689 },
  { 867, 430, 298, 64, 689 },
  { 1010, 430, 298, 64, 689 },
  { 1153, 430, 298, 64, 689 },
  { 1296, 430, 298, 64, 689 },
  { 1439, 430, 298, 64, 689 },
  { 102, 430, 298, 64, 689 },
  { 299, 430, 298, 64, 689 },
  { 153, 452, 298, 64, 1200 },
  { 342, 330, 298, 64, 2272 },
  { 487, 612, 298, 64, 3984 },
  { 647, 548, 4, 86, 0 },
  { 790, 548, 4, 86, 609 },
  { 933, 548, 4, 86, 609 },
  { 1076, 548, 4, 86, 609 },
  { 1219, 548, 4, 86, 609 },
  { 1362, 548, 4, 86, 609 },
  { 1505, 548, 4, 86, 609 },
  { 21, 548, 4, 86, 609 },
  { 217, 548, 4, 86, 609 },
  { 405, 548, 4, 86, 609 },
  { 549, 548, 4, 86, 609 },
  { 692, 548, 4, 86, 609 },
  { 835, 548, 4, 86, 609 },
  { 978, 548, 4, 86, 609 },
  { 1121, 548, 4, 86, 609 },
  { 1264, 548, 4, 86, 609 },
  { 1407, 548, 4, 86, 609 },
  { 70, 548, 4, 86, 609 },
  { 267, 548, 4, 86, 609 },
  { 456, 548, 4, 86, 609 },
  { 601, 548, 4, 86, 609 },
  { 744, 548, 4, 86, 609 },
  { 887, 548, 4, 86, 609 },
  { 1030, 548, 4, 86, 609 },
  { 1173, 548, 4, 86, 609 },
  { 1316, 548, 4, 86, 609 },
  { 1459, 548, 4, 86, 609 },
  { 122, 548, 4, 86, 609 },
  { 319, 548, 4, 86, 609 },
  { 171, 580, 4, 86, 1200 },
  { 359, 373, 4, 86, 2272 },
  { 503, 516, 4, 86, 3984 },
};

extern const uint16_t AArch64RegUnitRoots[][2] = {
  { AArch64::NZCV },
  { AArch64::WSP },
  { AArch64::WZR },
  { AArch64::B0 },
  { AArch64::B1 },
  { AArch64::B2 },
  { AArch64::B3 },
  { AArch64::B4 },
  { AArch64::B5 },
  { AArch64::B6 },
  { AArch64::B7 },
  { AArch64::B8 },
  { AArch64::B9 },
  { AArch64::B10 },
  { AArch64::B11 },
  { AArch64::B12 },
  { AArch64::B13 },
  { AArch64::B14 },
  { AArch64::B15 },
  { AArch64::B16 },
  { AArch64::B17 },
  { AArch64::B18 },
  { AArch64::B19 },
  { AArch64::B20 },
  { AArch64::B21 },
  { AArch64::B22 },
  { AArch64::B23 },
  { AArch64::B24 },
  { AArch64::B25 },
  { AArch64::B26 },
  { AArch64::B27 },
  { AArch64::B28 },
  { AArch64::B29 },
  { AArch64::B30 },
  { AArch64::B31 },
  { AArch64::W0 },
  { AArch64::W1 },
  { AArch64::W2 },
  { AArch64::W3 },
  { AArch64::W4 },
  { AArch64::W5 },
  { AArch64::W6 },
  { AArch64::W7 },
  { AArch64::W8 },
  { AArch64::W9 },
  { AArch64::W10 },
  { AArch64::W11 },
  { AArch64::W12 },
  { AArch64::W13 },
  { AArch64::W14 },
  { AArch64::W15 },
  { AArch64::W16 },
  { AArch64::W17 },
  { AArch64::W18 },
  { AArch64::W19 },
  { AArch64::W20 },
  { AArch64::W21 },
  { AArch64::W22 },
  { AArch64::W23 },
  { AArch64::W24 },
  { AArch64::W25 },
  { AArch64::W26 },
  { AArch64::W27 },
  { AArch64::W28 },
  { AArch64::W29 },
  { AArch64::W30 },
};

namespace {     // Register classes...
  // FPR8 Register Class...
  const uint16_t FPR8[] = {
    AArch64::B0, AArch64::B1, AArch64::B2, AArch64::B3, AArch64::B4, AArch64::B5, AArch64::B6, AArch64::B7, AArch64::B8, AArch64::B9, AArch64::B10, AArch64::B11, AArch64::B12, AArch64::B13, AArch64::B14, AArch64::B15, AArch64::B16, AArch64::B17, AArch64::B18, AArch64::B19, AArch64::B20, AArch64::B21, AArch64::B22, AArch64::B23, AArch64::B24, AArch64::B25, AArch64::B26, AArch64::B27, AArch64::B28, AArch64::B29, AArch64::B30, AArch64::B31, 
  };

  // FPR8 Bit set.
  const uint8_t FPR8Bits[] = {
    0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // FPR16 Register Class...
  const uint16_t FPR16[] = {
    AArch64::H0, AArch64::H1, AArch64::H2, AArch64::H3, AArch64::H4, AArch64::H5, AArch64::H6, AArch64::H7, AArch64::H8, AArch64::H9, AArch64::H10, AArch64::H11, AArch64::H12, AArch64::H13, AArch64::H14, AArch64::H15, AArch64::H16, AArch64::H17, AArch64::H18, AArch64::H19, AArch64::H20, AArch64::H21, AArch64::H22, AArch64::H23, AArch64::H24, AArch64::H25, AArch64::H26, AArch64::H27, AArch64::H28, AArch64::H29, AArch64::H30, AArch64::H31, 
  };

  // FPR16 Bit set.
  const uint8_t FPR16Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // FPR32 Register Class...
  const uint16_t FPR32[] = {
    AArch64::S0, AArch64::S1, AArch64::S2, AArch64::S3, AArch64::S4, AArch64::S5, AArch64::S6, AArch64::S7, AArch64::S8, AArch64::S9, AArch64::S10, AArch64::S11, AArch64::S12, AArch64::S13, AArch64::S14, AArch64::S15, AArch64::S16, AArch64::S17, AArch64::S18, AArch64::S19, AArch64::S20, AArch64::S21, AArch64::S22, AArch64::S23, AArch64::S24, AArch64::S25, AArch64::S26, AArch64::S27, AArch64::S28, AArch64::S29, AArch64::S30, AArch64::S31, 
  };

  // FPR32 Bit set.
  const uint8_t FPR32Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // GPR32 Register Class...
  const uint16_t GPR32[] = {
    AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WZR, 
  };

  // GPR32 Bit set.
  const uint8_t GPR32Bits[] = {
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x1f, 
  };

  // GPR32wsp Register Class...
  const uint16_t GPR32wsp[] = {
    AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, AArch64::WSP, 
  };

  // GPR32wsp Bit set.
  const uint8_t GPR32wspBits[] = {
    0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x1f, 
  };

  // GPR32nowzr Register Class...
  const uint16_t GPR32nowzr[] = {
    AArch64::W0, AArch64::W1, AArch64::W2, AArch64::W3, AArch64::W4, AArch64::W5, AArch64::W6, AArch64::W7, AArch64::W8, AArch64::W9, AArch64::W10, AArch64::W11, AArch64::W12, AArch64::W13, AArch64::W14, AArch64::W15, AArch64::W16, AArch64::W17, AArch64::W18, AArch64::W19, AArch64::W20, AArch64::W21, AArch64::W22, AArch64::W23, AArch64::W24, AArch64::W25, AArch64::W26, AArch64::W27, AArch64::W28, AArch64::W29, AArch64::W30, 
  };

  // GPR32nowzr Bit set.
  const uint8_t GPR32nowzrBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x1f, 
  };

  // FlagClass Register Class...
  const uint16_t FlagClass[] = {
    AArch64::NZCV, 
  };

  // FlagClass Bit set.
  const uint8_t FlagClassBits[] = {
    0x02, 
  };

  // Rwsp Register Class...
  const uint16_t Rwsp[] = {
    AArch64::WSP, 
  };

  // Rwsp Bit set.
  const uint8_t RwspBits[] = {
    0x04, 
  };

  // FPR64 Register Class...
  const uint16_t FPR64[] = {
    AArch64::D0, AArch64::D1, AArch64::D2, AArch64::D3, AArch64::D4, AArch64::D5, AArch64::D6, AArch64::D7, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, AArch64::D16, AArch64::D17, AArch64::D18, AArch64::D19, AArch64::D20, AArch64::D21, AArch64::D22, AArch64::D23, AArch64::D24, AArch64::D25, AArch64::D26, AArch64::D27, AArch64::D28, AArch64::D29, AArch64::D30, AArch64::D31, 
  };

  // FPR64 Bit set.
  const uint8_t FPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // GPR64 Register Class...
  const uint16_t GPR64[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::X29, AArch64::X30, AArch64::XZR, 
  };

  // GPR64 Bit set.
  const uint8_t GPR64Bits[] = {
    0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // GPR64xsp Register Class...
  const uint16_t GPR64xsp[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::X29, AArch64::X30, AArch64::XSP, 
  };

  // GPR64xsp Bit set.
  const uint8_t GPR64xspBits[] = {
    0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // GPR64noxzr Register Class...
  const uint16_t GPR64noxzr[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X8, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, AArch64::X19, AArch64::X20, AArch64::X21, AArch64::X22, AArch64::X23, AArch64::X24, AArch64::X25, AArch64::X26, AArch64::X27, AArch64::X28, AArch64::X29, AArch64::X30, 
  };

  // GPR64noxzr Bit set.
  const uint8_t GPR64noxzrBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // tcGPR64 Register Class...
  const uint16_t tcGPR64[] = {
    AArch64::X0, AArch64::X1, AArch64::X2, AArch64::X3, AArch64::X4, AArch64::X5, AArch64::X6, AArch64::X7, AArch64::X9, AArch64::X10, AArch64::X11, AArch64::X12, AArch64::X13, AArch64::X14, AArch64::X15, AArch64::X16, AArch64::X17, AArch64::X18, 
  };

  // tcGPR64 Bit set.
  const uint8_t tcGPR64Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xdf, 0xff, 
  };

  // FPR64Lo Register Class...
  const uint16_t FPR64Lo[] = {
    AArch64::D0, AArch64::D1, AArch64::D2, AArch64::D3, AArch64::D4, AArch64::D5, AArch64::D6, AArch64::D7, AArch64::D8, AArch64::D9, AArch64::D10, AArch64::D11, AArch64::D12, AArch64::D13, AArch64::D14, AArch64::D15, 
  };

  // FPR64Lo Bit set.
  const uint8_t FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 
  };

  // Rxsp Register Class...
  const uint16_t Rxsp[] = {
    AArch64::XSP, 
  };

  // Rxsp Bit set.
  const uint8_t RxspBits[] = {
    0x10, 
  };

  // DPair Register Class...
  const uint16_t DPair[] = {
    AArch64::D0_D1, AArch64::D1_D2, AArch64::D2_D3, AArch64::D3_D4, AArch64::D4_D5, AArch64::D5_D6, AArch64::D6_D7, AArch64::D7_D8, AArch64::D8_D9, AArch64::D9_D10, AArch64::D10_D11, AArch64::D11_D12, AArch64::D12_D13, AArch64::D13_D14, AArch64::D14_D15, AArch64::D15_D16, AArch64::D16_D17, AArch64::D17_D18, AArch64::D18_D19, AArch64::D19_D20, AArch64::D20_D21, AArch64::D21_D22, AArch64::D22_D23, AArch64::D23_D24, AArch64::D24_D25, AArch64::D25_D26, AArch64::D26_D27, AArch64::D27_D28, AArch64::D28_D29, AArch64::D29_D30, AArch64::D30_D31, AArch64::D31_D0, 
  };

  // DPair Bit set.
  const uint8_t DPairBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // DPair_with_dsub_0_in_FPR64Lo Register Class...
  const uint16_t DPair_with_dsub_0_in_FPR64Lo[] = {
    AArch64::D0_D1, AArch64::D1_D2, AArch64::D2_D3, AArch64::D3_D4, AArch64::D4_D5, AArch64::D5_D6, AArch64::D6_D7, AArch64::D7_D8, AArch64::D8_D9, AArch64::D9_D10, AArch64::D10_D11, AArch64::D11_D12, AArch64::D12_D13, AArch64::D13_D14, AArch64::D14_D15, AArch64::D15_D16, 
  };

  // DPair_with_dsub_0_in_FPR64Lo Bit set.
  const uint8_t DPair_with_dsub_0_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 
  };

  // DPair_with_dsub_1_in_FPR64Lo Register Class...
  const uint16_t DPair_with_dsub_1_in_FPR64Lo[] = {
    AArch64::D0_D1, AArch64::D1_D2, AArch64::D2_D3, AArch64::D3_D4, AArch64::D4_D5, AArch64::D5_D6, AArch64::D6_D7, AArch64::D7_D8, AArch64::D8_D9, AArch64::D9_D10, AArch64::D10_D11, AArch64::D11_D12, AArch64::D12_D13, AArch64::D13_D14, AArch64::D14_D15, AArch64::D31_D0, 
  };

  // DPair_with_dsub_1_in_FPR64Lo Bit set.
  const uint8_t DPair_with_dsub_1_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 0x00, 0x08, 
  };

  // DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo Register Class...
  const uint16_t DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo[] = {
    AArch64::D0_D1, AArch64::D1_D2, AArch64::D2_D3, AArch64::D3_D4, AArch64::D4_D5, AArch64::D5_D6, AArch64::D6_D7, AArch64::D7_D8, AArch64::D8_D9, AArch64::D9_D10, AArch64::D10_D11, AArch64::D11_D12, AArch64::D12_D13, AArch64::D13_D14, AArch64::D14_D15, 
  };

  // DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo Bit set.
  const uint8_t DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 
  };

  // FPR128 Register Class...
  const uint16_t FPR128[] = {
    AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, AArch64::Q16, AArch64::Q17, AArch64::Q18, AArch64::Q19, AArch64::Q20, AArch64::Q21, AArch64::Q22, AArch64::Q23, AArch64::Q24, AArch64::Q25, AArch64::Q26, AArch64::Q27, AArch64::Q28, AArch64::Q29, AArch64::Q30, AArch64::Q31, 
  };

  // FPR128 Bit set.
  const uint8_t FPR128Bits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3f, 
  };

  // FPR128Lo Register Class...
  const uint16_t FPR128Lo[] = {
    AArch64::Q0, AArch64::Q1, AArch64::Q2, AArch64::Q3, AArch64::Q4, AArch64::Q5, AArch64::Q6, AArch64::Q7, AArch64::Q8, AArch64::Q9, AArch64::Q10, AArch64::Q11, AArch64::Q12, AArch64::Q13, AArch64::Q14, AArch64::Q15, 
  };

  // FPR128Lo Bit set.
  const uint8_t FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 
  };

  // DTriple Register Class...
  const uint16_t DTriple[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D14_D15_D16, AArch64::D15_D16_D17, AArch64::D16_D17_D18, AArch64::D17_D18_D19, AArch64::D18_D19_D20, AArch64::D19_D20_D21, AArch64::D20_D21_D22, AArch64::D21_D22_D23, AArch64::D22_D23_D24, AArch64::D23_D24_D25, AArch64::D24_D25_D26, AArch64::D25_D26_D27, AArch64::D26_D27_D28, AArch64::D27_D28_D29, AArch64::D28_D29_D30, AArch64::D29_D30_D31, AArch64::D30_D31_D0, AArch64::D31_D0_D1, 
  };

  // DTriple Bit set.
  const uint8_t DTripleBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // DTriple_with_dsub_0_in_FPR64Lo Register Class...
  const uint16_t DTriple_with_dsub_0_in_FPR64Lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D14_D15_D16, AArch64::D15_D16_D17, 
  };

  // DTriple_with_dsub_0_in_FPR64Lo Bit set.
  const uint8_t DTriple_with_dsub_0_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 
  };

  // DTriple_with_dsub_1_in_FPR64Lo Register Class...
  const uint16_t DTriple_with_dsub_1_in_FPR64Lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D14_D15_D16, AArch64::D31_D0_D1, 
  };

  // DTriple_with_dsub_1_in_FPR64Lo Bit set.
  const uint8_t DTriple_with_dsub_1_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 0x00, 0x08, 
  };

  // DTriple_with_dsub_2_in_FPR64Lo Register Class...
  const uint16_t DTriple_with_dsub_2_in_FPR64Lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D30_D31_D0, AArch64::D31_D0_D1, 
  };

  // DTriple_with_dsub_2_in_FPR64Lo Bit set.
  const uint8_t DTriple_with_dsub_2_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 0x00, 0x0c, 
  };

  // DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo Register Class...
  const uint16_t DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D14_D15_D16, 
  };

  // DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo Bit set.
  const uint8_t DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 
  };

  // DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo Register Class...
  const uint16_t DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, AArch64::D31_D0_D1, 
  };

  // DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo Bit set.
  const uint8_t DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 0x00, 0x08, 
  };

  // DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo Register Class...
  const uint16_t DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo[] = {
    AArch64::D0_D1_D2, AArch64::D1_D2_D3, AArch64::D2_D3_D4, AArch64::D3_D4_D5, AArch64::D4_D5_D6, AArch64::D5_D6_D7, AArch64::D6_D7_D8, AArch64::D7_D8_D9, AArch64::D8_D9_D10, AArch64::D9_D10_D11, AArch64::D10_D11_D12, AArch64::D11_D12_D13, AArch64::D12_D13_D14, AArch64::D13_D14_D15, 
  };

  // DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo Bit set.
  const uint8_t DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 
  };

  // DQuad Register Class...
  const uint16_t DQuad[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D14_D15_D16_D17, AArch64::D15_D16_D17_D18, AArch64::D16_D17_D18_D19, AArch64::D17_D18_D19_D20, AArch64::D18_D19_D20_D21, AArch64::D19_D20_D21_D22, AArch64::D20_D21_D22_D23, AArch64::D21_D22_D23_D24, AArch64::D22_D23_D24_D25, AArch64::D23_D24_D25_D26, AArch64::D24_D25_D26_D27, AArch64::D25_D26_D27_D28, AArch64::D26_D27_D28_D29, AArch64::D27_D28_D29_D30, AArch64::D28_D29_D30_D31, AArch64::D29_D30_D31_D0, AArch64::D30_D31_D0_D1, AArch64::D31_D0_D1_D2, 
  };

  // DQuad Bit set.
  const uint8_t DQuadBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // DQuad_with_dsub_0_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_0_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D14_D15_D16_D17, AArch64::D15_D16_D17_D18, 
  };

  // DQuad_with_dsub_0_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_0_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 
  };

  // DQuad_with_dsub_1_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_1_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D14_D15_D16_D17, AArch64::D31_D0_D1_D2, 
  };

  // DQuad_with_dsub_1_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_1_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 0x00, 0x08, 
  };

  // DQuad_with_dsub_2_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_2_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D30_D31_D0_D1, AArch64::D31_D0_D1_D2, 
  };

  // DQuad_with_dsub_2_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_2_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 0x00, 0x0c, 
  };

  // DQuad_with_dsub_3_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_3_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D29_D30_D31_D0, AArch64::D30_D31_D0_D1, AArch64::D31_D0_D1_D2, 
  };

  // DQuad_with_dsub_3_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_3_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x01, 0x00, 0x0e, 
  };

  // DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D14_D15_D16_D17, 
  };

  // DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 
  };

  // DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, AArch64::D31_D0_D1_D2, 
  };

  // DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 0x00, 0x08, 
  };

  // DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D30_D31_D0_D1, AArch64::D31_D0_D1_D2, 
  };

  // DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x01, 0x00, 0x0c, 
  };

  // DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D13_D14_D15_D16, 
  };

  // DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 
  };

  // DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, AArch64::D31_D0_D1_D2, 
  };

  // DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x01, 0x00, 0x08, 
  };

  // DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo Register Class...
  const uint16_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo[] = {
    AArch64::D0_D1_D2_D3, AArch64::D1_D2_D3_D4, AArch64::D2_D3_D4_D5, AArch64::D3_D4_D5_D6, AArch64::D4_D5_D6_D7, AArch64::D5_D6_D7_D8, AArch64::D6_D7_D8_D9, AArch64::D7_D8_D9_D10, AArch64::D8_D9_D10_D11, AArch64::D9_D10_D11_D12, AArch64::D10_D11_D12_D13, AArch64::D11_D12_D13_D14, AArch64::D12_D13_D14_D15, 
  };

  // DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo Bit set.
  const uint8_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x01, 
  };

  // QPair Register Class...
  const uint16_t QPair[] = {
    AArch64::Q0_Q1, AArch64::Q1_Q2, AArch64::Q2_Q3, AArch64::Q3_Q4, AArch64::Q4_Q5, AArch64::Q5_Q6, AArch64::Q6_Q7, AArch64::Q7_Q8, AArch64::Q8_Q9, AArch64::Q9_Q10, AArch64::Q10_Q11, AArch64::Q11_Q12, AArch64::Q12_Q13, AArch64::Q13_Q14, AArch64::Q14_Q15, AArch64::Q15_Q16, AArch64::Q16_Q17, AArch64::Q17_Q18, AArch64::Q18_Q19, AArch64::Q19_Q20, AArch64::Q20_Q21, AArch64::Q21_Q22, AArch64::Q22_Q23, AArch64::Q23_Q24, AArch64::Q24_Q25, AArch64::Q25_Q26, AArch64::Q26_Q27, AArch64::Q27_Q28, AArch64::Q28_Q29, AArch64::Q29_Q30, AArch64::Q30_Q31, AArch64::Q31_Q0, 
  };

  // QPair Bit set.
  const uint8_t QPairBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // QPair_with_qsub_0_in_FPR128Lo Register Class...
  const uint16_t QPair_with_qsub_0_in_FPR128Lo[] = {
    AArch64::Q0_Q1, AArch64::Q1_Q2, AArch64::Q2_Q3, AArch64::Q3_Q4, AArch64::Q4_Q5, AArch64::Q5_Q6, AArch64::Q6_Q7, AArch64::Q7_Q8, AArch64::Q8_Q9, AArch64::Q9_Q10, AArch64::Q10_Q11, AArch64::Q11_Q12, AArch64::Q12_Q13, AArch64::Q13_Q14, AArch64::Q14_Q15, AArch64::Q15_Q16, 
  };

  // QPair_with_qsub_0_in_FPR128Lo Bit set.
  const uint8_t QPair_with_qsub_0_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 
  };

  // QPair_with_qsub_1_in_FPR128Lo Register Class...
  const uint16_t QPair_with_qsub_1_in_FPR128Lo[] = {
    AArch64::Q0_Q1, AArch64::Q1_Q2, AArch64::Q2_Q3, AArch64::Q3_Q4, AArch64::Q4_Q5, AArch64::Q5_Q6, AArch64::Q6_Q7, AArch64::Q7_Q8, AArch64::Q8_Q9, AArch64::Q9_Q10, AArch64::Q10_Q11, AArch64::Q11_Q12, AArch64::Q12_Q13, AArch64::Q13_Q14, AArch64::Q14_Q15, AArch64::Q31_Q0, 
  };

  // QPair_with_qsub_1_in_FPR128Lo Bit set.
  const uint8_t QPair_with_qsub_1_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 0x00, 0x08, 
  };

  // QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo Register Class...
  const uint16_t QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo[] = {
    AArch64::Q0_Q1, AArch64::Q1_Q2, AArch64::Q2_Q3, AArch64::Q3_Q4, AArch64::Q4_Q5, AArch64::Q5_Q6, AArch64::Q6_Q7, AArch64::Q7_Q8, AArch64::Q8_Q9, AArch64::Q9_Q10, AArch64::Q10_Q11, AArch64::Q11_Q12, AArch64::Q12_Q13, AArch64::Q13_Q14, AArch64::Q14_Q15, 
  };

  // QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo Bit set.
  const uint8_t QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 
  };

  // QTriple Register Class...
  const uint16_t QTriple[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q14_Q15_Q16, AArch64::Q15_Q16_Q17, AArch64::Q16_Q17_Q18, AArch64::Q17_Q18_Q19, AArch64::Q18_Q19_Q20, AArch64::Q19_Q20_Q21, AArch64::Q20_Q21_Q22, AArch64::Q21_Q22_Q23, AArch64::Q22_Q23_Q24, AArch64::Q23_Q24_Q25, AArch64::Q24_Q25_Q26, AArch64::Q25_Q26_Q27, AArch64::Q26_Q27_Q28, AArch64::Q27_Q28_Q29, AArch64::Q28_Q29_Q30, AArch64::Q29_Q30_Q31, AArch64::Q30_Q31_Q0, AArch64::Q31_Q0_Q1, 
  };

  // QTriple Bit set.
  const uint8_t QTripleBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // QTriple_with_qsub_0_in_FPR128Lo Register Class...
  const uint16_t QTriple_with_qsub_0_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q14_Q15_Q16, AArch64::Q15_Q16_Q17, 
  };

  // QTriple_with_qsub_0_in_FPR128Lo Bit set.
  const uint8_t QTriple_with_qsub_0_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 
  };

  // QTriple_with_qsub_1_in_FPR128Lo Register Class...
  const uint16_t QTriple_with_qsub_1_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q14_Q15_Q16, AArch64::Q31_Q0_Q1, 
  };

  // QTriple_with_qsub_1_in_FPR128Lo Bit set.
  const uint8_t QTriple_with_qsub_1_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 0x00, 0x08, 
  };

  // QTriple_with_qsub_2_in_FPR128Lo Register Class...
  const uint16_t QTriple_with_qsub_2_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q30_Q31_Q0, AArch64::Q31_Q0_Q1, 
  };

  // QTriple_with_qsub_2_in_FPR128Lo Bit set.
  const uint8_t QTriple_with_qsub_2_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 0x00, 0x0c, 
  };

  // QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo Register Class...
  const uint16_t QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q14_Q15_Q16, 
  };

  // QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo Bit set.
  const uint8_t QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 
  };

  // QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo Register Class...
  const uint16_t QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, AArch64::Q31_Q0_Q1, 
  };

  // QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo Bit set.
  const uint8_t QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 0x00, 0x08, 
  };

  // QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo Register Class...
  const uint16_t QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2, AArch64::Q1_Q2_Q3, AArch64::Q2_Q3_Q4, AArch64::Q3_Q4_Q5, AArch64::Q4_Q5_Q6, AArch64::Q5_Q6_Q7, AArch64::Q6_Q7_Q8, AArch64::Q7_Q8_Q9, AArch64::Q8_Q9_Q10, AArch64::Q9_Q10_Q11, AArch64::Q10_Q11_Q12, AArch64::Q11_Q12_Q13, AArch64::Q12_Q13_Q14, AArch64::Q13_Q14_Q15, 
  };

  // QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo Bit set.
  const uint8_t QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 
  };

  // QQuad Register Class...
  const uint16_t QQuad[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q14_Q15_Q16_Q17, AArch64::Q15_Q16_Q17_Q18, AArch64::Q16_Q17_Q18_Q19, AArch64::Q17_Q18_Q19_Q20, AArch64::Q18_Q19_Q20_Q21, AArch64::Q19_Q20_Q21_Q22, AArch64::Q20_Q21_Q22_Q23, AArch64::Q21_Q22_Q23_Q24, AArch64::Q22_Q23_Q24_Q25, AArch64::Q23_Q24_Q25_Q26, AArch64::Q24_Q25_Q26_Q27, AArch64::Q25_Q26_Q27_Q28, AArch64::Q26_Q27_Q28_Q29, AArch64::Q27_Q28_Q29_Q30, AArch64::Q28_Q29_Q30_Q31, AArch64::Q29_Q30_Q31_Q0, AArch64::Q30_Q31_Q0_Q1, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQuad Bit set.
  const uint8_t QQuadBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff, 0x0f, 
  };

  // QQuad_with_qsub_0_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_0_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q14_Q15_Q16_Q17, AArch64::Q15_Q16_Q17_Q18, 
  };

  // QQuad_with_qsub_0_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_0_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 
  };

  // QQuad_with_qsub_1_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_1_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q14_Q15_Q16_Q17, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQuad_with_qsub_1_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_1_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 0x00, 0x08, 
  };

  // QQuad_with_qsub_2_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_2_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q30_Q31_Q0_Q1, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQuad_with_qsub_2_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_2_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 0x00, 0x0c, 
  };

  // QQuad_with_qsub_3_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_3_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q29_Q30_Q31_Q0, AArch64::Q30_Q31_Q0_Q1, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQuad_with_qsub_3_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_3_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x01, 0x00, 0x0e, 
  };

  // QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q14_Q15_Q16_Q17, 
  };

  // QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x07, 
  };

  // QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 0x00, 0x08, 
  };

  // QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q30_Q31_Q0_Q1, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x01, 0x00, 0x0c, 
  };

  // QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q13_Q14_Q15_Q16, 
  };

  // QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x03, 
  };

  // QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, AArch64::Q31_Q0_Q1_Q2, 
  };

  // QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x01, 0x00, 0x08, 
  };

  // QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo Register Class...
  const uint16_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo[] = {
    AArch64::Q0_Q1_Q2_Q3, AArch64::Q1_Q2_Q3_Q4, AArch64::Q2_Q3_Q4_Q5, AArch64::Q3_Q4_Q5_Q6, AArch64::Q4_Q5_Q6_Q7, AArch64::Q5_Q6_Q7_Q8, AArch64::Q6_Q7_Q8_Q9, AArch64::Q7_Q8_Q9_Q10, AArch64::Q8_Q9_Q10_Q11, AArch64::Q9_Q10_Q11_Q12, AArch64::Q10_Q11_Q12_Q13, AArch64::Q11_Q12_Q13_Q14, AArch64::Q12_Q13_Q14_Q15, 
  };

  // QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo Bit set.
  const uint8_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x01, 
  };

}

extern const MCRegisterClass AArch64MCRegisterClasses[] = {
  { "FPR8", FPR8, FPR8Bits, 32, sizeof(FPR8Bits), AArch64::FPR8RegClassID, 1, 1, 1, 1 },
  { "FPR16", FPR16, FPR16Bits, 32, sizeof(FPR16Bits), AArch64::FPR16RegClassID, 2, 2, 1, 1 },
  { "FPR32", FPR32, FPR32Bits, 32, sizeof(FPR32Bits), AArch64::FPR32RegClassID, 4, 4, 1, 1 },
  { "GPR32", GPR32, GPR32Bits, 32, sizeof(GPR32Bits), AArch64::GPR32RegClassID, 4, 4, 1, 1 },
  { "GPR32wsp", GPR32wsp, GPR32wspBits, 32, sizeof(GPR32wspBits), AArch64::GPR32wspRegClassID, 4, 4, 1, 1 },
  { "GPR32nowzr", GPR32nowzr, GPR32nowzrBits, 31, sizeof(GPR32nowzrBits), AArch64::GPR32nowzrRegClassID, 4, 4, 1, 1 },
  { "FlagClass", FlagClass, FlagClassBits, 1, sizeof(FlagClassBits), AArch64::FlagClassRegClassID, 4, 4, -1, 0 },
  { "Rwsp", Rwsp, RwspBits, 1, sizeof(RwspBits), AArch64::RwspRegClassID, 4, 4, 1, 1 },
  { "FPR64", FPR64, FPR64Bits, 32, sizeof(FPR64Bits), AArch64::FPR64RegClassID, 8, 8, 1, 1 },
  { "GPR64", GPR64, GPR64Bits, 32, sizeof(GPR64Bits), AArch64::GPR64RegClassID, 8, 8, 1, 1 },
  { "GPR64xsp", GPR64xsp, GPR64xspBits, 32, sizeof(GPR64xspBits), AArch64::GPR64xspRegClassID, 8, 8, 1, 1 },
  { "GPR64noxzr", GPR64noxzr, GPR64noxzrBits, 31, sizeof(GPR64noxzrBits), AArch64::GPR64noxzrRegClassID, 8, 8, 1, 1 },
  { "tcGPR64", tcGPR64, tcGPR64Bits, 18, sizeof(tcGPR64Bits), AArch64::tcGPR64RegClassID, 8, 8, 1, 1 },
  { "FPR64Lo", FPR64Lo, FPR64LoBits, 16, sizeof(FPR64LoBits), AArch64::FPR64LoRegClassID, 8, 8, 1, 1 },
  { "Rxsp", Rxsp, RxspBits, 1, sizeof(RxspBits), AArch64::RxspRegClassID, 8, 8, 1, 1 },
  { "DPair", DPair, DPairBits, 32, sizeof(DPairBits), AArch64::DPairRegClassID, 16, 8, 1, 1 },
  { "DPair_with_dsub_0_in_FPR64Lo", DPair_with_dsub_0_in_FPR64Lo, DPair_with_dsub_0_in_FPR64LoBits, 16, sizeof(DPair_with_dsub_0_in_FPR64LoBits), AArch64::DPair_with_dsub_0_in_FPR64LoRegClassID, 16, 8, 1, 1 },
  { "DPair_with_dsub_1_in_FPR64Lo", DPair_with_dsub_1_in_FPR64Lo, DPair_with_dsub_1_in_FPR64LoBits, 16, sizeof(DPair_with_dsub_1_in_FPR64LoBits), AArch64::DPair_with_dsub_1_in_FPR64LoRegClassID, 16, 8, 1, 1 },
  { "DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo", DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo, DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoBits, 15, sizeof(DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoBits), AArch64::DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoRegClassID, 16, 8, 1, 1 },
  { "FPR128", FPR128, FPR128Bits, 32, sizeof(FPR128Bits), AArch64::FPR128RegClassID, 16, 16, 1, 1 },
  { "FPR128Lo", FPR128Lo, FPR128LoBits, 16, sizeof(FPR128LoBits), AArch64::FPR128LoRegClassID, 16, 16, 1, 1 },
  { "DTriple", DTriple, DTripleBits, 32, sizeof(DTripleBits), AArch64::DTripleRegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_0_in_FPR64Lo", DTriple_with_dsub_0_in_FPR64Lo, DTriple_with_dsub_0_in_FPR64LoBits, 16, sizeof(DTriple_with_dsub_0_in_FPR64LoBits), AArch64::DTriple_with_dsub_0_in_FPR64LoRegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_1_in_FPR64Lo", DTriple_with_dsub_1_in_FPR64Lo, DTriple_with_dsub_1_in_FPR64LoBits, 16, sizeof(DTriple_with_dsub_1_in_FPR64LoBits), AArch64::DTriple_with_dsub_1_in_FPR64LoRegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_2_in_FPR64Lo", DTriple_with_dsub_2_in_FPR64Lo, DTriple_with_dsub_2_in_FPR64LoBits, 16, sizeof(DTriple_with_dsub_2_in_FPR64LoBits), AArch64::DTriple_with_dsub_2_in_FPR64LoRegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo", DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo, DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoBits, 15, sizeof(DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoBits), AArch64::DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoRegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo", DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo, DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoBits, 15, sizeof(DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoBits), AArch64::DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClassID, 24, 8, 1, 1 },
  { "DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo", DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo, DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoBits, 14, sizeof(DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoBits), AArch64::DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClassID, 24, 8, 1, 1 },
  { "DQuad", DQuad, DQuadBits, 32, sizeof(DQuadBits), AArch64::DQuadRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_0_in_FPR64Lo", DQuad_with_dsub_0_in_FPR64Lo, DQuad_with_dsub_0_in_FPR64LoBits, 16, sizeof(DQuad_with_dsub_0_in_FPR64LoBits), AArch64::DQuad_with_dsub_0_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_1_in_FPR64Lo", DQuad_with_dsub_1_in_FPR64Lo, DQuad_with_dsub_1_in_FPR64LoBits, 16, sizeof(DQuad_with_dsub_1_in_FPR64LoBits), AArch64::DQuad_with_dsub_1_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_2_in_FPR64Lo", DQuad_with_dsub_2_in_FPR64Lo, DQuad_with_dsub_2_in_FPR64LoBits, 16, sizeof(DQuad_with_dsub_2_in_FPR64LoBits), AArch64::DQuad_with_dsub_2_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_3_in_FPR64Lo", DQuad_with_dsub_3_in_FPR64Lo, DQuad_with_dsub_3_in_FPR64LoBits, 16, sizeof(DQuad_with_dsub_3_in_FPR64LoBits), AArch64::DQuad_with_dsub_3_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo", DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo, DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoBits, 15, sizeof(DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoBits), AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo", DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo, DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoBits, 15, sizeof(DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoBits), AArch64::DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo", DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo, DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits, 15, sizeof(DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits), AArch64::DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo", DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo, DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoBits, 14, sizeof(DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoBits), AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo", DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo, DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits, 14, sizeof(DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits), AArch64::DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo", DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo, DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits, 13, sizeof(DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoBits), AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID, 32, 8, 1, 1 },
  { "QPair", QPair, QPairBits, 32, sizeof(QPairBits), AArch64::QPairRegClassID, 32, 16, 1, 1 },
  { "QPair_with_qsub_0_in_FPR128Lo", QPair_with_qsub_0_in_FPR128Lo, QPair_with_qsub_0_in_FPR128LoBits, 16, sizeof(QPair_with_qsub_0_in_FPR128LoBits), AArch64::QPair_with_qsub_0_in_FPR128LoRegClassID, 32, 16, 1, 1 },
  { "QPair_with_qsub_1_in_FPR128Lo", QPair_with_qsub_1_in_FPR128Lo, QPair_with_qsub_1_in_FPR128LoBits, 16, sizeof(QPair_with_qsub_1_in_FPR128LoBits), AArch64::QPair_with_qsub_1_in_FPR128LoRegClassID, 32, 16, 1, 1 },
  { "QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo", QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo, QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoBits, 15, sizeof(QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoBits), AArch64::QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoRegClassID, 32, 16, 1, 1 },
  { "QTriple", QTriple, QTripleBits, 32, sizeof(QTripleBits), AArch64::QTripleRegClassID, 48, 16, 1, 1 },
  { "QTriple_with_qsub_0_in_FPR128Lo", QTriple_with_qsub_0_in_FPR128Lo, QTriple_with_qsub_0_in_FPR128LoBits, 16, sizeof(QTriple_with_qsub_0_in_FPR128LoBits), AArch64::QTriple_with_qsub_0_in_FPR128LoRegClassID, 48, 16, 1, 1 },
  { "QTriple_with_qsub_1_in_FPR128Lo", QTriple_with_qsub_1_in_FPR128Lo, QTriple_with_qsub_1_in_FPR128LoBits, 16, sizeof(QTriple_with_qsub_1_in_FPR128LoBits), AArch64::QTriple_with_qsub_1_in_FPR128LoRegClassID, 48, 16, 1, 1 },
  { "QTriple_with_qsub_2_in_FPR128Lo", QTriple_with_qsub_2_in_FPR128Lo, QTriple_with_qsub_2_in_FPR128LoBits, 16, sizeof(QTriple_with_qsub_2_in_FPR128LoBits), AArch64::QTriple_with_qsub_2_in_FPR128LoRegClassID, 48, 16, 1, 1 },
  { "QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo", QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo, QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoBits, 15, sizeof(QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoBits), AArch64::QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoRegClassID, 48, 16, 1, 1 },
  { "QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo", QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo, QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoBits, 15, sizeof(QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoBits), AArch64::QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClassID, 48, 16, 1, 1 },
  { "QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo", QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo, QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoBits, 14, sizeof(QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoBits), AArch64::QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClassID, 48, 16, 1, 1 },
  { "QQuad", QQuad, QQuadBits, 32, sizeof(QQuadBits), AArch64::QQuadRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_0_in_FPR128Lo", QQuad_with_qsub_0_in_FPR128Lo, QQuad_with_qsub_0_in_FPR128LoBits, 16, sizeof(QQuad_with_qsub_0_in_FPR128LoBits), AArch64::QQuad_with_qsub_0_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_1_in_FPR128Lo", QQuad_with_qsub_1_in_FPR128Lo, QQuad_with_qsub_1_in_FPR128LoBits, 16, sizeof(QQuad_with_qsub_1_in_FPR128LoBits), AArch64::QQuad_with_qsub_1_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_2_in_FPR128Lo", QQuad_with_qsub_2_in_FPR128Lo, QQuad_with_qsub_2_in_FPR128LoBits, 16, sizeof(QQuad_with_qsub_2_in_FPR128LoBits), AArch64::QQuad_with_qsub_2_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_3_in_FPR128Lo", QQuad_with_qsub_3_in_FPR128Lo, QQuad_with_qsub_3_in_FPR128LoBits, 16, sizeof(QQuad_with_qsub_3_in_FPR128LoBits), AArch64::QQuad_with_qsub_3_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo", QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo, QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoBits, 15, sizeof(QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoBits), AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo", QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo, QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoBits, 15, sizeof(QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoBits), AArch64::QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo", QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo, QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits, 15, sizeof(QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits), AArch64::QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo", QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo, QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoBits, 14, sizeof(QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoBits), AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo", QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo, QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits, 14, sizeof(QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits), AArch64::QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID, 64, 16, 1, 1 },
  { "QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo", QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo, QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits, 13, sizeof(QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoBits), AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID, 64, 16, 1, 1 },
};

// AArch64 Dwarf<->LLVM register mappings.
extern const MCRegisterInfo::DwarfLLVMRegPair AArch64DwarfFlavour0Dwarf2L[] = {
  { 0U, AArch64::X0 },
  { 1U, AArch64::X1 },
  { 2U, AArch64::X2 },
  { 3U, AArch64::X3 },
  { 4U, AArch64::X4 },
  { 5U, AArch64::X5 },
  { 6U, AArch64::X6 },
  { 7U, AArch64::X7 },
  { 8U, AArch64::X8 },
  { 9U, AArch64::X9 },
  { 10U, AArch64::X10 },
  { 11U, AArch64::X11 },
  { 12U, AArch64::X12 },
  { 13U, AArch64::X13 },
  { 14U, AArch64::X14 },
  { 15U, AArch64::X15 },
  { 16U, AArch64::X16 },
  { 17U, AArch64::X17 },
  { 18U, AArch64::X18 },
  { 19U, AArch64::X19 },
  { 20U, AArch64::X20 },
  { 21U, AArch64::X21 },
  { 22U, AArch64::X22 },
  { 23U, AArch64::X23 },
  { 24U, AArch64::X24 },
  { 25U, AArch64::X25 },
  { 26U, AArch64::X26 },
  { 27U, AArch64::X27 },
  { 28U, AArch64::X28 },
  { 29U, AArch64::X29 },
  { 30U, AArch64::X30 },
  { 31U, AArch64::XSP },
  { 64U, AArch64::S0 },
  { 65U, AArch64::S1 },
  { 66U, AArch64::S2 },
  { 67U, AArch64::S3 },
  { 68U, AArch64::S4 },
  { 69U, AArch64::S5 },
  { 70U, AArch64::S6 },
  { 71U, AArch64::S7 },
  { 72U, AArch64::S8 },
  { 73U, AArch64::S9 },
  { 74U, AArch64::S10 },
  { 75U, AArch64::S11 },
  { 76U, AArch64::S12 },
  { 77U, AArch64::S13 },
  { 78U, AArch64::S14 },
  { 79U, AArch64::S15 },
  { 80U, AArch64::S16 },
  { 81U, AArch64::S17 },
  { 82U, AArch64::S18 },
  { 83U, AArch64::S19 },
  { 84U, AArch64::S20 },
  { 85U, AArch64::S21 },
  { 86U, AArch64::S22 },
  { 87U, AArch64::S23 },
  { 88U, AArch64::S24 },
  { 89U, AArch64::S25 },
  { 90U, AArch64::S26 },
  { 91U, AArch64::S27 },
  { 92U, AArch64::S28 },
  { 93U, AArch64::S29 },
  { 94U, AArch64::S30 },
  { 95U, AArch64::S31 },
};
extern const unsigned AArch64DwarfFlavour0Dwarf2LSize = sizeof(AArch64DwarfFlavour0Dwarf2L)/sizeof(MCRegisterInfo::DwarfLLVMRegPair);

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64EHFlavour0Dwarf2L[] = {
  { 0U, AArch64::X0 },
  { 1U, AArch64::X1 },
  { 2U, AArch64::X2 },
  { 3U, AArch64::X3 },
  { 4U, AArch64::X4 },
  { 5U, AArch64::X5 },
  { 6U, AArch64::X6 },
  { 7U, AArch64::X7 },
  { 8U, AArch64::X8 },
  { 9U, AArch64::X9 },
  { 10U, AArch64::X10 },
  { 11U, AArch64::X11 },
  { 12U, AArch64::X12 },
  { 13U, AArch64::X13 },
  { 14U, AArch64::X14 },
  { 15U, AArch64::X15 },
  { 16U, AArch64::X16 },
  { 17U, AArch64::X17 },
  { 18U, AArch64::X18 },
  { 19U, AArch64::X19 },
  { 20U, AArch64::X20 },
  { 21U, AArch64::X21 },
  { 22U, AArch64::X22 },
  { 23U, AArch64::X23 },
  { 24U, AArch64::X24 },
  { 25U, AArch64::X25 },
  { 26U, AArch64::X26 },
  { 27U, AArch64::X27 },
  { 28U, AArch64::X28 },
  { 29U, AArch64::X29 },
  { 30U, AArch64::X30 },
  { 31U, AArch64::XSP },
  { 64U, AArch64::S0 },
  { 65U, AArch64::S1 },
  { 66U, AArch64::S2 },
  { 67U, AArch64::S3 },
  { 68U, AArch64::S4 },
  { 69U, AArch64::S5 },
  { 70U, AArch64::S6 },
  { 71U, AArch64::S7 },
  { 72U, AArch64::S8 },
  { 73U, AArch64::S9 },
  { 74U, AArch64::S10 },
  { 75U, AArch64::S11 },
  { 76U, AArch64::S12 },
  { 77U, AArch64::S13 },
  { 78U, AArch64::S14 },
  { 79U, AArch64::S15 },
  { 80U, AArch64::S16 },
  { 81U, AArch64::S17 },
  { 82U, AArch64::S18 },
  { 83U, AArch64::S19 },
  { 84U, AArch64::S20 },
  { 85U, AArch64::S21 },
  { 86U, AArch64::S22 },
  { 87U, AArch64::S23 },
  { 88U, AArch64::S24 },
  { 89U, AArch64::S25 },
  { 90U, AArch64::S26 },
  { 91U, AArch64::S27 },
  { 92U, AArch64::S28 },
  { 93U, AArch64::S29 },
  { 94U, AArch64::S30 },
  { 95U, AArch64::S31 },
};
extern const unsigned AArch64EHFlavour0Dwarf2LSize = sizeof(AArch64EHFlavour0Dwarf2L)/sizeof(MCRegisterInfo::DwarfLLVMRegPair);

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64DwarfFlavour0L2Dwarf[] = {
  { AArch64::WSP, 31U },
  { AArch64::XSP, 31U },
  { AArch64::B0, 64U },
  { AArch64::B1, 65U },
  { AArch64::B2, 66U },
  { AArch64::B3, 67U },
  { AArch64::B4, 68U },
  { AArch64::B5, 69U },
  { AArch64::B6, 70U },
  { AArch64::B7, 71U },
  { AArch64::B8, 72U },
  { AArch64::B9, 73U },
  { AArch64::B10, 74U },
  { AArch64::B11, 75U },
  { AArch64::B12, 76U },
  { AArch64::B13, 77U },
  { AArch64::B14, 78U },
  { AArch64::B15, 79U },
  { AArch64::B16, 80U },
  { AArch64::B17, 81U },
  { AArch64::B18, 82U },
  { AArch64::B19, 83U },
  { AArch64::B20, 84U },
  { AArch64::B21, 85U },
  { AArch64::B22, 86U },
  { AArch64::B23, 87U },
  { AArch64::B24, 88U },
  { AArch64::B25, 89U },
  { AArch64::B26, 90U },
  { AArch64::B27, 91U },
  { AArch64::B28, 92U },
  { AArch64::B29, 93U },
  { AArch64::B30, 94U },
  { AArch64::B31, 95U },
  { AArch64::D0, 64U },
  { AArch64::D1, 65U },
  { AArch64::D2, 66U },
  { AArch64::D3, 67U },
  { AArch64::D4, 68U },
  { AArch64::D5, 69U },
  { AArch64::D6, 70U },
  { AArch64::D7, 71U },
  { AArch64::D8, 72U },
  { AArch64::D9, 73U },
  { AArch64::D10, 74U },
  { AArch64::D11, 75U },
  { AArch64::D12, 76U },
  { AArch64::D13, 77U },
  { AArch64::D14, 78U },
  { AArch64::D15, 79U },
  { AArch64::D16, 80U },
  { AArch64::D17, 81U },
  { AArch64::D18, 82U },
  { AArch64::D19, 83U },
  { AArch64::D20, 84U },
  { AArch64::D21, 85U },
  { AArch64::D22, 86U },
  { AArch64::D23, 87U },
  { AArch64::D24, 88U },
  { AArch64::D25, 89U },
  { AArch64::D26, 90U },
  { AArch64::D27, 91U },
  { AArch64::D28, 92U },
  { AArch64::D29, 93U },
  { AArch64::D30, 94U },
  { AArch64::D31, 95U },
  { AArch64::H0, 64U },
  { AArch64::H1, 65U },
  { AArch64::H2, 66U },
  { AArch64::H3, 67U },
  { AArch64::H4, 68U },
  { AArch64::H5, 69U },
  { AArch64::H6, 70U },
  { AArch64::H7, 71U },
  { AArch64::H8, 72U },
  { AArch64::H9, 73U },
  { AArch64::H10, 74U },
  { AArch64::H11, 75U },
  { AArch64::H12, 76U },
  { AArch64::H13, 77U },
  { AArch64::H14, 78U },
  { AArch64::H15, 79U },
  { AArch64::H16, 80U },
  { AArch64::H17, 81U },
  { AArch64::H18, 82U },
  { AArch64::H19, 83U },
  { AArch64::H20, 84U },
  { AArch64::H21, 85U },
  { AArch64::H22, 86U },
  { AArch64::H23, 87U },
  { AArch64::H24, 88U },
  { AArch64::H25, 89U },
  { AArch64::H26, 90U },
  { AArch64::H27, 91U },
  { AArch64::H28, 92U },
  { AArch64::H29, 93U },
  { AArch64::H30, 94U },
  { AArch64::H31, 95U },
  { AArch64::Q0, 64U },
  { AArch64::Q1, 65U },
  { AArch64::Q2, 66U },
  { AArch64::Q3, 67U },
  { AArch64::Q4, 68U },
  { AArch64::Q5, 69U },
  { AArch64::Q6, 70U },
  { AArch64::Q7, 71U },
  { AArch64::Q8, 72U },
  { AArch64::Q9, 73U },
  { AArch64::Q10, 74U },
  { AArch64::Q11, 75U },
  { AArch64::Q12, 76U },
  { AArch64::Q13, 77U },
  { AArch64::Q14, 78U },
  { AArch64::Q15, 79U },
  { AArch64::Q16, 80U },
  { AArch64::Q17, 81U },
  { AArch64::Q18, 82U },
  { AArch64::Q19, 83U },
  { AArch64::Q20, 84U },
  { AArch64::Q21, 85U },
  { AArch64::Q22, 86U },
  { AArch64::Q23, 87U },
  { AArch64::Q24, 88U },
  { AArch64::Q25, 89U },
  { AArch64::Q26, 90U },
  { AArch64::Q27, 91U },
  { AArch64::Q28, 92U },
  { AArch64::Q29, 93U },
  { AArch64::Q30, 94U },
  { AArch64::Q31, 95U },
  { AArch64::S0, 64U },
  { AArch64::S1, 65U },
  { AArch64::S2, 66U },
  { AArch64::S3, 67U },
  { AArch64::S4, 68U },
  { AArch64::S5, 69U },
  { AArch64::S6, 70U },
  { AArch64::S7, 71U },
  { AArch64::S8, 72U },
  { AArch64::S9, 73U },
  { AArch64::S10, 74U },
  { AArch64::S11, 75U },
  { AArch64::S12, 76U },
  { AArch64::S13, 77U },
  { AArch64::S14, 78U },
  { AArch64::S15, 79U },
  { AArch64::S16, 80U },
  { AArch64::S17, 81U },
  { AArch64::S18, 82U },
  { AArch64::S19, 83U },
  { AArch64::S20, 84U },
  { AArch64::S21, 85U },
  { AArch64::S22, 86U },
  { AArch64::S23, 87U },
  { AArch64::S24, 88U },
  { AArch64::S25, 89U },
  { AArch64::S26, 90U },
  { AArch64::S27, 91U },
  { AArch64::S28, 92U },
  { AArch64::S29, 93U },
  { AArch64::S30, 94U },
  { AArch64::S31, 95U },
  { AArch64::W0, 0U },
  { AArch64::W1, 1U },
  { AArch64::W2, 2U },
  { AArch64::W3, 3U },
  { AArch64::W4, 4U },
  { AArch64::W5, 5U },
  { AArch64::W6, 6U },
  { AArch64::W7, 7U },
  { AArch64::W8, 8U },
  { AArch64::W9, 9U },
  { AArch64::W10, 10U },
  { AArch64::W11, 11U },
  { AArch64::W12, 12U },
  { AArch64::W13, 13U },
  { AArch64::W14, 14U },
  { AArch64::W15, 15U },
  { AArch64::W16, 16U },
  { AArch64::W17, 17U },
  { AArch64::W18, 18U },
  { AArch64::W19, 19U },
  { AArch64::W20, 20U },
  { AArch64::W21, 21U },
  { AArch64::W22, 22U },
  { AArch64::W23, 23U },
  { AArch64::W24, 24U },
  { AArch64::W25, 25U },
  { AArch64::W26, 26U },
  { AArch64::W27, 27U },
  { AArch64::W28, 28U },
  { AArch64::W29, 29U },
  { AArch64::W30, 30U },
  { AArch64::X0, 0U },
  { AArch64::X1, 1U },
  { AArch64::X2, 2U },
  { AArch64::X3, 3U },
  { AArch64::X4, 4U },
  { AArch64::X5, 5U },
  { AArch64::X6, 6U },
  { AArch64::X7, 7U },
  { AArch64::X8, 8U },
  { AArch64::X9, 9U },
  { AArch64::X10, 10U },
  { AArch64::X11, 11U },
  { AArch64::X12, 12U },
  { AArch64::X13, 13U },
  { AArch64::X14, 14U },
  { AArch64::X15, 15U },
  { AArch64::X16, 16U },
  { AArch64::X17, 17U },
  { AArch64::X18, 18U },
  { AArch64::X19, 19U },
  { AArch64::X20, 20U },
  { AArch64::X21, 21U },
  { AArch64::X22, 22U },
  { AArch64::X23, 23U },
  { AArch64::X24, 24U },
  { AArch64::X25, 25U },
  { AArch64::X26, 26U },
  { AArch64::X27, 27U },
  { AArch64::X28, 28U },
  { AArch64::X29, 29U },
  { AArch64::X30, 30U },
};
extern const unsigned AArch64DwarfFlavour0L2DwarfSize = sizeof(AArch64DwarfFlavour0L2Dwarf)/sizeof(MCRegisterInfo::DwarfLLVMRegPair);

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64EHFlavour0L2Dwarf[] = {
  { AArch64::WSP, 31U },
  { AArch64::XSP, 31U },
  { AArch64::B0, 64U },
  { AArch64::B1, 65U },
  { AArch64::B2, 66U },
  { AArch64::B3, 67U },
  { AArch64::B4, 68U },
  { AArch64::B5, 69U },
  { AArch64::B6, 70U },
  { AArch64::B7, 71U },
  { AArch64::B8, 72U },
  { AArch64::B9, 73U },
  { AArch64::B10, 74U },
  { AArch64::B11, 75U },
  { AArch64::B12, 76U },
  { AArch64::B13, 77U },
  { AArch64::B14, 78U },
  { AArch64::B15, 79U },
  { AArch64::B16, 80U },
  { AArch64::B17, 81U },
  { AArch64::B18, 82U },
  { AArch64::B19, 83U },
  { AArch64::B20, 84U },
  { AArch64::B21, 85U },
  { AArch64::B22, 86U },
  { AArch64::B23, 87U },
  { AArch64::B24, 88U },
  { AArch64::B25, 89U },
  { AArch64::B26, 90U },
  { AArch64::B27, 91U },
  { AArch64::B28, 92U },
  { AArch64::B29, 93U },
  { AArch64::B30, 94U },
  { AArch64::B31, 95U },
  { AArch64::D0, 64U },
  { AArch64::D1, 65U },
  { AArch64::D2, 66U },
  { AArch64::D3, 67U },
  { AArch64::D4, 68U },
  { AArch64::D5, 69U },
  { AArch64::D6, 70U },
  { AArch64::D7, 71U },
  { AArch64::D8, 72U },
  { AArch64::D9, 73U },
  { AArch64::D10, 74U },
  { AArch64::D11, 75U },
  { AArch64::D12, 76U },
  { AArch64::D13, 77U },
  { AArch64::D14, 78U },
  { AArch64::D15, 79U },
  { AArch64::D16, 80U },
  { AArch64::D17, 81U },
  { AArch64::D18, 82U },
  { AArch64::D19, 83U },
  { AArch64::D20, 84U },
  { AArch64::D21, 85U },
  { AArch64::D22, 86U },
  { AArch64::D23, 87U },
  { AArch64::D24, 88U },
  { AArch64::D25, 89U },
  { AArch64::D26, 90U },
  { AArch64::D27, 91U },
  { AArch64::D28, 92U },
  { AArch64::D29, 93U },
  { AArch64::D30, 94U },
  { AArch64::D31, 95U },
  { AArch64::H0, 64U },
  { AArch64::H1, 65U },
  { AArch64::H2, 66U },
  { AArch64::H3, 67U },
  { AArch64::H4, 68U },
  { AArch64::H5, 69U },
  { AArch64::H6, 70U },
  { AArch64::H7, 71U },
  { AArch64::H8, 72U },
  { AArch64::H9, 73U },
  { AArch64::H10, 74U },
  { AArch64::H11, 75U },
  { AArch64::H12, 76U },
  { AArch64::H13, 77U },
  { AArch64::H14, 78U },
  { AArch64::H15, 79U },
  { AArch64::H16, 80U },
  { AArch64::H17, 81U },
  { AArch64::H18, 82U },
  { AArch64::H19, 83U },
  { AArch64::H20, 84U },
  { AArch64::H21, 85U },
  { AArch64::H22, 86U },
  { AArch64::H23, 87U },
  { AArch64::H24, 88U },
  { AArch64::H25, 89U },
  { AArch64::H26, 90U },
  { AArch64::H27, 91U },
  { AArch64::H28, 92U },
  { AArch64::H29, 93U },
  { AArch64::H30, 94U },
  { AArch64::H31, 95U },
  { AArch64::Q0, 64U },
  { AArch64::Q1, 65U },
  { AArch64::Q2, 66U },
  { AArch64::Q3, 67U },
  { AArch64::Q4, 68U },
  { AArch64::Q5, 69U },
  { AArch64::Q6, 70U },
  { AArch64::Q7, 71U },
  { AArch64::Q8, 72U },
  { AArch64::Q9, 73U },
  { AArch64::Q10, 74U },
  { AArch64::Q11, 75U },
  { AArch64::Q12, 76U },
  { AArch64::Q13, 77U },
  { AArch64::Q14, 78U },
  { AArch64::Q15, 79U },
  { AArch64::Q16, 80U },
  { AArch64::Q17, 81U },
  { AArch64::Q18, 82U },
  { AArch64::Q19, 83U },
  { AArch64::Q20, 84U },
  { AArch64::Q21, 85U },
  { AArch64::Q22, 86U },
  { AArch64::Q23, 87U },
  { AArch64::Q24, 88U },
  { AArch64::Q25, 89U },
  { AArch64::Q26, 90U },
  { AArch64::Q27, 91U },
  { AArch64::Q28, 92U },
  { AArch64::Q29, 93U },
  { AArch64::Q30, 94U },
  { AArch64::Q31, 95U },
  { AArch64::S0, 64U },
  { AArch64::S1, 65U },
  { AArch64::S2, 66U },
  { AArch64::S3, 67U },
  { AArch64::S4, 68U },
  { AArch64::S5, 69U },
  { AArch64::S6, 70U },
  { AArch64::S7, 71U },
  { AArch64::S8, 72U },
  { AArch64::S9, 73U },
  { AArch64::S10, 74U },
  { AArch64::S11, 75U },
  { AArch64::S12, 76U },
  { AArch64::S13, 77U },
  { AArch64::S14, 78U },
  { AArch64::S15, 79U },
  { AArch64::S16, 80U },
  { AArch64::S17, 81U },
  { AArch64::S18, 82U },
  { AArch64::S19, 83U },
  { AArch64::S20, 84U },
  { AArch64::S21, 85U },
  { AArch64::S22, 86U },
  { AArch64::S23, 87U },
  { AArch64::S24, 88U },
  { AArch64::S25, 89U },
  { AArch64::S26, 90U },
  { AArch64::S27, 91U },
  { AArch64::S28, 92U },
  { AArch64::S29, 93U },
  { AArch64::S30, 94U },
  { AArch64::S31, 95U },
  { AArch64::W0, 0U },
  { AArch64::W1, 1U },
  { AArch64::W2, 2U },
  { AArch64::W3, 3U },
  { AArch64::W4, 4U },
  { AArch64::W5, 5U },
  { AArch64::W6, 6U },
  { AArch64::W7, 7U },
  { AArch64::W8, 8U },
  { AArch64::W9, 9U },
  { AArch64::W10, 10U },
  { AArch64::W11, 11U },
  { AArch64::W12, 12U },
  { AArch64::W13, 13U },
  { AArch64::W14, 14U },
  { AArch64::W15, 15U },
  { AArch64::W16, 16U },
  { AArch64::W17, 17U },
  { AArch64::W18, 18U },
  { AArch64::W19, 19U },
  { AArch64::W20, 20U },
  { AArch64::W21, 21U },
  { AArch64::W22, 22U },
  { AArch64::W23, 23U },
  { AArch64::W24, 24U },
  { AArch64::W25, 25U },
  { AArch64::W26, 26U },
  { AArch64::W27, 27U },
  { AArch64::W28, 28U },
  { AArch64::W29, 29U },
  { AArch64::W30, 30U },
  { AArch64::X0, 0U },
  { AArch64::X1, 1U },
  { AArch64::X2, 2U },
  { AArch64::X3, 3U },
  { AArch64::X4, 4U },
  { AArch64::X5, 5U },
  { AArch64::X6, 6U },
  { AArch64::X7, 7U },
  { AArch64::X8, 8U },
  { AArch64::X9, 9U },
  { AArch64::X10, 10U },
  { AArch64::X11, 11U },
  { AArch64::X12, 12U },
  { AArch64::X13, 13U },
  { AArch64::X14, 14U },
  { AArch64::X15, 15U },
  { AArch64::X16, 16U },
  { AArch64::X17, 17U },
  { AArch64::X18, 18U },
  { AArch64::X19, 19U },
  { AArch64::X20, 20U },
  { AArch64::X21, 21U },
  { AArch64::X22, 22U },
  { AArch64::X23, 23U },
  { AArch64::X24, 24U },
  { AArch64::X25, 25U },
  { AArch64::X26, 26U },
  { AArch64::X27, 27U },
  { AArch64::X28, 28U },
  { AArch64::X29, 29U },
  { AArch64::X30, 30U },
};
extern const unsigned AArch64EHFlavour0L2DwarfSize = sizeof(AArch64EHFlavour0L2Dwarf)/sizeof(MCRegisterInfo::DwarfLLVMRegPair);

extern const uint16_t AArch64RegEncodingTable[] = {
  0,
  0,
  31,
  31,
  31,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
};
static inline void InitAArch64MCRegisterInfo(MCRegisterInfo *RI, unsigned RA, unsigned DwarfFlavour = 0, unsigned EHFlavour = 0, unsigned PC = 0) {
  RI->InitMCRegisterInfo(AArch64RegDesc, 420, RA, PC, AArch64MCRegisterClasses, 61, AArch64RegUnitRoots, 66, AArch64RegDiffLists, AArch64RegStrings, AArch64SubRegIdxLists, 53,
AArch64SubRegIdxRanges,   AArch64RegEncodingTable);

  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapDwarfRegsToLLVMRegs(AArch64DwarfFlavour0Dwarf2L, AArch64DwarfFlavour0Dwarf2LSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapDwarfRegsToLLVMRegs(AArch64EHFlavour0Dwarf2L, AArch64EHFlavour0Dwarf2LSize, true);
    break;
  }
  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapLLVMRegsToDwarfRegs(AArch64DwarfFlavour0L2Dwarf, AArch64DwarfFlavour0L2DwarfSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    RI->mapLLVMRegsToDwarfRegs(AArch64EHFlavour0L2Dwarf, AArch64EHFlavour0L2DwarfSize, true);
    break;
  }
}

} // End llvm namespace 
#endif // GET_REGINFO_MC_DESC

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Register Information Header Fragment                                        *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_HEADER
#undef GET_REGINFO_HEADER
#include "llvm/Target/TargetRegisterInfo.h"

namespace llvm {

struct AArch64GenRegisterInfo : public TargetRegisterInfo {
  explicit AArch64GenRegisterInfo(unsigned RA, unsigned D = 0, unsigned E = 0, unsigned PC = 0);
  virtual bool needsStackRealignment(const MachineFunction &) const
     { return false; }
  virtual unsigned composeSubRegIndicesImpl(unsigned, unsigned) const;
  virtual const TargetRegisterClass *getSubClassWithSubReg(const TargetRegisterClass*, unsigned) const;
  virtual const RegClassWeight &getRegClassWeight(const TargetRegisterClass *RC) const;
  virtual unsigned getRegUnitWeight(unsigned RegUnit) const;
  virtual unsigned getNumRegPressureSets() const;
  virtual const char *getRegPressureSetName(unsigned Idx) const;
  virtual unsigned getRegPressureSetLimit(unsigned Idx) const;
  virtual const int *getRegClassPressureSets(const TargetRegisterClass *RC) const;
  virtual const int *getRegUnitPressureSets(unsigned RegUnit) const;
};

namespace AArch64 { // Register classes
  extern const TargetRegisterClass FPR8RegClass;
  extern const TargetRegisterClass FPR16RegClass;
  extern const TargetRegisterClass FPR32RegClass;
  extern const TargetRegisterClass GPR32RegClass;
  extern const TargetRegisterClass GPR32wspRegClass;
  extern const TargetRegisterClass GPR32nowzrRegClass;
  extern const TargetRegisterClass FlagClassRegClass;
  extern const TargetRegisterClass RwspRegClass;
  extern const TargetRegisterClass FPR64RegClass;
  extern const TargetRegisterClass GPR64RegClass;
  extern const TargetRegisterClass GPR64xspRegClass;
  extern const TargetRegisterClass GPR64noxzrRegClass;
  extern const TargetRegisterClass tcGPR64RegClass;
  extern const TargetRegisterClass FPR64LoRegClass;
  extern const TargetRegisterClass RxspRegClass;
  extern const TargetRegisterClass DPairRegClass;
  extern const TargetRegisterClass DPair_with_dsub_0_in_FPR64LoRegClass;
  extern const TargetRegisterClass DPair_with_dsub_1_in_FPR64LoRegClass;
  extern const TargetRegisterClass DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoRegClass;
  extern const TargetRegisterClass FPR128RegClass;
  extern const TargetRegisterClass FPR128LoRegClass;
  extern const TargetRegisterClass DTripleRegClass;
  extern const TargetRegisterClass DTriple_with_dsub_0_in_FPR64LoRegClass;
  extern const TargetRegisterClass DTriple_with_dsub_1_in_FPR64LoRegClass;
  extern const TargetRegisterClass DTriple_with_dsub_2_in_FPR64LoRegClass;
  extern const TargetRegisterClass DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoRegClass;
  extern const TargetRegisterClass DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClass;
  extern const TargetRegisterClass DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuadRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_0_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_1_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_2_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_3_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass;
  extern const TargetRegisterClass DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass;
  extern const TargetRegisterClass QPairRegClass;
  extern const TargetRegisterClass QPair_with_qsub_0_in_FPR128LoRegClass;
  extern const TargetRegisterClass QPair_with_qsub_1_in_FPR128LoRegClass;
  extern const TargetRegisterClass QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoRegClass;
  extern const TargetRegisterClass QTripleRegClass;
  extern const TargetRegisterClass QTriple_with_qsub_0_in_FPR128LoRegClass;
  extern const TargetRegisterClass QTriple_with_qsub_1_in_FPR128LoRegClass;
  extern const TargetRegisterClass QTriple_with_qsub_2_in_FPR128LoRegClass;
  extern const TargetRegisterClass QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoRegClass;
  extern const TargetRegisterClass QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClass;
  extern const TargetRegisterClass QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuadRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_0_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_1_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_2_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_3_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass;
  extern const TargetRegisterClass QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass;
} // end of namespace AArch64

} // End llvm namespace 
#endif // GET_REGINFO_HEADER

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Register and Register Classes Information                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_REGINFO_TARGET_DESC
#undef GET_REGINFO_TARGET_DESC
namespace llvm {

extern const MCRegisterClass AArch64MCRegisterClasses[];

static const MVT::SimpleValueType VTLists[] = {
  /* 0 */ MVT::i32, MVT::Other,
  /* 2 */ MVT::i64, MVT::Other,
  /* 4 */ MVT::i8, MVT::v1i8, MVT::Other,
  /* 7 */ MVT::f128, MVT::v2f64, MVT::v2i64, MVT::v4f32, MVT::v4i32, MVT::v8i16, MVT::v16i8, MVT::Other,
  /* 15 */ MVT::f16, MVT::v1i16, MVT::Other,
  /* 18 */ MVT::v2i64, MVT::Other,
  /* 20 */ MVT::v4i64, MVT::Other,
  /* 22 */ MVT::v8i64, MVT::Other,
  /* 24 */ MVT::f32, MVT::v1i32, MVT::v1f32, MVT::Other,
  /* 28 */ MVT::f64, MVT::v2f32, MVT::v2i32, MVT::v4i16, MVT::v8i8, MVT::v1i64, MVT::v1f64, MVT::Other,
  /* 36 */ MVT::Untyped, MVT::Other,
};

static const char *const SubRegIndexNameTable[] = { "dsub_0", "dsub_1", "dsub_2", "dsub_3", "dsub_4", "qqsub", "qsub_0", "qsub_1", "qsub_2", "qsub_3", "sub_8", "sub_16", "sub_32", "sub_64", "sub_128", "dsub_1_then_sub_8", "dsub_1_then_sub_16", "dsub_1_then_sub_32", "qsub_1_then_sub_8", "qsub_1_then_sub_16", "qsub_1_then_sub_32", "qsub_1_then_sub_64", "dsub_2_then_sub_8", "dsub_2_then_sub_16", "dsub_2_then_sub_32", "qsub_2_then_sub_8", "qsub_2_then_sub_16", "qsub_2_then_sub_32", "qsub_2_then_sub_64", "dsub_3_then_sub_8", "dsub_3_then_sub_16", "dsub_3_then_sub_32", "qsub_3_then_sub_8", "qsub_3_then_sub_16", "qsub_3_then_sub_32", "qsub_3_then_sub_64", "sub_64_qsub_1_then_sub_64", "dsub_0_dsub_1", "dsub_1_dsub_2", "qsub_0_qsub_1", "qsub_1_qsub_2", "sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64", "qsub_1_then_sub_64_qsub_2_then_sub_64", "dsub_0_dsub_1_dsub_2", "dsub_1_dsub_2_dsub_3", "dsub_2_dsub_3", "qsub_0_qsub_1_qsub_2", "qsub_1_qsub_2_qsub_3", "qsub_2_qsub_3", "sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64", "qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64", "qsub_2_then_sub_64_qsub_3_then_sub_64" };


static const unsigned SubRegIndexLaneMaskTable[] = {
  ~0u,
  0x00000002, // dsub_0
  0x00000008, // dsub_1
  0x00000020, // dsub_2
  0x00000080, // dsub_3
  0x00000001, // dsub_4
  0x00000141, // qqsub
  0x00000002, // qsub_0
  0x000000b0, // qsub_1
  0x00000041, // qsub_2
  0x00000100, // qsub_3
  0x00000002, // sub_8
  0x00000002, // sub_16
  0x00000002, // sub_32
  0x00000002, // sub_64
  0x00000004, // sub_128
  0x00000008, // dsub_1_then_sub_8
  0x00000008, // dsub_1_then_sub_16
  0x00000008, // dsub_1_then_sub_32
  0x00000010, // qsub_1_then_sub_8
  0x00000010, // qsub_1_then_sub_16
  0x00000010, // qsub_1_then_sub_32
  0x00000010, // qsub_1_then_sub_64
  0x00000020, // dsub_2_then_sub_8
  0x00000020, // dsub_2_then_sub_16
  0x00000020, // dsub_2_then_sub_32
  0x00000040, // qsub_2_then_sub_8
  0x00000040, // qsub_2_then_sub_16
  0x00000040, // qsub_2_then_sub_32
  0x00000040, // qsub_2_then_sub_64
  0x00000080, // dsub_3_then_sub_8
  0x00000080, // dsub_3_then_sub_16
  0x00000080, // dsub_3_then_sub_32
  0x00000100, // qsub_3_then_sub_8
  0x00000100, // qsub_3_then_sub_16
  0x00000100, // qsub_3_then_sub_32
  0x00000100, // qsub_3_then_sub_64
  0x00000012, // sub_64_qsub_1_then_sub_64
  0x0000000a, // dsub_0_dsub_1
  0x00000028, // dsub_1_dsub_2
  0x000000b2, // qsub_0_qsub_1
  0x000000f1, // qsub_1_qsub_2
  0x00000052, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  0x00000050, // qsub_1_then_sub_64_qsub_2_then_sub_64
  0x0000002a, // dsub_0_dsub_1_dsub_2
  0x000000a8, // dsub_1_dsub_2_dsub_3
  0x000000a0, // dsub_2_dsub_3
  0x000000f3, // qsub_0_qsub_1_qsub_2
  0x000001f1, // qsub_1_qsub_2_qsub_3
  0x00000141, // qsub_2_qsub_3
  0x00000152, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
  0x00000150, // qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
  0x00000140, // qsub_2_then_sub_64_qsub_3_then_sub_64
 };



static const TargetRegisterClass *const NullRegClasses[] = { NULL };

static const uint32_t FPR8SubClassMask[] = {
  0x00000001, 0x00000000, 
  0xffffa106, 0x1fffffff, // sub_8
  0xffe78000, 0x0000007f, // dsub_1_then_sub_8
  0x00000000, 0x1fffff80, // qsub_1_then_sub_8
  0xffe00000, 0x0000007f, // dsub_2_then_sub_8
  0x00000000, 0x1ffff800, // qsub_2_then_sub_8
  0xf0000000, 0x0000007f, // dsub_3_then_sub_8
  0x00000000, 0x1ffc0000, // qsub_3_then_sub_8
};

static const uint32_t FPR16SubClassMask[] = {
  0x00000002, 0x00000000, 
  0xffffa104, 0x1fffffff, // sub_16
  0xffe78000, 0x0000007f, // dsub_1_then_sub_16
  0x00000000, 0x1fffff80, // qsub_1_then_sub_16
  0xffe00000, 0x0000007f, // dsub_2_then_sub_16
  0x00000000, 0x1ffff800, // qsub_2_then_sub_16
  0xf0000000, 0x0000007f, // dsub_3_then_sub_16
  0x00000000, 0x1ffc0000, // qsub_3_then_sub_16
};

static const uint32_t FPR32SubClassMask[] = {
  0x00000004, 0x00000000, 
  0xffffa100, 0x1fffffff, // sub_32
  0xffe78000, 0x0000007f, // dsub_1_then_sub_32
  0x00000000, 0x1fffff80, // qsub_1_then_sub_32
  0xffe00000, 0x0000007f, // dsub_2_then_sub_32
  0x00000000, 0x1ffff800, // qsub_2_then_sub_32
  0xf0000000, 0x0000007f, // dsub_3_then_sub_32
  0x00000000, 0x1ffc0000, // qsub_3_then_sub_32
};

static const uint32_t GPR32SubClassMask[] = {
  0x00000028, 0x00000000, 
  0x00001a00, 0x00000000, // sub_32
};

static const uint32_t GPR32wspSubClassMask[] = {
  0x000000b0, 0x00000000, 
  0x00005c00, 0x00000000, // sub_32
};

static const uint32_t GPR32nowzrSubClassMask[] = {
  0x00000020, 0x00000000, 
  0x00001800, 0x00000000, // sub_32
};

static const uint32_t FlagClassSubClassMask[] = {
  0x00000040, 0x00000000, 
};

static const uint32_t RwspSubClassMask[] = {
  0x00000080, 0x00000000, 
  0x00004000, 0x00000000, // sub_32
};

static const uint32_t FPR64SubClassMask[] = {
  0x00002100, 0x00000000, 
  0xffe78000, 0x0000007f, // dsub_0
  0xffe78000, 0x0000007f, // dsub_1
  0xffe00000, 0x0000007f, // dsub_2
  0xf0000000, 0x0000007f, // dsub_3
  0x00180000, 0x1fffff80, // sub_64
  0x00000000, 0x1fffff80, // qsub_1_then_sub_64
  0x00000000, 0x1ffff800, // qsub_2_then_sub_64
  0x00000000, 0x1ffc0000, // qsub_3_then_sub_64
};

static const uint32_t GPR64SubClassMask[] = {
  0x00001a00, 0x00000000, 
};

static const uint32_t GPR64xspSubClassMask[] = {
  0x00005c00, 0x00000000, 
};

static const uint32_t GPR64noxzrSubClassMask[] = {
  0x00001800, 0x00000000, 
};

static const uint32_t tcGPR64SubClassMask[] = {
  0x00001000, 0x00000000, 
};

static const uint32_t FPR64LoSubClassMask[] = {
  0x00002000, 0x00000000, 
  0x2a450000, 0x00000052, // dsub_0
  0x4e860000, 0x00000076, // dsub_1
  0x8d000000, 0x0000007c, // dsub_2
  0x00000000, 0x00000069, // dsub_3
  0x00100000, 0x148a9500, // sub_64
  0x00000000, 0x1d93a600, // qsub_1_then_sub_64
  0x00000000, 0x1f234000, // qsub_2_then_sub_64
  0x00000000, 0x1a400000, // qsub_3_then_sub_64
};

static const uint32_t RxspSubClassMask[] = {
  0x00004000, 0x00000000, 
};

static const uint32_t DPairSubClassMask[] = {
  0x00078000, 0x00000000, 
  0x00000000, 0x1fffff80, // sub_64_qsub_1_then_sub_64
  0xffe00000, 0x0000007f, // dsub_0_dsub_1
  0xffe00000, 0x0000007f, // dsub_1_dsub_2
  0x00000000, 0x1ffff800, // qsub_1_then_sub_64_qsub_2_then_sub_64
  0xf0000000, 0x0000007f, // dsub_2_dsub_3
  0x00000000, 0x1ffc0000, // qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DPair_with_dsub_0_in_FPR64LoSubClassMask[] = {
  0x00050000, 0x00000000, 
  0x00000000, 0x148a9500, // sub_64_qsub_1_then_sub_64
  0x2a400000, 0x00000052, // dsub_0_dsub_1
  0x4e800000, 0x00000076, // dsub_1_dsub_2
  0x00000000, 0x1d93a000, // qsub_1_then_sub_64_qsub_2_then_sub_64
  0x80000000, 0x0000007c, // dsub_2_dsub_3
  0x00000000, 0x1f200000, // qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DPair_with_dsub_1_in_FPR64LoSubClassMask[] = {
  0x00060000, 0x00000000, 
  0x00000000, 0x1d93a600, // sub_64_qsub_1_then_sub_64
  0x4e800000, 0x00000076, // dsub_0_dsub_1
  0x8d000000, 0x0000007c, // dsub_1_dsub_2
  0x00000000, 0x1f234000, // qsub_1_then_sub_64_qsub_2_then_sub_64
  0x00000000, 0x00000069, // dsub_2_dsub_3
  0x00000000, 0x1a400000, // qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoSubClassMask[] = {
  0x00040000, 0x00000000, 
  0x00000000, 0x14828400, // sub_64_qsub_1_then_sub_64
  0x0a000000, 0x00000052, // dsub_0_dsub_1
  0x0c000000, 0x00000074, // dsub_1_dsub_2
  0x00000000, 0x1d030000, // qsub_1_then_sub_64_qsub_2_then_sub_64
  0x00000000, 0x00000068, // dsub_2_dsub_3
  0x00000000, 0x1a000000, // qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t FPR128SubClassMask[] = {
  0x00180000, 0x00000000, 
  0x00000000, 0x1fffff80, // qsub_0
  0x00000000, 0x1fffff80, // qsub_1
  0x00000000, 0x1ffff800, // qsub_2
  0x00000000, 0x1ffc0000, // qsub_3
};

static const uint32_t FPR128LoSubClassMask[] = {
  0x00100000, 0x00000000, 
  0x00000000, 0x148a9500, // qsub_0
  0x00000000, 0x1d93a600, // qsub_1
  0x00000000, 0x1f234000, // qsub_2
  0x00000000, 0x1a400000, // qsub_3
};

static const uint32_t DTripleSubClassMask[] = {
  0x0fe00000, 0x00000000, 
  0x00000000, 0x1ffff800, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  0xf0000000, 0x0000007f, // dsub_0_dsub_1_dsub_2
  0xf0000000, 0x0000007f, // dsub_1_dsub_2_dsub_3
  0x00000000, 0x1ffc0000, // qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DTriple_with_dsub_0_in_FPR64LoSubClassMask[] = {
  0x0a400000, 0x00000000, 
  0x00000000, 0x148a9000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  0x20000000, 0x00000052, // dsub_0_dsub_1_dsub_2
  0x40000000, 0x00000076, // dsub_1_dsub_2_dsub_3
  0x00000000, 0x1d900000, // qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DTriple_with_dsub_1_in_FPR64LoSubClassMask[] = {
  0x0e800000, 0x00000000, 
  0x00000000, 0x1d93a000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  0x40000000, 0x00000076, // dsub_0_dsub_1_dsub_2
  0x80000000, 0x0000007c, // dsub_1_dsub_2_dsub_3
  0x00000000, 0x1f200000, // qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DTriple_with_dsub_2_in_FPR64LoSubClassMask[] = {
  0x0d000000, 0x00000000, 
  0x00000000, 0x1f234000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  0x80000000, 0x0000007c, // dsub_0_dsub_1_dsub_2
  0x00000000, 0x00000069, // dsub_1_dsub_2_dsub_3
  0x00000000, 0x1a400000, // qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoSubClassMask[] = {
  0x0a000000, 0x00000000, 
  0x00000000, 0x14828000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  0x00000000, 0x00000052, // dsub_0_dsub_1_dsub_2
  0x00000000, 0x00000074, // dsub_1_dsub_2_dsub_3
  0x00000000, 0x1d000000, // qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoSubClassMask[] = {
  0x0c000000, 0x00000000, 
  0x00000000, 0x1d030000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  0x00000000, 0x00000074, // dsub_0_dsub_1_dsub_2
  0x00000000, 0x00000068, // dsub_1_dsub_2_dsub_3
  0x00000000, 0x1a000000, // qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoSubClassMask[] = {
  0x08000000, 0x00000000, 
  0x00000000, 0x14020000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
  0x00000000, 0x00000050, // dsub_0_dsub_1_dsub_2
  0x00000000, 0x00000060, // dsub_1_dsub_2_dsub_3
  0x00000000, 0x18000000, // qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuadSubClassMask[] = {
  0xf0000000, 0x0000007f, 
  0x00000000, 0x1ffc0000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_0_in_FPR64LoSubClassMask[] = {
  0x20000000, 0x00000052, 
  0x00000000, 0x14880000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_1_in_FPR64LoSubClassMask[] = {
  0x40000000, 0x00000076, 
  0x00000000, 0x1d900000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_2_in_FPR64LoSubClassMask[] = {
  0x80000000, 0x0000007c, 
  0x00000000, 0x1f200000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_3_in_FPR64LoSubClassMask[] = {
  0x00000000, 0x00000069, 
  0x00000000, 0x1a400000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoSubClassMask[] = {
  0x00000000, 0x00000052, 
  0x00000000, 0x14800000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoSubClassMask[] = {
  0x00000000, 0x00000074, 
  0x00000000, 0x1d000000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSubClassMask[] = {
  0x00000000, 0x00000068, 
  0x00000000, 0x1a000000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoSubClassMask[] = {
  0x00000000, 0x00000050, 
  0x00000000, 0x14000000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSubClassMask[] = {
  0x00000000, 0x00000060, 
  0x00000000, 0x18000000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSubClassMask[] = {
  0x00000000, 0x00000040, 
  0x00000000, 0x10000000, // sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
};

static const uint32_t QPairSubClassMask[] = {
  0x00000000, 0x00000780, 
  0x00000000, 0x1ffff800, // qsub_0_qsub_1
  0x00000000, 0x1ffff800, // qsub_1_qsub_2
  0x00000000, 0x1ffc0000, // qsub_2_qsub_3
};

static const uint32_t QPair_with_qsub_0_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x00000500, 
  0x00000000, 0x148a9000, // qsub_0_qsub_1
  0x00000000, 0x1d93a000, // qsub_1_qsub_2
  0x00000000, 0x1f200000, // qsub_2_qsub_3
};

static const uint32_t QPair_with_qsub_1_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x00000600, 
  0x00000000, 0x1d93a000, // qsub_0_qsub_1
  0x00000000, 0x1f234000, // qsub_1_qsub_2
  0x00000000, 0x1a400000, // qsub_2_qsub_3
};

static const uint32_t QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x00000400, 
  0x00000000, 0x14828000, // qsub_0_qsub_1
  0x00000000, 0x1d030000, // qsub_1_qsub_2
  0x00000000, 0x1a000000, // qsub_2_qsub_3
};

static const uint32_t QTripleSubClassMask[] = {
  0x00000000, 0x0003f800, 
  0x00000000, 0x1ffc0000, // qsub_0_qsub_1_qsub_2
  0x00000000, 0x1ffc0000, // qsub_1_qsub_2_qsub_3
};

static const uint32_t QTriple_with_qsub_0_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x00029000, 
  0x00000000, 0x14880000, // qsub_0_qsub_1_qsub_2
  0x00000000, 0x1d900000, // qsub_1_qsub_2_qsub_3
};

static const uint32_t QTriple_with_qsub_1_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x0003a000, 
  0x00000000, 0x1d900000, // qsub_0_qsub_1_qsub_2
  0x00000000, 0x1f200000, // qsub_1_qsub_2_qsub_3
};

static const uint32_t QTriple_with_qsub_2_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x00034000, 
  0x00000000, 0x1f200000, // qsub_0_qsub_1_qsub_2
  0x00000000, 0x1a400000, // qsub_1_qsub_2_qsub_3
};

static const uint32_t QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x00028000, 
  0x00000000, 0x14800000, // qsub_0_qsub_1_qsub_2
  0x00000000, 0x1d000000, // qsub_1_qsub_2_qsub_3
};

static const uint32_t QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x00030000, 
  0x00000000, 0x1d000000, // qsub_0_qsub_1_qsub_2
  0x00000000, 0x1a000000, // qsub_1_qsub_2_qsub_3
};

static const uint32_t QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x00020000, 
  0x00000000, 0x14000000, // qsub_0_qsub_1_qsub_2
  0x00000000, 0x18000000, // qsub_1_qsub_2_qsub_3
};

static const uint32_t QQuadSubClassMask[] = {
  0x00000000, 0x1ffc0000, 
};

static const uint32_t QQuad_with_qsub_0_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x14880000, 
};

static const uint32_t QQuad_with_qsub_1_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x1d900000, 
};

static const uint32_t QQuad_with_qsub_2_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x1f200000, 
};

static const uint32_t QQuad_with_qsub_3_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x1a400000, 
};

static const uint32_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x14800000, 
};

static const uint32_t QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x1d000000, 
};

static const uint32_t QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x1a000000, 
};

static const uint32_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x14000000, 
};

static const uint32_t QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x18000000, 
};

static const uint32_t QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSubClassMask[] = {
  0x00000000, 0x10000000, 
};

static const uint16_t SuperRegIdxSeqs[] = {
  /* 0 */ 7, 8, 9, 10, 0,
  /* 5 */ 13, 0,
  /* 7 */ 11, 16, 19, 23, 26, 30, 33, 0,
  /* 15 */ 12, 17, 20, 24, 27, 31, 34, 0,
  /* 23 */ 13, 18, 21, 25, 28, 32, 35, 0,
  /* 31 */ 1, 2, 3, 4, 14, 22, 29, 36, 0,
  /* 40 */ 47, 48, 0,
  /* 43 */ 40, 41, 49, 0,
  /* 47 */ 50, 0,
  /* 49 */ 42, 44, 45, 51, 0,
  /* 54 */ 37, 38, 39, 43, 46, 52, 0,
};

static const TargetRegisterClass *const GPR32nowzrSuperclasses[] = {
  &AArch64::GPR32RegClass,
  &AArch64::GPR32wspRegClass,
  NULL
};

static const TargetRegisterClass *const RwspSuperclasses[] = {
  &AArch64::GPR32wspRegClass,
  NULL
};

static const TargetRegisterClass *const GPR64noxzrSuperclasses[] = {
  &AArch64::GPR64RegClass,
  &AArch64::GPR64xspRegClass,
  NULL
};

static const TargetRegisterClass *const tcGPR64Superclasses[] = {
  &AArch64::GPR64RegClass,
  &AArch64::GPR64xspRegClass,
  &AArch64::GPR64noxzrRegClass,
  NULL
};

static const TargetRegisterClass *const FPR64LoSuperclasses[] = {
  &AArch64::FPR64RegClass,
  NULL
};

static const TargetRegisterClass *const RxspSuperclasses[] = {
  &AArch64::GPR64xspRegClass,
  NULL
};

static const TargetRegisterClass *const DPair_with_dsub_0_in_FPR64LoSuperclasses[] = {
  &AArch64::DPairRegClass,
  NULL
};

static const TargetRegisterClass *const DPair_with_dsub_1_in_FPR64LoSuperclasses[] = {
  &AArch64::DPairRegClass,
  NULL
};

static const TargetRegisterClass *const DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoSuperclasses[] = {
  &AArch64::DPairRegClass,
  &AArch64::DPair_with_dsub_0_in_FPR64LoRegClass,
  &AArch64::DPair_with_dsub_1_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const FPR128LoSuperclasses[] = {
  &AArch64::FPR128RegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_0_in_FPR64LoSuperclasses[] = {
  &AArch64::DTripleRegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_1_in_FPR64LoSuperclasses[] = {
  &AArch64::DTripleRegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_2_in_FPR64LoSuperclasses[] = {
  &AArch64::DTripleRegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoSuperclasses[] = {
  &AArch64::DTripleRegClass,
  &AArch64::DTriple_with_dsub_0_in_FPR64LoRegClass,
  &AArch64::DTriple_with_dsub_1_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoSuperclasses[] = {
  &AArch64::DTripleRegClass,
  &AArch64::DTriple_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DTriple_with_dsub_2_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoSuperclasses[] = {
  &AArch64::DTripleRegClass,
  &AArch64::DTriple_with_dsub_0_in_FPR64LoRegClass,
  &AArch64::DTriple_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DTriple_with_dsub_2_in_FPR64LoRegClass,
  &AArch64::DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_0_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_1_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_2_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_3_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  &AArch64::DQuad_with_dsub_0_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_2_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  &AArch64::DQuad_with_dsub_2_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_3_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  &AArch64::DQuad_with_dsub_0_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_2_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_2_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_3_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSuperclasses[] = {
  &AArch64::DQuadRegClass,
  &AArch64::DQuad_with_dsub_0_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_2_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_3_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass,
  &AArch64::DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass,
  NULL
};

static const TargetRegisterClass *const QPair_with_qsub_0_in_FPR128LoSuperclasses[] = {
  &AArch64::QPairRegClass,
  NULL
};

static const TargetRegisterClass *const QPair_with_qsub_1_in_FPR128LoSuperclasses[] = {
  &AArch64::QPairRegClass,
  NULL
};

static const TargetRegisterClass *const QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoSuperclasses[] = {
  &AArch64::QPairRegClass,
  &AArch64::QPair_with_qsub_0_in_FPR128LoRegClass,
  &AArch64::QPair_with_qsub_1_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QTriple_with_qsub_0_in_FPR128LoSuperclasses[] = {
  &AArch64::QTripleRegClass,
  NULL
};

static const TargetRegisterClass *const QTriple_with_qsub_1_in_FPR128LoSuperclasses[] = {
  &AArch64::QTripleRegClass,
  NULL
};

static const TargetRegisterClass *const QTriple_with_qsub_2_in_FPR128LoSuperclasses[] = {
  &AArch64::QTripleRegClass,
  NULL
};

static const TargetRegisterClass *const QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoSuperclasses[] = {
  &AArch64::QTripleRegClass,
  &AArch64::QTriple_with_qsub_0_in_FPR128LoRegClass,
  &AArch64::QTriple_with_qsub_1_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoSuperclasses[] = {
  &AArch64::QTripleRegClass,
  &AArch64::QTriple_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QTriple_with_qsub_2_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoSuperclasses[] = {
  &AArch64::QTripleRegClass,
  &AArch64::QTriple_with_qsub_0_in_FPR128LoRegClass,
  &AArch64::QTriple_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QTriple_with_qsub_2_in_FPR128LoRegClass,
  &AArch64::QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_0_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_1_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_2_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_3_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  &AArch64::QQuad_with_qsub_0_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_2_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  &AArch64::QQuad_with_qsub_2_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_3_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  &AArch64::QQuad_with_qsub_0_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_2_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_2_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_3_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass,
  NULL
};

static const TargetRegisterClass *const QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSuperclasses[] = {
  &AArch64::QQuadRegClass,
  &AArch64::QQuad_with_qsub_0_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_2_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_3_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass,
  &AArch64::QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass,
  NULL
};

namespace AArch64 {   // Register class instances
  extern const TargetRegisterClass FPR8RegClass = {
    &AArch64MCRegisterClasses[FPR8RegClassID],
    VTLists + 4,
    FPR8SubClassMask,
    SuperRegIdxSeqs + 7,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass FPR16RegClass = {
    &AArch64MCRegisterClasses[FPR16RegClassID],
    VTLists + 15,
    FPR16SubClassMask,
    SuperRegIdxSeqs + 15,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass FPR32RegClass = {
    &AArch64MCRegisterClasses[FPR32RegClassID],
    VTLists + 24,
    FPR32SubClassMask,
    SuperRegIdxSeqs + 23,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass GPR32RegClass = {
    &AArch64MCRegisterClasses[GPR32RegClassID],
    VTLists + 0,
    GPR32SubClassMask,
    SuperRegIdxSeqs + 5,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass GPR32wspRegClass = {
    &AArch64MCRegisterClasses[GPR32wspRegClassID],
    VTLists + 0,
    GPR32wspSubClassMask,
    SuperRegIdxSeqs + 5,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass GPR32nowzrRegClass = {
    &AArch64MCRegisterClasses[GPR32nowzrRegClassID],
    VTLists + 0,
    GPR32nowzrSubClassMask,
    SuperRegIdxSeqs + 5,
    GPR32nowzrSuperclasses,
    0
  };

  extern const TargetRegisterClass FlagClassRegClass = {
    &AArch64MCRegisterClasses[FlagClassRegClassID],
    VTLists + 0,
    FlagClassSubClassMask,
    SuperRegIdxSeqs + 4,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass RwspRegClass = {
    &AArch64MCRegisterClasses[RwspRegClassID],
    VTLists + 0,
    RwspSubClassMask,
    SuperRegIdxSeqs + 5,
    RwspSuperclasses,
    0
  };

  extern const TargetRegisterClass FPR64RegClass = {
    &AArch64MCRegisterClasses[FPR64RegClassID],
    VTLists + 28,
    FPR64SubClassMask,
    SuperRegIdxSeqs + 31,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass GPR64RegClass = {
    &AArch64MCRegisterClasses[GPR64RegClassID],
    VTLists + 2,
    GPR64SubClassMask,
    SuperRegIdxSeqs + 4,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass GPR64xspRegClass = {
    &AArch64MCRegisterClasses[GPR64xspRegClassID],
    VTLists + 2,
    GPR64xspSubClassMask,
    SuperRegIdxSeqs + 4,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass GPR64noxzrRegClass = {
    &AArch64MCRegisterClasses[GPR64noxzrRegClassID],
    VTLists + 2,
    GPR64noxzrSubClassMask,
    SuperRegIdxSeqs + 4,
    GPR64noxzrSuperclasses,
    0
  };

  extern const TargetRegisterClass tcGPR64RegClass = {
    &AArch64MCRegisterClasses[tcGPR64RegClassID],
    VTLists + 2,
    tcGPR64SubClassMask,
    SuperRegIdxSeqs + 4,
    tcGPR64Superclasses,
    0
  };

  extern const TargetRegisterClass FPR64LoRegClass = {
    &AArch64MCRegisterClasses[FPR64LoRegClassID],
    VTLists + 28,
    FPR64LoSubClassMask,
    SuperRegIdxSeqs + 31,
    FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass RxspRegClass = {
    &AArch64MCRegisterClasses[RxspRegClassID],
    VTLists + 2,
    RxspSubClassMask,
    SuperRegIdxSeqs + 4,
    RxspSuperclasses,
    0
  };

  extern const TargetRegisterClass DPairRegClass = {
    &AArch64MCRegisterClasses[DPairRegClassID],
    VTLists + 18,
    DPairSubClassMask,
    SuperRegIdxSeqs + 54,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass DPair_with_dsub_0_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DPair_with_dsub_0_in_FPR64LoRegClassID],
    VTLists + 18,
    DPair_with_dsub_0_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 54,
    DPair_with_dsub_0_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DPair_with_dsub_1_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DPair_with_dsub_1_in_FPR64LoRegClassID],
    VTLists + 18,
    DPair_with_dsub_1_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 54,
    DPair_with_dsub_1_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoRegClassID],
    VTLists + 18,
    DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 54,
    DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass FPR128RegClass = {
    &AArch64MCRegisterClasses[FPR128RegClassID],
    VTLists + 7,
    FPR128SubClassMask,
    SuperRegIdxSeqs + 0,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass FPR128LoRegClass = {
    &AArch64MCRegisterClasses[FPR128LoRegClassID],
    VTLists + 7,
    FPR128LoSubClassMask,
    SuperRegIdxSeqs + 0,
    FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DTripleRegClass = {
    &AArch64MCRegisterClasses[DTripleRegClassID],
    VTLists + 36,
    DTripleSubClassMask,
    SuperRegIdxSeqs + 49,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_0_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DTriple_with_dsub_0_in_FPR64LoRegClassID],
    VTLists + 36,
    DTriple_with_dsub_0_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 49,
    DTriple_with_dsub_0_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_1_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DTriple_with_dsub_1_in_FPR64LoRegClassID],
    VTLists + 36,
    DTriple_with_dsub_1_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 49,
    DTriple_with_dsub_1_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_2_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DTriple_with_dsub_2_in_FPR64LoRegClassID],
    VTLists + 36,
    DTriple_with_dsub_2_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 49,
    DTriple_with_dsub_2_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoRegClassID],
    VTLists + 36,
    DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 49,
    DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClassID],
    VTLists + 36,
    DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 49,
    DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClassID],
    VTLists + 36,
    DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 49,
    DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuadRegClass = {
    &AArch64MCRegisterClasses[DQuadRegClassID],
    VTLists + 20,
    DQuadSubClassMask,
    SuperRegIdxSeqs + 47,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_0_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_0_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_0_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_0_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_1_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_1_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_1_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_1_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_2_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_2_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_2_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_2_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_3_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_3_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_3_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_3_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass = {
    &AArch64MCRegisterClasses[DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClassID],
    VTLists + 20,
    DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSubClassMask,
    SuperRegIdxSeqs + 47,
    DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QPairRegClass = {
    &AArch64MCRegisterClasses[QPairRegClassID],
    VTLists + 20,
    QPairSubClassMask,
    SuperRegIdxSeqs + 43,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass QPair_with_qsub_0_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QPair_with_qsub_0_in_FPR128LoRegClassID],
    VTLists + 20,
    QPair_with_qsub_0_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 43,
    QPair_with_qsub_0_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QPair_with_qsub_1_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QPair_with_qsub_1_in_FPR128LoRegClassID],
    VTLists + 20,
    QPair_with_qsub_1_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 43,
    QPair_with_qsub_1_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoRegClassID],
    VTLists + 20,
    QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 43,
    QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QTripleRegClass = {
    &AArch64MCRegisterClasses[QTripleRegClassID],
    VTLists + 36,
    QTripleSubClassMask,
    SuperRegIdxSeqs + 40,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass QTriple_with_qsub_0_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QTriple_with_qsub_0_in_FPR128LoRegClassID],
    VTLists + 36,
    QTriple_with_qsub_0_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 40,
    QTriple_with_qsub_0_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QTriple_with_qsub_1_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QTriple_with_qsub_1_in_FPR128LoRegClassID],
    VTLists + 36,
    QTriple_with_qsub_1_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 40,
    QTriple_with_qsub_1_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QTriple_with_qsub_2_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QTriple_with_qsub_2_in_FPR128LoRegClassID],
    VTLists + 36,
    QTriple_with_qsub_2_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 40,
    QTriple_with_qsub_2_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoRegClassID],
    VTLists + 36,
    QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 40,
    QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClassID],
    VTLists + 36,
    QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 40,
    QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClassID],
    VTLists + 36,
    QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 40,
    QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuadRegClass = {
    &AArch64MCRegisterClasses[QQuadRegClassID],
    VTLists + 22,
    QQuadSubClassMask,
    SuperRegIdxSeqs + 4,
    NullRegClasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_0_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_0_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_0_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_0_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_1_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_1_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_1_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_1_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_2_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_2_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_2_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_2_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_3_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_3_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_3_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_3_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSuperclasses,
    0
  };

  extern const TargetRegisterClass QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass = {
    &AArch64MCRegisterClasses[QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClassID],
    VTLists + 22,
    QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSubClassMask,
    SuperRegIdxSeqs + 4,
    QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoSuperclasses,
    0
  };

}

namespace {
  const TargetRegisterClass* const RegisterClasses[] = {
    &AArch64::FPR8RegClass,
    &AArch64::FPR16RegClass,
    &AArch64::FPR32RegClass,
    &AArch64::GPR32RegClass,
    &AArch64::GPR32wspRegClass,
    &AArch64::GPR32nowzrRegClass,
    &AArch64::FlagClassRegClass,
    &AArch64::RwspRegClass,
    &AArch64::FPR64RegClass,
    &AArch64::GPR64RegClass,
    &AArch64::GPR64xspRegClass,
    &AArch64::GPR64noxzrRegClass,
    &AArch64::tcGPR64RegClass,
    &AArch64::FPR64LoRegClass,
    &AArch64::RxspRegClass,
    &AArch64::DPairRegClass,
    &AArch64::DPair_with_dsub_0_in_FPR64LoRegClass,
    &AArch64::DPair_with_dsub_1_in_FPR64LoRegClass,
    &AArch64::DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64LoRegClass,
    &AArch64::FPR128RegClass,
    &AArch64::FPR128LoRegClass,
    &AArch64::DTripleRegClass,
    &AArch64::DTriple_with_dsub_0_in_FPR64LoRegClass,
    &AArch64::DTriple_with_dsub_1_in_FPR64LoRegClass,
    &AArch64::DTriple_with_dsub_2_in_FPR64LoRegClass,
    &AArch64::DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64LoRegClass,
    &AArch64::DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClass,
    &AArch64::DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64LoRegClass,
    &AArch64::DQuadRegClass,
    &AArch64::DQuad_with_dsub_0_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_1_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_2_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_3_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass,
    &AArch64::DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64LoRegClass,
    &AArch64::QPairRegClass,
    &AArch64::QPair_with_qsub_0_in_FPR128LoRegClass,
    &AArch64::QPair_with_qsub_1_in_FPR128LoRegClass,
    &AArch64::QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128LoRegClass,
    &AArch64::QTripleRegClass,
    &AArch64::QTriple_with_qsub_0_in_FPR128LoRegClass,
    &AArch64::QTriple_with_qsub_1_in_FPR128LoRegClass,
    &AArch64::QTriple_with_qsub_2_in_FPR128LoRegClass,
    &AArch64::QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128LoRegClass,
    &AArch64::QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClass,
    &AArch64::QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128LoRegClass,
    &AArch64::QQuadRegClass,
    &AArch64::QQuad_with_qsub_0_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_1_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_2_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_3_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass,
    &AArch64::QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128LoRegClass,
  };
}

static const TargetRegisterInfoDesc AArch64RegInfoDesc[] = { // Extra Descriptors
  { 0, 0 },
  { 0, 0 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
  { 0, 1 },
};
unsigned AArch64GenRegisterInfo::composeSubRegIndicesImpl(unsigned IdxA, unsigned IdxB) const {
  static const uint8_t RowMap[52] = {
    0, 1, 2, 3, 0, 0, 0, 4, 5, 6, 0, 0, 0, 0, 0, 0, 1, 1, 0, 4, 4, 4, 0, 2, 2, 0, 5, 5, 5, 0, 3, 3, 0, 6, 6, 6, 0, 7, 1, 7, 4, 0, 8, 7, 1, 2, 7, 4, 5, 0, 8, 9, 
  };
  static const uint8_t Rows[10][52] = {
    { 14, 22, 29, 36, 0, 0, 9, 10, 0, 0, 11, 12, 13, 14, 0, 19, 20, 21, 0, 0, 0, 0, 26, 27, 28, 0, 0, 0, 0, 33, 34, 35, 0, 0, 0, 0, 0, 37, 43, 0, 0, 0, 0, 42, 51, 52, 0, 0, 0, 0, 0, 0, },
    { 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 16, 17, 18, 0, 0, 23, 24, 25, 0, 0, 0, 0, 30, 31, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 23, 24, 25, 0, 0, 30, 31, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 31, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { 3, 4, 0, 0, 0, 0, 8, 9, 10, 0, 19, 20, 21, 22, 0, 0, 0, 0, 26, 27, 28, 29, 0, 0, 0, 33, 34, 35, 36, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 41, 49, 51, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { 5, 0, 0, 0, 0, 0, 9, 10, 0, 0, 26, 27, 28, 29, 0, 0, 0, 0, 33, 34, 35, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 34, 35, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { 1, 2, 3, 0, 0, 0, 7, 8, 9, 0, 11, 12, 13, 14, 0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 0, 0, 0, 0, 0, 0, 37, 38, 39, 40, 41, 42, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { 22, 29, 36, 0, 0, 0, 0, 0, 0, 0, 19, 20, 21, 0, 0, 26, 27, 28, 0, 0, 0, 0, 33, 34, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
    { 29, 36, 0, 0, 0, 0, 0, 0, 0, 0, 26, 27, 28, 0, 0, 33, 34, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
  };

  --IdxA; assert(IdxA < 52);
  --IdxB; assert(IdxB < 52);
  return Rows[RowMap[IdxA]][IdxB];
}

const TargetRegisterClass *AArch64GenRegisterInfo::getSubClassWithSubReg(const TargetRegisterClass *RC, unsigned Idx) const {
  static const uint8_t Table[61][52] = {
    {	// FPR8
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      0,	// sub_32
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// FPR16
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      2,	// sub_8 -> FPR16
      0,	// sub_16
      0,	// sub_32
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// FPR32
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      3,	// sub_8 -> FPR32
      3,	// sub_16 -> FPR32
      0,	// sub_32
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// GPR32
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      0,	// sub_32
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// GPR32wsp
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      0,	// sub_32
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// GPR32nowzr
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      0,	// sub_32
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// FlagClass
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      0,	// sub_32
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// Rwsp
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      0,	// sub_32
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// FPR64
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      9,	// sub_8 -> FPR64
      9,	// sub_16 -> FPR64
      9,	// sub_32 -> FPR64
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// GPR64
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      10,	// sub_32 -> GPR64
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// GPR64xsp
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      11,	// sub_32 -> GPR64xsp
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// GPR64noxzr
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      12,	// sub_32 -> GPR64noxzr
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// tcGPR64
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      13,	// sub_32 -> tcGPR64
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// FPR64Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      14,	// sub_8 -> FPR64Lo
      14,	// sub_16 -> FPR64Lo
      14,	// sub_32 -> FPR64Lo
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// Rxsp
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      0,	// sub_8
      0,	// sub_16
      15,	// sub_32 -> Rxsp
      0,	// sub_64
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DPair
      16,	// dsub_0 -> DPair
      16,	// dsub_1 -> DPair
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      16,	// sub_8 -> DPair
      16,	// sub_16 -> DPair
      16,	// sub_32 -> DPair
      0,	// sub_64
      0,	// sub_128
      16,	// dsub_1_then_sub_8 -> DPair
      16,	// dsub_1_then_sub_16 -> DPair
      16,	// dsub_1_then_sub_32 -> DPair
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DPair_with_dsub_0_in_FPR64Lo
      17,	// dsub_0 -> DPair_with_dsub_0_in_FPR64Lo
      17,	// dsub_1 -> DPair_with_dsub_0_in_FPR64Lo
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      17,	// sub_8 -> DPair_with_dsub_0_in_FPR64Lo
      17,	// sub_16 -> DPair_with_dsub_0_in_FPR64Lo
      17,	// sub_32 -> DPair_with_dsub_0_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      17,	// dsub_1_then_sub_8 -> DPair_with_dsub_0_in_FPR64Lo
      17,	// dsub_1_then_sub_16 -> DPair_with_dsub_0_in_FPR64Lo
      17,	// dsub_1_then_sub_32 -> DPair_with_dsub_0_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DPair_with_dsub_1_in_FPR64Lo
      18,	// dsub_0 -> DPair_with_dsub_1_in_FPR64Lo
      18,	// dsub_1 -> DPair_with_dsub_1_in_FPR64Lo
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      18,	// sub_8 -> DPair_with_dsub_1_in_FPR64Lo
      18,	// sub_16 -> DPair_with_dsub_1_in_FPR64Lo
      18,	// sub_32 -> DPair_with_dsub_1_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      18,	// dsub_1_then_sub_8 -> DPair_with_dsub_1_in_FPR64Lo
      18,	// dsub_1_then_sub_16 -> DPair_with_dsub_1_in_FPR64Lo
      18,	// dsub_1_then_sub_32 -> DPair_with_dsub_1_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      19,	// dsub_0 -> DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      19,	// dsub_1 -> DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      19,	// sub_8 -> DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      19,	// sub_16 -> DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      19,	// sub_32 -> DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      19,	// dsub_1_then_sub_8 -> DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      19,	// dsub_1_then_sub_16 -> DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      19,	// dsub_1_then_sub_32 -> DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// FPR128
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      20,	// sub_8 -> FPR128
      20,	// sub_16 -> FPR128
      20,	// sub_32 -> FPR128
      20,	// sub_64 -> FPR128
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      21,	// sub_8 -> FPR128Lo
      21,	// sub_16 -> FPR128Lo
      21,	// sub_32 -> FPR128Lo
      21,	// sub_64 -> FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DTriple
      22,	// dsub_0 -> DTriple
      22,	// dsub_1 -> DTriple
      22,	// dsub_2 -> DTriple
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      22,	// sub_8 -> DTriple
      22,	// sub_16 -> DTriple
      22,	// sub_32 -> DTriple
      0,	// sub_64
      0,	// sub_128
      22,	// dsub_1_then_sub_8 -> DTriple
      22,	// dsub_1_then_sub_16 -> DTriple
      22,	// dsub_1_then_sub_32 -> DTriple
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      22,	// dsub_2_then_sub_8 -> DTriple
      22,	// dsub_2_then_sub_16 -> DTriple
      22,	// dsub_2_then_sub_32 -> DTriple
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      22,	// dsub_0_dsub_1 -> DTriple
      22,	// dsub_1_dsub_2 -> DTriple
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DTriple_with_dsub_0_in_FPR64Lo
      23,	// dsub_0 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// dsub_1 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// dsub_2 -> DTriple_with_dsub_0_in_FPR64Lo
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      23,	// sub_8 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// sub_16 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// sub_32 -> DTriple_with_dsub_0_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      23,	// dsub_1_then_sub_8 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// dsub_1_then_sub_16 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// dsub_1_then_sub_32 -> DTriple_with_dsub_0_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      23,	// dsub_2_then_sub_8 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// dsub_2_then_sub_16 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// dsub_2_then_sub_32 -> DTriple_with_dsub_0_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      23,	// dsub_0_dsub_1 -> DTriple_with_dsub_0_in_FPR64Lo
      23,	// dsub_1_dsub_2 -> DTriple_with_dsub_0_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DTriple_with_dsub_1_in_FPR64Lo
      24,	// dsub_0 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// dsub_1 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// dsub_2 -> DTriple_with_dsub_1_in_FPR64Lo
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      24,	// sub_8 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// sub_16 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// sub_32 -> DTriple_with_dsub_1_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      24,	// dsub_1_then_sub_8 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// dsub_1_then_sub_16 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// dsub_1_then_sub_32 -> DTriple_with_dsub_1_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      24,	// dsub_2_then_sub_8 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// dsub_2_then_sub_16 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// dsub_2_then_sub_32 -> DTriple_with_dsub_1_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      24,	// dsub_0_dsub_1 -> DTriple_with_dsub_1_in_FPR64Lo
      24,	// dsub_1_dsub_2 -> DTriple_with_dsub_1_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DTriple_with_dsub_2_in_FPR64Lo
      25,	// dsub_0 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// dsub_1 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// dsub_2 -> DTriple_with_dsub_2_in_FPR64Lo
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      25,	// sub_8 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// sub_16 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// sub_32 -> DTriple_with_dsub_2_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      25,	// dsub_1_then_sub_8 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// dsub_1_then_sub_16 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// dsub_1_then_sub_32 -> DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      25,	// dsub_2_then_sub_8 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// dsub_2_then_sub_16 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// dsub_2_then_sub_32 -> DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      25,	// dsub_0_dsub_1 -> DTriple_with_dsub_2_in_FPR64Lo
      25,	// dsub_1_dsub_2 -> DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// dsub_0 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// dsub_1 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// dsub_2 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      26,	// sub_8 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// sub_16 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// sub_32 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      26,	// dsub_1_then_sub_8 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// dsub_1_then_sub_16 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// dsub_1_then_sub_32 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      26,	// dsub_2_then_sub_8 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// dsub_2_then_sub_16 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// dsub_2_then_sub_32 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      26,	// dsub_0_dsub_1 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      26,	// dsub_1_dsub_2 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// dsub_0 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// dsub_1 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// dsub_2 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      27,	// sub_8 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// sub_16 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// sub_32 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      27,	// dsub_1_then_sub_8 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// dsub_1_then_sub_16 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// dsub_1_then_sub_32 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      27,	// dsub_2_then_sub_8 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// dsub_2_then_sub_16 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// dsub_2_then_sub_32 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      27,	// dsub_0_dsub_1 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      27,	// dsub_1_dsub_2 -> DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// dsub_0 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// dsub_1 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// dsub_2 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      28,	// sub_8 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// sub_16 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// sub_32 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      28,	// dsub_1_then_sub_8 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// dsub_1_then_sub_16 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// dsub_1_then_sub_32 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      28,	// dsub_2_then_sub_8 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// dsub_2_then_sub_16 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// dsub_2_then_sub_32 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      28,	// dsub_0_dsub_1 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      28,	// dsub_1_dsub_2 -> DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad
      29,	// dsub_0 -> DQuad
      29,	// dsub_1 -> DQuad
      29,	// dsub_2 -> DQuad
      29,	// dsub_3 -> DQuad
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      29,	// sub_8 -> DQuad
      29,	// sub_16 -> DQuad
      29,	// sub_32 -> DQuad
      0,	// sub_64
      0,	// sub_128
      29,	// dsub_1_then_sub_8 -> DQuad
      29,	// dsub_1_then_sub_16 -> DQuad
      29,	// dsub_1_then_sub_32 -> DQuad
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      29,	// dsub_2_then_sub_8 -> DQuad
      29,	// dsub_2_then_sub_16 -> DQuad
      29,	// dsub_2_then_sub_32 -> DQuad
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      29,	// dsub_3_then_sub_8 -> DQuad
      29,	// dsub_3_then_sub_16 -> DQuad
      29,	// dsub_3_then_sub_32 -> DQuad
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      29,	// dsub_0_dsub_1 -> DQuad
      29,	// dsub_1_dsub_2 -> DQuad
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      29,	// dsub_0_dsub_1_dsub_2 -> DQuad
      29,	// dsub_1_dsub_2_dsub_3 -> DQuad
      29,	// dsub_2_dsub_3 -> DQuad
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_0 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_1 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      30,	// sub_8 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// sub_16 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// sub_32 -> DQuad_with_dsub_0_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      30,	// dsub_1_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_1_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_1_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      30,	// dsub_2_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_2_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_2_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      30,	// dsub_3_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_3_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_3_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      30,	// dsub_0_dsub_1 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_1_dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      30,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo
      30,	// dsub_2_dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_0 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_1 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      31,	// sub_8 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// sub_16 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// sub_32 -> DQuad_with_dsub_1_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      31,	// dsub_1_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_1_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_1_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      31,	// dsub_2_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_2_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_2_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      31,	// dsub_3_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_3_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_3_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      31,	// dsub_0_dsub_1 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_1_dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      31,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo
      31,	// dsub_2_dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_0 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_1 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_2 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_3 -> DQuad_with_dsub_2_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      32,	// sub_8 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// sub_16 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// sub_32 -> DQuad_with_dsub_2_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      32,	// dsub_1_then_sub_8 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_1_then_sub_16 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_1_then_sub_32 -> DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      32,	// dsub_2_then_sub_8 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_2_then_sub_16 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_2_then_sub_32 -> DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      32,	// dsub_3_then_sub_8 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_3_then_sub_16 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_3_then_sub_32 -> DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      32,	// dsub_0_dsub_1 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_1_dsub_2 -> DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      32,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_2_in_FPR64Lo
      32,	// dsub_2_dsub_3 -> DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_0 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_1 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_2 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_3 -> DQuad_with_dsub_3_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      33,	// sub_8 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// sub_16 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// sub_32 -> DQuad_with_dsub_3_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      33,	// dsub_1_then_sub_8 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_1_then_sub_16 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_1_then_sub_32 -> DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      33,	// dsub_2_then_sub_8 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_2_then_sub_16 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_2_then_sub_32 -> DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      33,	// dsub_3_then_sub_8 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_3_then_sub_16 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_3_then_sub_32 -> DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      33,	// dsub_0_dsub_1 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_1_dsub_2 -> DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      33,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_3_in_FPR64Lo
      33,	// dsub_2_dsub_3 -> DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_0 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_1 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      34,	// sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      34,	// dsub_1_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_1_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_1_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      34,	// dsub_2_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_2_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_2_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      34,	// dsub_3_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_3_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_3_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      34,	// dsub_0_dsub_1 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_1_dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      34,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      34,	// dsub_2_dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_0 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_1 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      35,	// sub_8 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// sub_16 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// sub_32 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      35,	// dsub_1_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_1_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_1_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      35,	// dsub_2_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_2_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_2_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      35,	// dsub_3_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_3_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_3_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      35,	// dsub_0_dsub_1 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_1_dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      35,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      35,	// dsub_2_dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_0 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_1 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_2 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_3 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      36,	// sub_8 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// sub_16 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// sub_32 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      36,	// dsub_1_then_sub_8 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_1_then_sub_16 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_1_then_sub_32 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      36,	// dsub_2_then_sub_8 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_2_then_sub_16 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_2_then_sub_32 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      36,	// dsub_3_then_sub_8 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_3_then_sub_16 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_3_then_sub_32 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      36,	// dsub_0_dsub_1 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_1_dsub_2 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      36,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      36,	// dsub_2_dsub_3 -> DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_0 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_1 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      37,	// sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      37,	// dsub_1_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_1_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_1_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      37,	// dsub_2_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_2_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_2_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      37,	// dsub_3_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_3_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_3_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      37,	// dsub_0_dsub_1 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_1_dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      37,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      37,	// dsub_2_dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_0 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_1 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      38,	// sub_8 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// sub_16 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// sub_32 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      38,	// dsub_1_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_1_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_1_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      38,	// dsub_2_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_2_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_2_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      38,	// dsub_3_then_sub_8 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_3_then_sub_16 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_3_then_sub_32 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      38,	// dsub_0_dsub_1 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_1_dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      38,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      38,	// dsub_2_dsub_3 -> DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_0 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_1 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// dsub_4
      0,	// qqsub
      0,	// qsub_0
      0,	// qsub_1
      0,	// qsub_2
      0,	// qsub_3
      39,	// sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// sub_64
      0,	// sub_128
      39,	// dsub_1_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_1_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_1_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_1_then_sub_8
      0,	// qsub_1_then_sub_16
      0,	// qsub_1_then_sub_32
      0,	// qsub_1_then_sub_64
      39,	// dsub_2_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_2_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_2_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      39,	// dsub_3_then_sub_8 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_3_then_sub_16 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_3_then_sub_32 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      0,	// sub_64_qsub_1_then_sub_64
      39,	// dsub_0_dsub_1 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_1_dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      39,	// dsub_0_dsub_1_dsub_2 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_1_dsub_2_dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      39,	// dsub_2_dsub_3 -> DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QPair
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      40,	// qsub_0 -> QPair
      40,	// qsub_1 -> QPair
      0,	// qsub_2
      0,	// qsub_3
      40,	// sub_8 -> QPair
      40,	// sub_16 -> QPair
      40,	// sub_32 -> QPair
      40,	// sub_64 -> QPair
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      40,	// qsub_1_then_sub_8 -> QPair
      40,	// qsub_1_then_sub_16 -> QPair
      40,	// qsub_1_then_sub_32 -> QPair
      40,	// qsub_1_then_sub_64 -> QPair
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      40,	// sub_64_qsub_1_then_sub_64 -> QPair
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QPair_with_qsub_0_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      41,	// qsub_0 -> QPair_with_qsub_0_in_FPR128Lo
      41,	// qsub_1 -> QPair_with_qsub_0_in_FPR128Lo
      0,	// qsub_2
      0,	// qsub_3
      41,	// sub_8 -> QPair_with_qsub_0_in_FPR128Lo
      41,	// sub_16 -> QPair_with_qsub_0_in_FPR128Lo
      41,	// sub_32 -> QPair_with_qsub_0_in_FPR128Lo
      41,	// sub_64 -> QPair_with_qsub_0_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      41,	// qsub_1_then_sub_8 -> QPair_with_qsub_0_in_FPR128Lo
      41,	// qsub_1_then_sub_16 -> QPair_with_qsub_0_in_FPR128Lo
      41,	// qsub_1_then_sub_32 -> QPair_with_qsub_0_in_FPR128Lo
      41,	// qsub_1_then_sub_64 -> QPair_with_qsub_0_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      41,	// sub_64_qsub_1_then_sub_64 -> QPair_with_qsub_0_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QPair_with_qsub_1_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      42,	// qsub_0 -> QPair_with_qsub_1_in_FPR128Lo
      42,	// qsub_1 -> QPair_with_qsub_1_in_FPR128Lo
      0,	// qsub_2
      0,	// qsub_3
      42,	// sub_8 -> QPair_with_qsub_1_in_FPR128Lo
      42,	// sub_16 -> QPair_with_qsub_1_in_FPR128Lo
      42,	// sub_32 -> QPair_with_qsub_1_in_FPR128Lo
      42,	// sub_64 -> QPair_with_qsub_1_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      42,	// qsub_1_then_sub_8 -> QPair_with_qsub_1_in_FPR128Lo
      42,	// qsub_1_then_sub_16 -> QPair_with_qsub_1_in_FPR128Lo
      42,	// qsub_1_then_sub_32 -> QPair_with_qsub_1_in_FPR128Lo
      42,	// qsub_1_then_sub_64 -> QPair_with_qsub_1_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      42,	// sub_64_qsub_1_then_sub_64 -> QPair_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      43,	// qsub_0 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      43,	// qsub_1 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      0,	// qsub_2
      0,	// qsub_3
      43,	// sub_8 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      43,	// sub_16 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      43,	// sub_32 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      43,	// sub_64 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      43,	// qsub_1_then_sub_8 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      43,	// qsub_1_then_sub_16 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      43,	// qsub_1_then_sub_32 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      43,	// qsub_1_then_sub_64 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      0,	// qsub_2_then_sub_8
      0,	// qsub_2_then_sub_16
      0,	// qsub_2_then_sub_32
      0,	// qsub_2_then_sub_64
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      43,	// sub_64_qsub_1_then_sub_64 -> QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      0,	// qsub_0_qsub_1
      0,	// qsub_1_qsub_2
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QTriple
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      44,	// qsub_0 -> QTriple
      44,	// qsub_1 -> QTriple
      44,	// qsub_2 -> QTriple
      0,	// qsub_3
      44,	// sub_8 -> QTriple
      44,	// sub_16 -> QTriple
      44,	// sub_32 -> QTriple
      44,	// sub_64 -> QTriple
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      44,	// qsub_1_then_sub_8 -> QTriple
      44,	// qsub_1_then_sub_16 -> QTriple
      44,	// qsub_1_then_sub_32 -> QTriple
      44,	// qsub_1_then_sub_64 -> QTriple
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      44,	// qsub_2_then_sub_8 -> QTriple
      44,	// qsub_2_then_sub_16 -> QTriple
      44,	// qsub_2_then_sub_32 -> QTriple
      44,	// qsub_2_then_sub_64 -> QTriple
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      44,	// sub_64_qsub_1_then_sub_64 -> QTriple
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      44,	// qsub_0_qsub_1 -> QTriple
      44,	// qsub_1_qsub_2 -> QTriple
      44,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple
      44,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QTriple_with_qsub_0_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      45,	// qsub_0 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_1 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_2 -> QTriple_with_qsub_0_in_FPR128Lo
      0,	// qsub_3
      45,	// sub_8 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// sub_16 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// sub_32 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// sub_64 -> QTriple_with_qsub_0_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      45,	// qsub_1_then_sub_8 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_1_then_sub_16 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_1_then_sub_32 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_1_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      45,	// qsub_2_then_sub_8 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_2_then_sub_16 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_2_then_sub_32 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      45,	// sub_64_qsub_1_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      45,	// qsub_0_qsub_1 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_1_qsub_2 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo
      45,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      46,	// qsub_0 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_1 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_2 -> QTriple_with_qsub_1_in_FPR128Lo
      0,	// qsub_3
      46,	// sub_8 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// sub_16 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// sub_32 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// sub_64 -> QTriple_with_qsub_1_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      46,	// qsub_1_then_sub_8 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_1_then_sub_16 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_1_then_sub_32 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_1_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      46,	// qsub_2_then_sub_8 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_2_then_sub_16 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_2_then_sub_32 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_2_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      46,	// sub_64_qsub_1_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      46,	// qsub_0_qsub_1 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_1_qsub_2 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo
      46,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      47,	// qsub_0 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_1 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_2 -> QTriple_with_qsub_2_in_FPR128Lo
      0,	// qsub_3
      47,	// sub_8 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// sub_16 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// sub_32 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// sub_64 -> QTriple_with_qsub_2_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      47,	// qsub_1_then_sub_8 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_1_then_sub_16 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_1_then_sub_32 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_1_then_sub_64 -> QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      47,	// qsub_2_then_sub_8 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_2_then_sub_16 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_2_then_sub_32 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_2_then_sub_64 -> QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      47,	// sub_64_qsub_1_then_sub_64 -> QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      47,	// qsub_0_qsub_1 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_1_qsub_2 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_2_in_FPR128Lo
      47,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      48,	// qsub_0 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_1 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_2 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      0,	// qsub_3
      48,	// sub_8 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// sub_16 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// sub_32 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      48,	// qsub_1_then_sub_8 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_1_then_sub_16 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_1_then_sub_32 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_1_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      48,	// qsub_2_then_sub_8 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_2_then_sub_16 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_2_then_sub_32 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      48,	// sub_64_qsub_1_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      48,	// qsub_0_qsub_1 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_1_qsub_2 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      48,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      49,	// qsub_0 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_1 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_2 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// qsub_3
      49,	// sub_8 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// sub_16 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// sub_32 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// sub_64 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      49,	// qsub_1_then_sub_8 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_1_then_sub_16 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_1_then_sub_32 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_1_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      49,	// qsub_2_then_sub_8 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_2_then_sub_16 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_2_then_sub_32 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_2_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      49,	// sub_64_qsub_1_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      49,	// qsub_0_qsub_1 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_1_qsub_2 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      49,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      50,	// qsub_0 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_1 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_2 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// qsub_3
      50,	// sub_8 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// sub_16 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// sub_32 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      50,	// qsub_1_then_sub_8 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_1_then_sub_16 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_1_then_sub_32 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_1_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      50,	// qsub_2_then_sub_8 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_2_then_sub_16 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_2_then_sub_32 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      0,	// qsub_3_then_sub_8
      0,	// qsub_3_then_sub_16
      0,	// qsub_3_then_sub_32
      0,	// qsub_3_then_sub_64
      50,	// sub_64_qsub_1_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      50,	// qsub_0_qsub_1 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_1_qsub_2 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      50,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      0,	// qsub_0_qsub_1_qsub_2
      0,	// qsub_1_qsub_2_qsub_3
      0,	// qsub_2_qsub_3
      0,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64
      0,	// qsub_2_then_sub_64_qsub_3_then_sub_64
    },
    {	// QQuad
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      51,	// qsub_0 -> QQuad
      51,	// qsub_1 -> QQuad
      51,	// qsub_2 -> QQuad
      51,	// qsub_3 -> QQuad
      51,	// sub_8 -> QQuad
      51,	// sub_16 -> QQuad
      51,	// sub_32 -> QQuad
      51,	// sub_64 -> QQuad
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      51,	// qsub_1_then_sub_8 -> QQuad
      51,	// qsub_1_then_sub_16 -> QQuad
      51,	// qsub_1_then_sub_32 -> QQuad
      51,	// qsub_1_then_sub_64 -> QQuad
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      51,	// qsub_2_then_sub_8 -> QQuad
      51,	// qsub_2_then_sub_16 -> QQuad
      51,	// qsub_2_then_sub_32 -> QQuad
      51,	// qsub_2_then_sub_64 -> QQuad
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      51,	// qsub_3_then_sub_8 -> QQuad
      51,	// qsub_3_then_sub_16 -> QQuad
      51,	// qsub_3_then_sub_32 -> QQuad
      51,	// qsub_3_then_sub_64 -> QQuad
      51,	// sub_64_qsub_1_then_sub_64 -> QQuad
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      51,	// qsub_0_qsub_1 -> QQuad
      51,	// qsub_1_qsub_2 -> QQuad
      51,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad
      51,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      51,	// qsub_0_qsub_1_qsub_2 -> QQuad
      51,	// qsub_1_qsub_2_qsub_3 -> QQuad
      51,	// qsub_2_qsub_3 -> QQuad
      51,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad
      51,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad
      51,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad
    },
    {	// QQuad_with_qsub_0_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      52,	// qsub_0 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_1 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// sub_8 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// sub_16 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// sub_32 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      52,	// qsub_1_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_1_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_1_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_1_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      52,	// qsub_2_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_2_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_2_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      52,	// qsub_3_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_3_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_3_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      52,	// qsub_0_qsub_1 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_1_qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      52,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_2_qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
      52,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo
    },
    {	// QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      53,	// qsub_0 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_1 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// sub_8 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// sub_16 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// sub_32 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      53,	// qsub_1_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_1_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_1_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_1_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      53,	// qsub_2_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_2_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_2_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      53,	// qsub_3_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_3_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_3_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      53,	// qsub_0_qsub_1 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_1_qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      53,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_2_qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
      53,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo
    },
    {	// QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      54,	// qsub_0 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_1 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_2 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_3 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// sub_8 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// sub_16 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// sub_32 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      54,	// qsub_1_then_sub_8 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_1_then_sub_16 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_1_then_sub_32 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_1_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      54,	// qsub_2_then_sub_8 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_2_then_sub_16 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_2_then_sub_32 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_2_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      54,	// qsub_3_then_sub_8 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_3_then_sub_16 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_3_then_sub_32 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_3_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      54,	// qsub_0_qsub_1 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_1_qsub_2 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      54,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_2_qsub_3 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
      54,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo
    },
    {	// QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      55,	// qsub_0 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_1 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_2 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_3 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// sub_8 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// sub_16 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// sub_32 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      55,	// qsub_1_then_sub_8 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_1_then_sub_16 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_1_then_sub_32 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_1_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      55,	// qsub_2_then_sub_8 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_2_then_sub_16 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_2_then_sub_32 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_2_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      55,	// qsub_3_then_sub_8 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_3_then_sub_16 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_3_then_sub_32 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_3_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      55,	// qsub_0_qsub_1 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_1_qsub_2 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      55,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_2_qsub_3 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
      55,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_3_in_FPR128Lo
    },
    {	// QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      56,	// qsub_0 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_1 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      56,	// qsub_1_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_1_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_1_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_1_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      56,	// qsub_2_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_2_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_2_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      56,	// qsub_3_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_3_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_3_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      56,	// qsub_0_qsub_1 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_1_qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      56,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_2_qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
      56,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
    },
    {	// QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      57,	// qsub_0 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_1 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// sub_8 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// sub_16 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// sub_32 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      57,	// qsub_1_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_1_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_1_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_1_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      57,	// qsub_2_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_2_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_2_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      57,	// qsub_3_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_3_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_3_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      57,	// qsub_0_qsub_1 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_1_qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      57,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_2_qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      57,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
    },
    {	// QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      58,	// qsub_0 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_1 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_2 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_3 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// sub_8 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// sub_16 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// sub_32 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      58,	// qsub_1_then_sub_8 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_1_then_sub_16 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_1_then_sub_32 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_1_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      58,	// qsub_2_then_sub_8 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_2_then_sub_16 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_2_then_sub_32 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_2_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      58,	// qsub_3_then_sub_8 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_3_then_sub_16 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_3_then_sub_32 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_3_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      58,	// qsub_0_qsub_1 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_1_qsub_2 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      58,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_2_qsub_3 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      58,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    },
    {	// QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      59,	// qsub_0 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_1 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      59,	// qsub_1_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_1_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_1_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_1_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      59,	// qsub_2_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_2_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_2_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      59,	// qsub_3_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_3_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_3_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      59,	// qsub_0_qsub_1 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_1_qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      59,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_2_qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
      59,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
    },
    {	// QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      60,	// qsub_0 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_1 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// sub_8 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// sub_16 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// sub_32 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      60,	// qsub_1_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_1_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_1_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_1_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      60,	// qsub_2_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_2_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_2_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      60,	// qsub_3_then_sub_8 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_3_then_sub_16 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_3_then_sub_32 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      60,	// qsub_0_qsub_1 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_1_qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      60,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_2_qsub_3 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      60,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    },
    {	// QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0
      0,	// dsub_1
      0,	// dsub_2
      0,	// dsub_3
      0,	// dsub_4
      0,	// qqsub
      61,	// qsub_0 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_1 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// sub_128
      0,	// dsub_1_then_sub_8
      0,	// dsub_1_then_sub_16
      0,	// dsub_1_then_sub_32
      61,	// qsub_1_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_1_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_1_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_1_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_2_then_sub_8
      0,	// dsub_2_then_sub_16
      0,	// dsub_2_then_sub_32
      61,	// qsub_2_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_2_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_2_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_3_then_sub_8
      0,	// dsub_3_then_sub_16
      0,	// dsub_3_then_sub_32
      61,	// qsub_3_then_sub_8 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_3_then_sub_16 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_3_then_sub_32 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// sub_64_qsub_1_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0_dsub_1
      0,	// dsub_1_dsub_2
      61,	// qsub_0_qsub_1 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_1_qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_1_then_sub_64_qsub_2_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      0,	// dsub_0_dsub_1_dsub_2
      0,	// dsub_1_dsub_2_dsub_3
      0,	// dsub_2_dsub_3
      61,	// qsub_0_qsub_1_qsub_2 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_1_qsub_2_qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_2_qsub_3 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// sub_64_qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_1_then_sub_64_qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
      61,	// qsub_2_then_sub_64_qsub_3_then_sub_64 -> QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    },
  };
  assert(RC && "Missing regclass");
  if (!Idx) return RC;
  --Idx;
  assert(Idx < 52 && "Bad subreg");
  unsigned TV = Table[RC->getID()][Idx];
  return TV ? getRegClass(TV - 1) : 0;
}

/// Get the weight in units of pressure for this register class.
const RegClassWeight &AArch64GenRegisterInfo::
getRegClassWeight(const TargetRegisterClass *RC) const {
  static const RegClassWeight RCWeightTable[] = {
    {1, 32},  	// FPR8
    {1, 32},  	// FPR16
    {1, 32},  	// FPR32
    {1, 32},  	// GPR32
    {1, 32},  	// GPR32wsp
    {1, 31},  	// GPR32nowzr
    {0, 0},  	// FlagClass
    {1, 1},  	// Rwsp
    {1, 32},  	// FPR64
    {1, 32},  	// GPR64
    {1, 32},  	// GPR64xsp
    {1, 31},  	// GPR64noxzr
    {1, 18},  	// tcGPR64
    {1, 16},  	// FPR64Lo
    {1, 1},  	// Rxsp
    {2, 32},  	// DPair
    {2, 17},  	// DPair_with_dsub_0_in_FPR64Lo
    {2, 17},  	// DPair_with_dsub_1_in_FPR64Lo
    {2, 16},  	// DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
    {1, 32},  	// FPR128
    {1, 16},  	// FPR128Lo
    {3, 32},  	// DTriple
    {3, 18},  	// DTriple_with_dsub_0_in_FPR64Lo
    {3, 18},  	// DTriple_with_dsub_1_in_FPR64Lo
    {3, 18},  	// DTriple_with_dsub_2_in_FPR64Lo
    {3, 17},  	// DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
    {3, 17},  	// DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
    {3, 16},  	// DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
    {4, 32},  	// DQuad
    {4, 19},  	// DQuad_with_dsub_0_in_FPR64Lo
    {4, 19},  	// DQuad_with_dsub_1_in_FPR64Lo
    {4, 19},  	// DQuad_with_dsub_2_in_FPR64Lo
    {4, 19},  	// DQuad_with_dsub_3_in_FPR64Lo
    {4, 18},  	// DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
    {4, 18},  	// DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
    {4, 18},  	// DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
    {4, 17},  	// DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
    {4, 17},  	// DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
    {4, 16},  	// DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
    {2, 32},  	// QPair
    {2, 17},  	// QPair_with_qsub_0_in_FPR128Lo
    {2, 17},  	// QPair_with_qsub_1_in_FPR128Lo
    {2, 16},  	// QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
    {3, 32},  	// QTriple
    {3, 18},  	// QTriple_with_qsub_0_in_FPR128Lo
    {3, 18},  	// QTriple_with_qsub_1_in_FPR128Lo
    {3, 18},  	// QTriple_with_qsub_2_in_FPR128Lo
    {3, 17},  	// QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
    {3, 17},  	// QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
    {3, 16},  	// QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
    {4, 32},  	// QQuad
    {4, 19},  	// QQuad_with_qsub_0_in_FPR128Lo
    {4, 19},  	// QQuad_with_qsub_1_in_FPR128Lo
    {4, 19},  	// QQuad_with_qsub_2_in_FPR128Lo
    {4, 19},  	// QQuad_with_qsub_3_in_FPR128Lo
    {4, 18},  	// QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
    {4, 18},  	// QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
    {4, 18},  	// QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    {4, 17},  	// QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
    {4, 17},  	// QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    {4, 16},  	// QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    {0, 0} };
  return RCWeightTable[RC->getID()];
}

/// Get the weight in units of pressure for this register unit.
unsigned AArch64GenRegisterInfo::
getRegUnitWeight(unsigned RegUnit) const {
  assert(RegUnit < 66 && "invalid register unit");
  // All register units have unit weight.
  return 1;
}


// Get the number of dimensions of register pressure.
unsigned AArch64GenRegisterInfo::getNumRegPressureSets() const {
  return 5;
}

// Get the name of this register unit pressure set.
const char *AArch64GenRegisterInfo::
getRegPressureSetName(unsigned Idx) const {
  static const char *PressureNameTable[] = {
    "Rwsp",
    "tcGPR64",
    "DQuad_with_dsub_0_in_FPR64Lo+DQuad_with_dsub_3_in_FPR64Lo",
    "FPR8",
    "GPR32+GPR32wsp",
    0 };
  return PressureNameTable[Idx];
}

// Get the register unit pressure limit for this dimension.
// This limit must be adjusted dynamically for reserved registers.
unsigned AArch64GenRegisterInfo::
getRegPressureSetLimit(unsigned Idx) const {
  static const unsigned PressureLimitTable[] = {
    1,  	// 0: Rwsp
    18,  	// 1: tcGPR64
    22,  	// 2: DQuad_with_dsub_0_in_FPR64Lo+DQuad_with_dsub_3_in_FPR64Lo
    32,  	// 3: FPR8
    33,  	// 4: GPR32+GPR32wsp
    0 };
  return PressureLimitTable[Idx];
}

/// Table of pressure sets per register class or unit.
static const int RCSetsTable[] = {
    3,  -1,  	// #0 FPR8
    3,  -1,  	// #2 FPR16
    3,  -1,  	// #4 FPR32
    4,  -1,  	// #6 GPR32
    4,  -1,  	// #8 GPR32wsp
    4,  -1,  	// #10 GPR32nowzr
    -1,  	// #12 FlagClass
    0,  4,  -1,  	// #13 Rwsp
    3,  -1,  	// #16 FPR64
    4,  -1,  	// #18 GPR64
    4,  -1,  	// #20 GPR64xsp
    4,  -1,  	// #22 GPR64noxzr
    1,  4,  -1,  	// #24 tcGPR64
    2,  3,  -1,  	// #27 FPR64Lo
    0,  4,  -1,  	// #30 Rxsp
    3,  -1,  	// #33 DPair
    2,  3,  -1,  	// #35 DPair_with_dsub_0_in_FPR64Lo
    2,  3,  -1,  	// #38 DPair_with_dsub_1_in_FPR64Lo
    2,  3,  -1,  	// #41 DPair_with_dsub_0_in_FPR64Lo_and_DPair_with_dsub_1_in_FPR64Lo
    3,  -1,  	// #44 FPR128
    2,  3,  -1,  	// #46 FPR128Lo
    3,  -1,  	// #49 DTriple
    2,  3,  -1,  	// #51 DTriple_with_dsub_0_in_FPR64Lo
    2,  3,  -1,  	// #54 DTriple_with_dsub_1_in_FPR64Lo
    2,  3,  -1,  	// #57 DTriple_with_dsub_2_in_FPR64Lo
    2,  3,  -1,  	// #60 DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_1_in_FPR64Lo
    2,  3,  -1,  	// #63 DTriple_with_dsub_1_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
    2,  3,  -1,  	// #66 DTriple_with_dsub_0_in_FPR64Lo_and_DTriple_with_dsub_2_in_FPR64Lo
    3,  -1,  	// #69 DQuad
    2,  3,  -1,  	// #71 DQuad_with_dsub_0_in_FPR64Lo
    2,  3,  -1,  	// #74 DQuad_with_dsub_1_in_FPR64Lo
    2,  3,  -1,  	// #77 DQuad_with_dsub_2_in_FPR64Lo
    2,  3,  -1,  	// #80 DQuad_with_dsub_3_in_FPR64Lo
    2,  3,  -1,  	// #83 DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_1_in_FPR64Lo
    2,  3,  -1,  	// #86 DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
    2,  3,  -1,  	// #89 DQuad_with_dsub_2_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
    2,  3,  -1,  	// #92 DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_2_in_FPR64Lo
    2,  3,  -1,  	// #95 DQuad_with_dsub_1_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
    2,  3,  -1,  	// #98 DQuad_with_dsub_0_in_FPR64Lo_and_DQuad_with_dsub_3_in_FPR64Lo
    3,  -1,  	// #101 QPair
    2,  3,  -1,  	// #103 QPair_with_qsub_0_in_FPR128Lo
    2,  3,  -1,  	// #106 QPair_with_qsub_1_in_FPR128Lo
    2,  3,  -1,  	// #109 QPair_with_qsub_0_in_FPR128Lo_and_QPair_with_qsub_1_in_FPR128Lo
    3,  -1,  	// #112 QTriple
    2,  3,  -1,  	// #114 QTriple_with_qsub_0_in_FPR128Lo
    2,  3,  -1,  	// #117 QTriple_with_qsub_1_in_FPR128Lo
    2,  3,  -1,  	// #120 QTriple_with_qsub_2_in_FPR128Lo
    2,  3,  -1,  	// #123 QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_1_in_FPR128Lo
    2,  3,  -1,  	// #126 QTriple_with_qsub_1_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
    2,  3,  -1,  	// #129 QTriple_with_qsub_0_in_FPR128Lo_and_QTriple_with_qsub_2_in_FPR128Lo
    3,  -1,  	// #132 QQuad
    2,  3,  -1,  	// #134 QQuad_with_qsub_0_in_FPR128Lo
    2,  3,  -1,  	// #137 QQuad_with_qsub_1_in_FPR128Lo
    2,  3,  -1,  	// #140 QQuad_with_qsub_2_in_FPR128Lo
    2,  3,  -1,  	// #143 QQuad_with_qsub_3_in_FPR128Lo
    2,  3,  -1,  	// #146 QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_1_in_FPR128Lo
    2,  3,  -1,  	// #149 QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
    2,  3,  -1,  	// #152 QQuad_with_qsub_2_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    2,  3,  -1,  	// #155 QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_2_in_FPR128Lo
    2,  3,  -1,  	// #158 QQuad_with_qsub_1_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    2,  3,  -1,  	// #161 QQuad_with_qsub_0_in_FPR128Lo_and_QQuad_with_qsub_3_in_FPR128Lo
    -1 };

/// Get the dimensions of register pressure impacted by this register class.
/// Returns a -1 terminated array of pressure set IDs
const int* AArch64GenRegisterInfo::
getRegClassPressureSets(const TargetRegisterClass *RC) const {
  static const unsigned RCSetStartTable[] = {
    0,2,4,6,8,10,12,13,16,18,20,22,24,27,30,33,35,38,41,44,46,49,51,54,57,60,63,66,69,71,74,77,80,83,86,89,92,95,98,101,103,106,109,112,114,117,120,123,126,129,132,134,137,140,143,146,149,152,155,158,161,0 };
  unsigned SetListStart = RCSetStartTable[RC->getID()];
  return &RCSetsTable[SetListStart];
}

/// Get the dimensions of register pressure impacted by this register unit.
/// Returns a -1 terminated array of pressure set IDs
const int* AArch64GenRegisterInfo::
getRegUnitPressureSets(unsigned RegUnit) const {
  assert(RegUnit < 66 && "invalid register unit");
  static const unsigned RUSetStartTable[] = {
    12,13,6,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,27,27,27,24,24,24,24,24,24,24,24,6,24,24,24,24,24,24,24,24,24,24,6,6,6,6,6,6,6,6,6,6,6,6,0 };
  unsigned SetListStart = RUSetStartTable[RegUnit];
  return &RCSetsTable[SetListStart];
}

extern const MCRegisterDesc AArch64RegDesc[];
extern const MCPhysReg AArch64RegDiffLists[];
extern const char AArch64RegStrings[];
extern const uint16_t AArch64RegUnitRoots[][2];
extern const uint16_t AArch64SubRegIdxLists[];
extern const MCRegisterInfo::SubRegCoveredBits AArch64SubRegIdxRanges[];
extern const uint16_t AArch64RegEncodingTable[];
// AArch64 Dwarf<->LLVM register mappings.
extern const MCRegisterInfo::DwarfLLVMRegPair AArch64DwarfFlavour0Dwarf2L[];
extern const unsigned AArch64DwarfFlavour0Dwarf2LSize;

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64EHFlavour0Dwarf2L[];
extern const unsigned AArch64EHFlavour0Dwarf2LSize;

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64DwarfFlavour0L2Dwarf[];
extern const unsigned AArch64DwarfFlavour0L2DwarfSize;

extern const MCRegisterInfo::DwarfLLVMRegPair AArch64EHFlavour0L2Dwarf[];
extern const unsigned AArch64EHFlavour0L2DwarfSize;

AArch64GenRegisterInfo::
AArch64GenRegisterInfo(unsigned RA, unsigned DwarfFlavour, unsigned EHFlavour, unsigned PC)
  : TargetRegisterInfo(AArch64RegInfoDesc, RegisterClasses, RegisterClasses+61,
             SubRegIndexNameTable, SubRegIndexLaneMaskTable, 0xfffffffd) {
  InitMCRegisterInfo(AArch64RegDesc, 420, RA, PC,
                     AArch64MCRegisterClasses, 61,
                     AArch64RegUnitRoots,
                     66,
                     AArch64RegDiffLists,
                     AArch64RegStrings,
                     AArch64SubRegIdxLists,
                     53,
                     AArch64SubRegIdxRanges,
                     AArch64RegEncodingTable);

  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapDwarfRegsToLLVMRegs(AArch64DwarfFlavour0Dwarf2L, AArch64DwarfFlavour0Dwarf2LSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapDwarfRegsToLLVMRegs(AArch64EHFlavour0Dwarf2L, AArch64EHFlavour0Dwarf2LSize, true);
    break;
  }
  switch (DwarfFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapLLVMRegsToDwarfRegs(AArch64DwarfFlavour0L2Dwarf, AArch64DwarfFlavour0L2DwarfSize, false);
    break;
  }
  switch (EHFlavour) {
  default:
    llvm_unreachable("Unknown DWARF flavour");
  case 0:
    mapLLVMRegsToDwarfRegs(AArch64EHFlavour0L2Dwarf, AArch64EHFlavour0L2DwarfSize, true);
    break;
  }
}

static const MCPhysReg CSR_PCS_SaveList[] = { AArch64::X30, AArch64::X29, AArch64::X28, AArch64::X27, AArch64::X26, AArch64::X25, AArch64::X24, AArch64::X23, AArch64::X22, AArch64::X21, AArch64::X20, AArch64::X19, AArch64::D15, AArch64::D14, AArch64::D13, AArch64::D12, AArch64::D11, AArch64::D10, AArch64::D9, AArch64::D8, 0 };
static const uint32_t CSR_PCS_RegMask[] = { 0x003fc000, 0x003fc000, 0x003fc000, 0x00000000, 0x003fc000, 0xfe000000, 0xff00001f, 0x0007f00f, 0x00000000, 0x0003f000, 0x00000000, 0x0001f000, 0x00000000, 0x00000000, };
static const MCPhysReg TLSDesc_SaveList[] = { AArch64::X29, AArch64::X28, AArch64::X27, AArch64::X26, AArch64::X25, AArch64::X24, AArch64::X23, AArch64::X22, AArch64::X21, AArch64::X20, AArch64::X19, AArch64::X18, AArch64::X17, AArch64::X16, AArch64::X15, AArch64::X14, AArch64::X13, AArch64::X12, AArch64::X11, AArch64::X10, AArch64::X9, AArch64::X8, AArch64::X7, AArch64::X6, AArch64::X5, AArch64::X4, AArch64::X3, AArch64::X2, AArch64::X1, AArch64::Q31, AArch64::Q30, AArch64::Q29, AArch64::Q28, AArch64::Q27, AArch64::Q26, AArch64::Q25, AArch64::Q24, AArch64::Q23, AArch64::Q22, AArch64::Q21, AArch64::Q20, AArch64::Q19, AArch64::Q18, AArch64::Q17, AArch64::Q16, AArch64::Q15, AArch64::Q14, AArch64::Q13, AArch64::Q12, AArch64::Q11, AArch64::Q10, AArch64::Q9, AArch64::Q8, AArch64::Q7, AArch64::Q6, AArch64::Q5, AArch64::Q4, AArch64::Q3, AArch64::Q2, AArch64::Q1, AArch64::Q0, 0 };
static const uint32_t TLSDesc_RegMask[] = { 0xffffffc0, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffbf, 0xffffffcf, 0xfffffff7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0000000f, };


} // End llvm namespace 
#endif // GET_REGINFO_TARGET_DESC

