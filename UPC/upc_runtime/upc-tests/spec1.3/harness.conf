# Test harness configuration file

# ------------------------------------------------------------
# Default config for this section assumes all compilations are positive
# and that we should compile for both static and dynamic 
# threads, and run the resulting code.

BEGIN_DEFAULT_CONFIG
Flags:          -DBUPC_TEST_HARNESS
Files:          $TESTNAME$.upc       # filename derived from testname
DynamicThreads: $DEFAULT$            # compile for dynamic threads
StaticThreads:  $DEFAULT$            # compile for static threads
CompileResult:  pass                 # expect compilation to succeed
TimeLimit:      $DEFAULT$            # run the test
PassExpr:       pass                 # No pass expression
FailExpr:       0                    # No fail expression
ExitCode:       ignore               # ignore exit code
BuildCmd:       upcc                 # use upcc to build code
AppArgs:                             # no args to run app
END_DEFAULT_CONFIG

# ------------------------------------------------------------

TestName:	issue03
DynamicThreads: 1,2,3,4
StaticThreads:  1,2,3,4
PassExpr:	^Issue03 test passed\.
FailExpr:       ^Thread \d+ failed \d+ tests!

TestName:	issue10
Files:		issue10.c
StaticThreads:	0 # time-saver since this is a C99 test case
RequireFeature: upc_types

TestName:	issue11
PassExpr:	^PASS
FailExpr:	^FAIL
WarningFilter:  trans_bupc; '.*? warning: cast from pointer to integer .*?'
WarningFilter:  cc_intel; '.*? warning .810: conversion from .*?'
WarningFilter:  cc_cray; 'CC-767 .*?'  # "A pointer is converted to a smaller integer."
KnownFailure:   compile-warning ; symmetricsptr ; Bug 349 - Bad translation of PTS to int
KnownFailure:   compile-failure ; ; Bug 349 - Bad translation of PTS to int
KnownFailure:   run-match ; ; Bug 349 - Bad translation of PTS to int
#KnownFailure:   run-crash ; debug ; Bug 349 - Bad translation of PTS to int

TestName:	issue11a
PassExpr:	^PASS
FailExpr:	^FAIL
WarningFilter:  trans_bupc; '.*? warning: cast from pointer to integer .*?'
WarningFilter:  cc_intel; '.*? warning .810: conversion from .*?'
WarningFilter:  cc_cray; 'CC-767 .*?'  # "A pointer is converted to a smaller integer."
KnownFailure:   compile-warning ; symmetricsptr ; Bug 349 - Bad translation of PTS to int
KnownFailure:   compile-failure ; ; Bug 349 - Bad translation of PTS to int
KnownFailure:   run-match ; ; Bug 349 - Bad translation of PTS to int

TestName: 	issue37
PassExpr:	SUCCESS
FailExpr:	FAILED
RequireFeature: upc_castable
WarningFilter:  cc_sun; '.*?E_DEAD_NONCONST.*?'  # "dead part of constant expression is nonconstant"

TestName: 	issue37a
RequireFeature: upc_castable

TestName: 	issue41
PassExpr:	SUCCESS
FailExpr:	ERROR
RequireFeature: upc_nb

TestName: 	issue64
Flags:          -lm
PassExpr:	SUCCESS
# implicit (castless) floating-point -> integer conversions generates warnings:
WarningFilter:  cc_clang||trans_cupc||trans_cupc2c; '.*? warning: implicit conversion from .*?'

TestName: 	issue64a
TimeLimit:      0
# implicit (castless) pointer->int conversion generates warnings:
WarningFilter:  trans_bupc; '.*? warning: call to upc_[a-z]* makes integer from pointer without a cast.*?'
WarningFilter:  cc_clang||trans_cupc||trans_cupc2c; '.*? warning: incompatible pointer to integer conversion .*?'
WarningFilter:  cc_intel; '.*? warning .69: integer conversion resulted in truncation.*?'
WarningFilter:  trans_gupc; '.*? warning: assignment makes integer from pointer without a cast.*?'
WarningFilter:  cc_cray; 'CC-69 .*?'  # "Integer conversion resulted in truncation"

TestName: 	issue64b
TimeLimit:      0
# implicit (castless) pointer->int conversion generates warnings:
WarningFilter:  trans_bupc; '.*? warning: call to upc_[a-z]* makes integer from pointer without a cast.*?'
WarningFilter:  cc_clang||trans_cupc||trans_cupc2c; '.*? warning: incompatible pointer to integer conversion .*?'
WarningFilter:  cc_gnu; '.*? warning: cast from pointer to integer .*?'
WarningFilter:  cc_intel; '.*? warning .810: conversion from .*?'
WarningFilter:  trans_gupc; '.*? warning: assignment makes integer from pointer without a cast.*?'
WarningFilter:  cc_cray; 'CC-767 .*?'  # "A pointer is converted to a smaller integer."

TestName:	issue70
PassExpr:	^PASS
FailExpr:	^FAIL
#KnownFailure:   run-match ; ; Bug 3147 - failure to reset phase when cast to incomplete PTS type

TestName:	issue105
KnownFailure:	compile-failure ; ; __UPC_VERSION__ is currently reported as 200505L

# ------------------------------------------------------------
# Default config for this section assumes all compilations are negative
# and that we should compile for both static and dynamic threads, but
# do not run the resulting code.

BEGIN_DEFAULT_CONFIG
Flags:          -DBUPC_TEST_HARNESS
Files:          $TESTNAME$.upc       # filename derived from testname
DynamicThreads: $DEFAULT$            # compile for dynamic threads
StaticThreads:  $DEFAULT$            # compile for static threads
CompileResult:  fail                 # expect compilation failure
PassExpr:       0                    # No pass expression
FailExpr:       0                    # No fail expression
TimeLimit:      0                    # Do not run
ExitCode:       ignore               # ignore exit code
BuildCmd:       nolink,upcc          # use upcc to build code
AppArgs:                             # no args to run app
END_DEFAULT_CONFIG

# ------------------------------------------------------------

TestName: 	issue64c
#KnownFailure:   compile-failure ; ; Bug 3143 - failure to diagnose invalid arg to upc_barrier

TestName: 	issue64d
#KnownFailure:   compile-failure ; ; Bug 3143 - failure to diagnose invalid arg to upc_barrier

TestName:	issue71
#KnownFailure:   compile-pass ; ; Bug 3146 - failure to diagnose automatic layout in typedefs

TestName:	issue104
#KnownFailure:   compile-warning ; ; Bug 3144 - violation of issue 104 new constraint

TestName:	issue104a

# ------------------------------------------------------------
# UPC Atomic Memory Operations (AMO) Library.
# ------------------------------------------------------------
BEGIN_DEFAULT_CONFIG
Flags:          -DBUPC_TEST_HARNESS
Files:          $TESTNAME$.upc       # filename derived from testname
DynamicThreads: $DEFAULT$            # compile for dynamic threads
StaticThreads:  $DEFAULT$            # compile for static threads
CompileResult:  pass                 # expect compilation to succeed
TimeLimit:      $DEFAULT$            # run the test
PassExpr:       pass|SUCCESS         # pass expression
FailExpr:       (error|Error|ERROR): # fail expression
ExitCode:       0	             # passing exit code
BuildCmd:       upcc                 # use upcc to build code
AppArgs:                             # no args to run app
RequireFeature: upc_atomics	     # Require UPC AMO library support
END_DEFAULT_CONFIG

TestName:	atomic_neg_arith
RunResult:      fail # want (FailExpr || !PassExpr || !ExitCods)

TestName:	atomic_neg_bitwise
RunResult:      fail # want (FailExpr || !PassExpr || !ExitCods)

TestName:	atomic_neg_pts
RunResult:      fail # want (FailExpr || !PassExpr || !ExitCods)

TestName:	atomic_r_access_pts

TestName:	atomic_r_access

TestName:	atomic_r_arith

TestName:	atomic_r_bitwise

TestName:	atomic_s_access_pts

TestName:	atomic_s_access

TestName:	atomic_s_arith

TestName:	atomic_s_bitwise

TestName:	atomic_err
TimeLimit: 	0 # don't bother running by default since any behavior is acceptable

TestName:	atomic_test
Flags:          -lm

TestName:	atomic_cswap_pts

