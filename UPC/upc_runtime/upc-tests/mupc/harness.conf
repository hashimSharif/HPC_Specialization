# ------------------------------------------------------------
# DATA-independent tests, only need one version of each
BEGIN_DEFAULT_CONFIG
Flags:           
CompileResult:   pass
PassExpr:        ^Success:
FailExpr:        ^Error:
ExitCode:        ignore
BuildCmd:        upcc
AppArgs:
TimeLimit:       $DEFAULT$
DynamicThreads:  $DEFAULT$
StaticThreads:   $DEFAULT$
SaveOutput:      0
END_DEFAULT_CONFIG

TestName: test_app_matmult
Files: test_app_matmult.c
DynamicThreads: 0

TestName: test_app_prime
Flags: -lm
Files: test_app_prime.c

TestName: test_app_wave1
Flags: -lm
Files: test_app_wave1.c

TestName: test_app_wave2
Flags: -lm
Files: test_app_wave2.c

TestName: test_globalexit
Files: test_globalexit.c
PassExpr: 0

TestName: test_int_allfunc
Files: test_int_allfunc.c
#KnownFailure: bug828 (codegen regression on mupc/test_int_alltype)
#KnownFailure: run-match ; cc_sun && nodebug ; bug 2063 (Suncc misoptimizes mupc/test_int_allfunc)
#KnownFailure: run-match ; cc_cray && nodebug ; bug 2805 (Cray C misoptimizes mupc/test_int_allfunc)

TestName: test_int_alltype
Files: test_int_alltype.c
#KnownFailure: bug828 (codegen regression on mupc/test_int_alltype)
#KnownFailure: run-match ; cc_cray && nodebug ; bug 2805 (Cray C misoptimizes mupc/test_int_alltype)
KnownFailure: run-match ; os_openbsd && cpu_i386 && cc_gnu && nodebug ; bug 2937 - test_int_alltype failure on openbsd/i386

TestName: test_getput1
Files: test_getput1.c

TestName: test_getput2
Files: test_getput2.c
#KnownFailure: run-match ; cc_cray && nodebug ; bug 2805 (Cray C misoptimizes mupc/test_getput2 with static threads)

TestName: test_barrier1
Files: test_barrier1.c

TestName: test_memory2
Files: test_memory2.c

# supposed to fail on MuPC, not relevant for Berkeley UPC
# TestName: test_memory4
# Files: test_memory4.c

TestName: test_string3
Files: test_string3.c

TestName: test_stress_03
Files: test_stress_03.c

# ------------------------------------------------------------
BEGIN_DEFAULT_CONFIG
Flags:           -DDATA=int
CompileResult:   pass
PassExpr:        ^Success:
FailExpr:        ^Error:
ExitCode:        ignore
BuildCmd:        upcc
AppArgs:         
TimeLimit:       $DEFAULT$
DynamicThreads:  $DEFAULT$
StaticThreads:   $DEFAULT$
END_DEFAULT_CONFIG

# disabled because our test harness provides no mechanism for expected runtime failure
#TestName: test_barrier2-int
#Files: test_barrier2.c
#PassExpr: barrier_notify\(\) called twice in a row|misordered call to barrier notify

TestName: test_barrier3-int
Files: test_barrier3.c

TestName: test_barrier4-int
Files: test_barrier4.c

TestName: test_getput3-int
Files: test_getput3.c

TestName: test_getput4-int
Files: test_getput4.c

TestName: test_int_barlocks-int
Files: test_int_barlocks.c

TestName: test_int_memlocks-int
Files: test_int_memlocks.c

TestName: test_int_memstring-int
Files: test_int_memstring.c

TestName: test_int_multilocks-int
Files: test_int_multilocks.c

TestName: test_int_precision-int
Files: test_int_precision.c
KnownFailure: run-match ; ( os_osf || cpu_sparc ) && ( pthreads || pshm ) ; bug 2514 - mupc/test_int_precision failures w/ pthreads or PSHM (Alpha and SPARC)
KnownFailure: run-crash ; network_gm && structsptr && pthreads ; bug2998 - mupc/test_int_precision-* crashes on gm_pthreads_struct
KnownFailure: run-match ; os_cygwin ; bug 3086 - mupc/test_int_precision fails on Cygwon

TestName: test_locks1-int
Files: test_locks1.c

TestName: test_locks2-int
Files: test_locks2.c

TestName: test_locks3-int
Files: test_locks3.c

TestName: test_locks4-int
Files: test_locks4.c

# bug 1281: invalid test
#TestName: test_locks5-int
#Files: test_locks5.c

TestName: test_memory1-int
Files: test_memory1.c

TestName: test_memory3-int
Files: test_memory3.c

TestName: test_memory5-int
Files: test_memory5.c

TestName: test_memory6-int
Files: test_memory6.c
#KnownFailure: bug698 (translator regression on phase reset)

TestName: test_memory7-int
Files: test_memory7.c

# bug 1281: invalid test
#TestName: test_memory8-int
#Files: test_memory8.c

TestName: test_stress_01-int
Files: test_stress_01.c

TestName: test_stress_02-int
Files: test_stress_02.c
#KnownFailure: run-all ; cc_intel && nodebug ; bug998 (Misc runtime failures on citris_smp-pthreads-ecc-opt)

TestName: test_stress_04-int
Files: test_stress_04.c

TestName: test_stress_05-int
Files: test_stress_05.c

TestName: test_stress_06-int
Files: test_stress_06.c

TestName: test_stress_07-int
Files: test_stress_07.c

TestName: test_stress_08-int
Files: test_stress_08.c

TestName: test_stress_09-int
Files: test_stress_09.c

TestName: test_stress_10-int
Files: test_stress_10.c

TestName: test_stress_11-int
Files: test_stress_11.c

# disabled because it causes false negatives 
#TestName: test_stress_12-int
#Files: test_stress_12.c
#PassExpr: out of shared memory

TestName: test_stress_13-int
Files: test_stress_13.c

TestName: test_stress_14-int
Files: test_stress_14.c

TestName: test_string1-int
Files: test_string1.c
#KnownFailure: run-all ; cc_intel && nodebug ; bug998 (Misc runtime failures on citris_smp-pthreads-ecc-opt)

TestName: test_string2-int
Files: test_string2.c
#KnownFailure: bug649 (Bogus address arithmetic for private 2-D arrays)

TestName: test_string4-int
Files: test_string4.c


# ------------------------------------------------------------
BEGIN_DEFAULT_CONFIG
Flags:           -DDATA=long
CompileResult:   pass
PassExpr:        ^Success:
FailExpr:        ^Error:
ExitCode:        ignore
BuildCmd:        upcc
AppArgs:         
TimeLimit:       $DEFAULT$
DynamicThreads:  $DEFAULT$
StaticThreads:   $DEFAULT$
END_DEFAULT_CONFIG

#TestName: test_barrier2-long
#Files: test_barrier2.c
#PassExpr: barrier_notify\(\) called twice in a row|misordered call to barrier notify

TestName: test_barrier3-long
Files: test_barrier3.c

TestName: test_barrier4-long
Files: test_barrier4.c

TestName: test_getput3-long
Files: test_getput3.c

TestName: test_getput4-long
Files: test_getput4.c

TestName: test_int_barlocks-long
Files: test_int_barlocks.c

TestName: test_int_memlocks-long
Files: test_int_memlocks.c

TestName: test_int_memstring-long
Files: test_int_memstring.c

TestName: test_int_multilocks-long
Files: test_int_multilocks.c

TestName: test_int_precision-long
Files: test_int_precision.c
KnownFailure: run-match ; ( os_osf || cpu_sparc ) && ( pthreads || pshm ) ; bug 2514 - mupc/test_int_precision failures w/ pthreads or PSHM (Alpha and SPARC)
KnownFailure: run-crash ; network_gm && structsptr && pthreads ; bug2998 - mupc/test_int_precision-* crashes on gm_pthreads_struct
KnownFailure: run-match ; os_cygwin ; bug 3086 - mupc/test_int_precision fails on Cygwon

TestName: test_locks1-long
Files: test_locks1.c

TestName: test_locks2-long
Files: test_locks2.c

TestName: test_locks3-long
Files: test_locks3.c

TestName: test_locks4-long
Files: test_locks4.c

# bug 1281: invalid test
#TestName: test_locks5-long
#Files: test_locks5.c

TestName: test_memory1-long
Files: test_memory1.c

TestName: test_memory3-long
Files: test_memory3.c

TestName: test_memory5-long
Files: test_memory5.c

TestName: test_memory6-long
Files: test_memory6.c
#KnownFailure: bug698 (translator regression on phase reset)

TestName: test_memory7-long
Files: test_memory7.c

# bug 1281: invalid test
#TestName: test_memory8-long
#Files: test_memory8.c

TestName: test_stress_01-long
Files: test_stress_01.c

TestName: test_stress_02-long
Files: test_stress_02.c

TestName: test_stress_04-long
Files: test_stress_04.c

TestName: test_stress_05-long
Files: test_stress_05.c

TestName: test_stress_06-long
Files: test_stress_06.c

TestName: test_stress_07-long
Files: test_stress_07.c

TestName: test_stress_08-long
Files: test_stress_08.c

TestName: test_stress_09-long
Files: test_stress_09.c

TestName: test_stress_10-long
Files: test_stress_10.c

TestName: test_stress_11-long
Files: test_stress_11.c

# disabled because it causes false negatives 
#TestName: test_stress_12-long
#Files: test_stress_12.c
#PassExpr: out of shared memory

TestName: test_stress_13-long
Files: test_stress_13.c

TestName: test_stress_14-long
Files: test_stress_14.c

TestName: test_string1-long
Files: test_string1.c

TestName: test_string2-long
Files: test_string2.c
#KnownFailure: bug649 (Bogus address arithmetic for private 2-D arrays)

TestName: test_string4-long
Files: test_string4.c


# ------------------------------------------------------------
BEGIN_DEFAULT_CONFIG
Flags:           -DDATA=float
CompileResult:   pass
PassExpr:        ^Success:
FailExpr:        ^Error:
ExitCode:        ignore
BuildCmd:        upcc
AppArgs:         
TimeLimit:       $DEFAULT$
DynamicThreads:  $DEFAULT$
StaticThreads:   $DEFAULT$
END_DEFAULT_CONFIG

#TestName: test_barrier2-float
#Files: test_barrier2.c
#PassExpr: barrier_notify\(\) called twice in a row|misordered call to barrier notify

TestName: test_barrier3-float
Files: test_barrier3.c

TestName: test_barrier4-float
Files: test_barrier4.c

TestName: test_getput3-float
Files: test_getput3.c
#KnownFailure: compile-failure ; trans_opt && trans_os_darwin && trans_cpu_i686 ; bug2381 (assertion failures from irun local translator w/ -opt)

TestName: test_getput4-float
Files: test_getput4.c

TestName: test_int_barlocks-float
Files: test_int_barlocks.c

TestName: test_int_memlocks-float
Files: test_int_memlocks.c
KnownFailure: run-crash ; trans_opt && cpu_ia64 && pthreads && network_smp && symmetricsptr && trans_O ; bug2946 (FP Emulation traps on Altix)
#KnownFailure: compile-failure ; trans_opt && trans_os_darwin && trans_cpu_i686 ; bug2381 (assertion failures from irun local translator w/ -opt)

TestName: test_int_memstring-float
Files: test_int_memstring.c
KnownFailure:  run-match ; (cc_pathscale || cc_open64) && nodebug && nopthreads ; bug2138 (test_int_memstring-float,double fail with pathcc and open64)

TestName: test_int_multilocks-float
Files: test_int_multilocks.c
#KnownFailure: compile-failure ; trans_opt && trans_os_darwin && trans_cpu_i686 ; bug2381 (assertion failures from irun local translator w/ -opt)

TestName: test_int_precision-float
Files: test_int_precision.c
#KnownFailure: bug828 (codegen regression on mupc/test_int_alltype)
KnownFailure: run-match ; ( os_osf || cpu_sparc ) && ( pthreads || pshm ) ; bug 2514 - mupc/test_int_precision failures w/ pthreads or PSHM (Alpha and SPARC)
KnownFailure: run-crash ; network_gm && structsptr && pthreads ; bug2998 - mupc/test_int_precision-* crashes on gm_pthreads_struct

TestName: test_locks1-float
Files: test_locks1.c
#KnownFailure: run-all ; cc_xlc && nodebug && pthreads ; bug926 (Unstable runtime behavior on XLC/ndebug)

TestName: test_locks2-float
Files: test_locks2.c
#KnownFailure: run-all ; cc_xlc && nodebug && pthreads ; bug926 (Unstable runtime behavior on XLC/ndebug)

TestName: test_locks3-float
Files: test_locks3.c
#KnownFailure: compile-failure ; trans_opt && trans_os_darwin && trans_cpu_i686 ; bug2381 (assertion failures from irun local translator w/ -opt)

TestName: test_locks4-float
Files: test_locks4.c
#KnownFailure: run-all ; cc_xlc && nodebug && pthreads ; bug926 (Unstable runtime behavior on XLC/ndebug)

# bug 1281: invalid test
#TestName: test_locks5-float
#Files: test_locks5.c

TestName: test_memory1-float
Files: test_memory1.c
#KnownFailure: compile-failure ; trans_opt && trans_os_darwin && trans_cpu_i686 ; bug2381 (assertion failures from irun local translator w/ -opt)

TestName: test_memory3-float
Files: test_memory3.c

TestName: test_memory5-float
Files: test_memory5.c

TestName: test_memory6-float
Files: test_memory6.c
#KnownFailure: bug698 (translator regression on phase reset)

TestName: test_memory7-float
Files: test_memory7.c

# bug 1281: invalid test
#TestName: test_memory8-float
#Files: test_memory8.c

TestName: test_stress_01-float
Files: test_stress_01.c

TestName: test_stress_02-float
Files: test_stress_02.c

TestName: test_stress_04-float
Files: test_stress_04.c

TestName: test_stress_05-float
Files: test_stress_05.c

TestName: test_stress_06-float
Files: test_stress_06.c

TestName: test_stress_07-float
Files: test_stress_07.c

TestName: test_stress_08-float
Files: test_stress_08.c

TestName: test_stress_09-float
Files: test_stress_09.c

TestName: test_stress_10-float
Files: test_stress_10.c

TestName: test_stress_11-float
Files: test_stress_11.c

# disabled because it causes false negatives 
#TestName: test_stress_12-float
#Files: test_stress_12.c
#PassExpr: out of shared memory

TestName: test_stress_13-float
Files: test_stress_13.c
#KnownFailure: run-all ; cc_xlc && nodebug && pthreads ; bug926 (Unstable runtime behavior on XLC/ndebug)

TestName: test_stress_14-float
Files: test_stress_14.c
#KnownFailure: run-all ; cc_xlc && nodebug && pthreads ; bug926 (Unstable runtime behavior on XLC/ndebug)

TestName: test_string1-float
Files: test_string1.c

TestName: test_string2-float
Files: test_string2.c
#KnownFailure: bug649 (Bogus address arithmetic for private 2-D arrays)

TestName: test_string4-float
Files: test_string4.c


# ------------------------------------------------------------
BEGIN_DEFAULT_CONFIG
Flags:           -DDATA=double
CompileResult:   pass
PassExpr:        ^Success:
FailExpr:        ^Error:
ExitCode:        ignore
BuildCmd:        upcc
AppArgs:         
TimeLimit:       $DEFAULT$
DynamicThreads:  $DEFAULT$
StaticThreads:   $DEFAULT$
END_DEFAULT_CONFIG

#TestName: test_barrier2-double
#Files: test_barrier2.c
#PassExpr: barrier_notify\(\) called twice in a row|misordered call to barrier notify

TestName: test_barrier3-double
Files: test_barrier3.c

TestName: test_barrier4-double
Files: test_barrier4.c

TestName: test_getput3-double
Files: test_getput3.c

TestName: test_getput4-double
Files: test_getput4.c

TestName: test_int_barlocks-double
Files: test_int_barlocks.c

TestName: test_int_memlocks-double
Files: test_int_memlocks.c

TestName: test_int_memstring-double
Files: test_int_memstring.c
KnownFailure:  run-match ; (cc_pathscale || cc_open64) && nodebug && nopthreads ; bug2138 (test_int_memstring-float,double fail with pathcc and open64)

TestName: test_int_multilocks-double
Files: test_int_multilocks.c

TestName: test_int_precision-double
Files: test_int_precision.c
KnownFailure: run-match ; ( os_osf || cpu_sparc ) && ( pthreads || pshm ) ; bug 2514 - mupc/test_int_precision failures w/ pthreads or PSHM (Alpha and SPARC)
KnownFailure: run-crash ; network_gm && structsptr && pthreads ; bug2998 - mupc/test_int_precision-* crashes on gm_pthreads_struct

TestName: test_locks1-double
Files: test_locks1.c

TestName: test_locks2-double
Files: test_locks2.c

TestName: test_locks3-double
Files: test_locks3.c

TestName: test_locks4-double
Files: test_locks4.c

# bug 1281: invalid test
#TestName: test_locks5-double
#Files: test_locks5.c

TestName: test_memory1-double
Files: test_memory1.c

TestName: test_memory3-double
Files: test_memory3.c

TestName: test_memory5-double
Files: test_memory5.c

TestName: test_memory6-double
Files: test_memory6.c
#KnownFailure: bug698 (translator regression on phase reset)

TestName: test_memory7-double
Files: test_memory7.c

# bug 1281: invalid test
#TestName: test_memory8-double
#Files: test_memory8.c

TestName: test_stress_01-double
Files: test_stress_01.c

TestName: test_stress_02-double
Files: test_stress_02.c

TestName: test_stress_04-double
Files: test_stress_04.c

TestName: test_stress_05-double
Files: test_stress_05.c

TestName: test_stress_06-double
Files: test_stress_06.c

TestName: test_stress_07-double
Files: test_stress_07.c

TestName: test_stress_08-double
Files: test_stress_08.c

TestName: test_stress_09-double
Files: test_stress_09.c

TestName: test_stress_10-double
Files: test_stress_10.c

TestName: test_stress_11-double
Files: test_stress_11.c

# disabled because it causes false negatives 
#TestName: test_stress_12-double
#Files: test_stress_12.c
#PassExpr: out of shared memory

TestName: test_stress_13-double
Files: test_stress_13.c

TestName: test_stress_14-double
Files: test_stress_14.c

TestName: test_string1-double
Files: test_string1.c

TestName: test_string2-double
Files: test_string2.c
#KnownFailure: bug649 (Bogus address arithmetic for private 2-D arrays)

TestName: test_string4-double
Files: test_string4.c


