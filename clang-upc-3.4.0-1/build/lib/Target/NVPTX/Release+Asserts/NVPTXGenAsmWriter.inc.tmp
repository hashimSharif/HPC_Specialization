/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void NVPTXInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    6840U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    6833U,	// BUNDLE
    6850U,	// LIFETIME_START
    6820U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    10027U,	// ADDCCCi32ri
    10027U,	// ADDCCCi32rr
    10041U,	// ADDCCi32ri
    10041U,	// ADDCCi32rr
    12387U,	// ADD_i1_ri
    12387U,	// ADD_i1_rr
    12106U,	// ADDi16ri
    12106U,	// ADDi16rr
    10064U,	// ADDi32ri
    10064U,	// ADDi32rr
    11599U,	// ADDi64ri
    11599U,	// ADDi64rr
    8237U,	// ANDb16ri
    8237U,	// ANDb16rr
    8259U,	// ANDb1ri
    8259U,	// ANDb1rr
    8193U,	// ANDb32ri
    8193U,	// ANDb32rr
    8215U,	// ANDb64ri
    8215U,	// ANDb64rr
    536883657U,	// BITCONVERT_32_F2I
    536883657U,	// BITCONVERT_32_I2F
    536883668U,	// BITCONVERT_64_F2I
    536883668U,	// BITCONVERT_64_I2F
    143502U,	// CALL
    16395U,	// CALL_PROTOTYPE
    277154U,	// CBranch
    276553U,	// CBranchOther
    536883392U,	// CLZr32
    536883519U,	// CLZr64
    536880061U,	// COSF
    536883252U,	// CVT_INREG_s16_s8
    536882980U,	// CVT_INREG_s32_s16
    536883226U,	// CVT_INREG_s32_s8
    536882994U,	// CVT_INREG_s64_s16
    536880888U,	// CVT_INREG_s64_s32
    536883239U,	// CVT_INREG_s64_s8
    425027U,	// CVT_f16_f16
    556099U,	// CVT_f16_f32
    687171U,	// CVT_f16_f64
    818243U,	// CVT_f16_s16
    949315U,	// CVT_f16_s32
    1080387U,	// CVT_f16_s64
    1211459U,	// CVT_f16_u16
    1342531U,	// CVT_f16_u32
    1473603U,	// CVT_f16_u64
    1604675U,	// CVT_f32_f16
    1735747U,	// CVT_f32_f32
    1866819U,	// CVT_f32_f64
    1997891U,	// CVT_f32_s16
    2128963U,	// CVT_f32_s32
    2260035U,	// CVT_f32_s64
    2391107U,	// CVT_f32_u16
    2522179U,	// CVT_f32_u32
    2653251U,	// CVT_f32_u64
    2784323U,	// CVT_f64_f16
    2915395U,	// CVT_f64_f32
    3046467U,	// CVT_f64_f64
    3177539U,	// CVT_f64_s16
    3308611U,	// CVT_f64_s32
    3439683U,	// CVT_f64_s64
    3570755U,	// CVT_f64_u16
    3701827U,	// CVT_f64_u32
    3832899U,	// CVT_f64_u64
    3963971U,	// CVT_s16_f16
    4095043U,	// CVT_s16_f32
    4226115U,	// CVT_s16_f64
    4357187U,	// CVT_s16_s16
    4488259U,	// CVT_s16_s32
    4619331U,	// CVT_s16_s64
    4750403U,	// CVT_s16_u16
    4881475U,	// CVT_s16_u32
    5012547U,	// CVT_s16_u64
    5143619U,	// CVT_s32_f16
    5274691U,	// CVT_s32_f32
    5405763U,	// CVT_s32_f64
    5536835U,	// CVT_s32_s16
    5667907U,	// CVT_s32_s32
    5798979U,	// CVT_s32_s64
    5930051U,	// CVT_s32_u16
    6061123U,	// CVT_s32_u32
    6192195U,	// CVT_s32_u64
    6323267U,	// CVT_s64_f16
    6454339U,	// CVT_s64_f32
    6585411U,	// CVT_s64_f64
    6716483U,	// CVT_s64_s16
    6847555U,	// CVT_s64_s32
    6978627U,	// CVT_s64_s64
    7109699U,	// CVT_s64_u16
    7240771U,	// CVT_s64_u32
    7371843U,	// CVT_s64_u64
    7502915U,	// CVT_u16_f16
    7633987U,	// CVT_u16_f32
    7765059U,	// CVT_u16_f64
    7896131U,	// CVT_u16_s16
    8027203U,	// CVT_u16_s32
    8158275U,	// CVT_u16_s64
    8289347U,	// CVT_u16_u16
    8420419U,	// CVT_u16_u32
    8551491U,	// CVT_u16_u64
    8682563U,	// CVT_u32_f16
    8813635U,	// CVT_u32_f32
    8944707U,	// CVT_u32_f64
    9075779U,	// CVT_u32_s16
    9206851U,	// CVT_u32_s32
    9337923U,	// CVT_u32_s64
    9468995U,	// CVT_u32_u16
    9600067U,	// CVT_u32_u32
    9731139U,	// CVT_u32_u64
    9862211U,	// CVT_u64_f16
    9993283U,	// CVT_u64_f32
    10124355U,	// CVT_u64_f64
    10255427U,	// CVT_u64_s16
    10386499U,	// CVT_u64_s32
    10517571U,	// CVT_u64_s64
    10648643U,	// CVT_u64_u16
    10779715U,	// CVT_u64_u32
    10910787U,	// CVT_u64_u64
    6220U,	// CallArgBeginInst
    6249U,	// CallArgEndInst0
    6756U,	// CallArgEndInst1
    33562635U,	// CallArgF32
    33562635U,	// CallArgF64
    33562635U,	// CallArgI16
    33562635U,	// CallArgI32
    33562635U,	// CallArgI32imm
    33562635U,	// CallArgI64
    33569540U,	// CallArgParam
    33562635U,	// CallVoidInst
    33562635U,	// CallVoidInstReg
    33562635U,	// CallVoidInstReg64
    11024366U,	// Callseq_End
    11155511U,	// Callseq_Start
    11286568U,	// DeclareParamInst
    11417640U,	// DeclareRetMemInst
    11549406U,	// DeclareRetRegInst
    11549414U,	// DeclareRetScalarInst
    11705062U,	// DeclareScalarParamInst
    11705054U,	// DeclareScalarRegInst
    1073757824U,	// F64toV2F32
    536879963U,	// FABSf32
    536880608U,	// FABSf32_ftz
    536882318U,	// FABSf64
    8906U,	// FADD_rnf32ri
    9507U,	// FADD_rnf32ri_ftz
    8906U,	// FADD_rnf32rr
    9507U,	// FADD_rnf32rr_ftz
    11261U,	// FADD_rnf64ri
    11261U,	// FADD_rnf64rr
    8692U,	// FADDf32ri
    9295U,	// FADDf32ri_ftz
    8692U,	// FADDf32rr
    9295U,	// FADDf32rr_ftz
    11099U,	// FADDf64ri
    11099U,	// FADDf64rr
    603988908U,	// FDIV321r
    603988908U,	// FDIV321r_approx
    603989563U,	// FDIV321r_approx_ftz
    603989563U,	// FDIV321r_ftz
    603988708U,	// FDIV321r_prec
    603989317U,	// FDIV321r_prec_ftz
    9185U,	// FDIV32approxrr
    9852U,	// FDIV32approxrr_ftz
    8766U,	// FDIV32ri
    9323U,	// FDIV32ri_ftz
    8959U,	// FDIV32ri_prec
    9576U,	// FDIV32ri_prec_ftz
    8766U,	// FDIV32rr
    9323U,	// FDIV32rr_ftz
    8959U,	// FDIV32rr_prec
    9576U,	// FDIV32rr_prec_ftz
    603991063U,	// FDIV641r
    11314U,	// FDIV64ri
    11314U,	// FDIV64rr
    9473U,	// FMA32_ftzrii
    9473U,	// FMA32_ftzrir
    9473U,	// FMA32_ftzrri
    9473U,	// FMA32_ftzrrr
    9473U,	// FMA32_ftzrrr2
    8880U,	// FMA32rii
    8880U,	// FMA32rir
    8880U,	// FMA32rri
    8880U,	// FMA32rrr
    8880U,	// FMA32rrr2
    11235U,	// FMA64rii
    11235U,	// FMA64rir
    11235U,	// FMA64rri
    11235U,	// FMA64rrr
    536879973U,	// FMOV32ri
    536879973U,	// FMOV32rr
    536882328U,	// FMOV64ri
    536882328U,	// FMOV64rr
    8919U,	// FMUL_rnf32ri
    9524U,	// FMUL_rnf32ri_ftz
    8919U,	// FMUL_rnf32rr
    9524U,	// FMUL_rnf32rr_ftz
    11274U,	// FMUL_rnf64ri
    11274U,	// FMUL_rnf64rr
    8781U,	// FMULf32ri
    9342U,	// FMULf32ri_ftz
    8781U,	// FMULf32rr
    9342U,	// FMULf32rr_ftz
    11136U,	// FMULf64ri
    11136U,	// FMULf64rr
    536879651U,	// FNEGf32
    536880221U,	// FNEGf32_ftz
    536882021U,	// FNEGf64
    536879857U,	// FSQRTf32
    536880470U,	// FSQRTf32_ftz
    536882212U,	// FSQRTf64
    8893U,	// FSUB_rnf32ri
    9490U,	// FSUB_rnf32ri_ftz
    8893U,	// FSUB_rnf32rr
    9490U,	// FSUB_rnf32rr_ftz
    11248U,	// FSUB_rnf64ri
    11248U,	// FSUB_rnf64rr
    8651U,	// FSUBf32ri
    9281U,	// FSUBf32ri_ftz
    8651U,	// FSUBf32rr
    9281U,	// FSUBf32rr_ftz
    11070U,	// FSUBf64ri
    11070U,	// FSUBf64rr
    11808900U,	// GOTO
    1073757760U,	// I32toV2I16
    1073757824U,	// I64toV2I32
    16000U,	// I64toV4I16
    536883216U,	// IMOV16ri
    536883216U,	// IMOV16rr
    536883321U,	// IMOV1ri
    536883321U,	// IMOV1rr
    536881730U,	// IMOV32ri
    536881730U,	// IMOV32rr
    536882930U,	// IMOV64i
    536882930U,	// IMOV64rr
    536883043U,	// INEG16
    536881001U,	// INEG32
    536882521U,	// INEG64
    6759U,	// INT_BARRIER0
    11965745U,	// INT_BARRIER0_AND
    12096817U,	// INT_BARRIER0_OR
    12227847U,	// INT_BARRIER0_POPC
    6759U,	// INT_CUDA_SYNCTHREADS
    6772U,	// INT_MEMBAR_CTA
    6784U,	// INT_MEMBAR_GL
    6801U,	// INT_MEMBAR_SYS
    536881144U,	// INT_NVVM_ABS_I
    536882600U,	// INT_NVVM_ABS_LL
    11159U,	// INT_NVVM_ADD_RM_D
    8804U,	// INT_NVVM_ADD_RM_F
    9373U,	// INT_NVVM_ADD_RM_FTZ_F
    11261U,	// INT_NVVM_ADD_RN_D
    8906U,	// INT_NVVM_ADD_RN_F
    9507U,	// INT_NVVM_ADD_RN_FTZ_F
    11340U,	// INT_NVVM_ADD_RP_D
    8985U,	// INT_NVVM_ADD_RP_F
    9610U,	// INT_NVVM_ADD_RP_FTZ_F
    11502U,	// INT_NVVM_ADD_RZ_D
    9215U,	// INT_NVVM_ADD_RZ_F
    9890U,	// INT_NVVM_ADD_RZ_FTZ_F
    536881962U,	// INT_NVVM_BITCAST_D2LL
    536879543U,	// INT_NVVM_BITCAST_F2I
    536879543U,	// INT_NVVM_BITCAST_I2F
    536881962U,	// INT_NVVM_BITCAST_LL2D
    536879532U,	// INT_NVVM_BREV32
    536881951U,	// INT_NVVM_BREV64
    536879553U,	// INT_NVVM_CLZ_I
    536881972U,	// INT_NVVM_CLZ_LL
    6251U,	// INT_NVVM_COMPILER_ERROR_32
    6251U,	// INT_NVVM_COMPILER_ERROR_64
    6222U,	// INT_NVVM_COMPILER_WARN_32
    6222U,	// INT_NVVM_COMPILER_WARN_64
    536880061U,	// INT_NVVM_COS_APPROX_F
    536880720U,	// INT_NVVM_COS_APPROX_FTZ_F
    12334656U,	// INT_NVVM_D2I_HI
    12467447U,	// INT_NVVM_D2I_LO
    9185U,	// INT_NVVM_DIV_APPROX_F
    9852U,	// INT_NVVM_DIV_APPROX_FTZ_F
    11212U,	// INT_NVVM_DIV_RM_D
    8857U,	// INT_NVVM_DIV_RM_F
    9442U,	// INT_NVVM_DIV_RM_FTZ_F
    11314U,	// INT_NVVM_DIV_RN_D
    8959U,	// INT_NVVM_DIV_RN_F
    9576U,	// INT_NVVM_DIV_RN_FTZ_F
    11393U,	// INT_NVVM_DIV_RP_D
    9038U,	// INT_NVVM_DIV_RP_F
    9679U,	// INT_NVVM_DIV_RP_FTZ_F
    11555U,	// INT_NVVM_DIV_RZ_D
    9268U,	// INT_NVVM_DIV_RZ_F
    9959U,	// INT_NVVM_DIV_RZ_FTZ_F
    536882365U,	// INT_NVVM_EX2_APPROX_D
    536880010U,	// INT_NVVM_EX2_APPROX_F
    536880657U,	// INT_NVVM_EX2_APPROX_FTZ_F
    12621244U,	// INT_NVVM_F2H_RN
    12621289U,	// INT_NVVM_F2H_RN_FTZ
    536882318U,	// INT_NVVM_FABS_D
    536879963U,	// INT_NVVM_FABS_F
    536880608U,	// INT_NVVM_FABS_FTZ_F
    11426U,	// INT_NVVM_FMAX_D
    9071U,	// INT_NVVM_FMAX_F
    9710U,	// INT_NVVM_FMAX_FTZ_F
    11146U,	// INT_NVVM_FMA_RM_D
    8791U,	// INT_NVVM_FMA_RM_F
    9356U,	// INT_NVVM_FMA_RM_FTZ_F
    11235U,	// INT_NVVM_FMA_RN_D
    8880U,	// INT_NVVM_FMA_RN_F
    9473U,	// INT_NVVM_FMA_RN_FTZ_F
    11327U,	// INT_NVVM_FMA_RP_D
    8972U,	// INT_NVVM_FMA_RP_F
    9593U,	// INT_NVVM_FMA_RP_FTZ_F
    11489U,	// INT_NVVM_FMA_RZ_D
    9202U,	// INT_NVVM_FMA_RZ_F
    9873U,	// INT_NVVM_FMA_RZ_FTZ_F
    11225U,	// INT_NVVM_FMIN_D
    8870U,	// INT_NVVM_FMIN_F
    9459U,	// INT_NVVM_FMIN_FTZ_F
    12752410U,	// INT_NVVM_H2F
    536882348U,	// INT_NVVM_LG2_APPROX_D
    536879993U,	// INT_NVVM_LG2_APPROX_F
    536880636U,	// INT_NVVM_LG2_APPROX_FTZ_F
    113519402U,	// INT_NVVM_LOHI_I2D
    10264U,	// INT_NVVM_MAX_I
    11708U,	// INT_NVVM_MAX_LL
    10840U,	// INT_NVVM_MAX_UI
    12028U,	// INT_NVVM_MAX_ULL
    10134U,	// INT_NVVM_MIN_I
    11642U,	// INT_NVVM_MIN_LL
    10699U,	// INT_NVVM_MIN_UI
    11951U,	// INT_NVVM_MIN_ULL
    10181U,	// INT_NVVM_MUL24_I
    10746U,	// INT_NVVM_MUL24_UI
    10099U,	// INT_NVVM_MULHI_I
    11619U,	// INT_NVVM_MULHI_LL
    10571U,	// INT_NVVM_MULHI_UI
    11835U,	// INT_NVVM_MULHI_ULL
    11172U,	// INT_NVVM_MUL_RM_D
    8817U,	// INT_NVVM_MUL_RM_F
    9390U,	// INT_NVVM_MUL_RM_FTZ_F
    11274U,	// INT_NVVM_MUL_RN_D
    8919U,	// INT_NVVM_MUL_RN_F
    9524U,	// INT_NVVM_MUL_RN_FTZ_F
    11353U,	// INT_NVVM_MUL_RP_D
    8998U,	// INT_NVVM_MUL_RP_F
    9627U,	// INT_NVVM_MUL_RP_FTZ_F
    11515U,	// INT_NVVM_MUL_RZ_D
    9228U,	// INT_NVVM_MUL_RZ_F
    9907U,	// INT_NVVM_MUL_RZ_FTZ_F
    536879195U,	// INT_NVVM_POPC_I
    536881799U,	// INT_NVVM_POPC_LL
    8599U,	// INT_NVVM_PRMT
    536882480U,	// INT_NVVM_RCP_APPROX_FTZ_D
    536882097U,	// INT_NVVM_RCP_RM_D
    536879742U,	// INT_NVVM_RCP_RM_F
    536880319U,	// INT_NVVM_RCP_RM_FTZ_F
    536882199U,	// INT_NVVM_RCP_RN_D
    536879844U,	// INT_NVVM_RCP_RN_F
    536880453U,	// INT_NVVM_RCP_RN_FTZ_F
    536882278U,	// INT_NVVM_RCP_RP_D
    536879923U,	// INT_NVVM_RCP_RP_F
    536880556U,	// INT_NVVM_RCP_RP_FTZ_F
    536882440U,	// INT_NVVM_RCP_RZ_D
    536880153U,	// INT_NVVM_RCP_RZ_F
    536880836U,	// INT_NVVM_RCP_RZ_FTZ_F
    536882382U,	// INT_NVVM_RSQRT_APPROX_D
    536880078U,	// INT_NVVM_RSQRT_APPROX_F
    536880741U,	// INT_NVVM_RSQRT_APPROX_FTZ_F
    10054U,	// INT_NVVM_SAD_I
    10448U,	// INT_NVVM_SAD_UI
    536880027U,	// INT_NVVM_SIN_APPROX_F
    536880678U,	// INT_NVVM_SIN_APPROX_FTZ_F
    536880079U,	// INT_NVVM_SQRT_APPROX_F
    536880742U,	// INT_NVVM_SQRT_APPROX_FTZ_F
    536882110U,	// INT_NVVM_SQRT_RM_D
    536879755U,	// INT_NVVM_SQRT_RM_F
    536880336U,	// INT_NVVM_SQRT_RM_FTZ_F
    536882212U,	// INT_NVVM_SQRT_RN_D
    536879857U,	// INT_NVVM_SQRT_RN_F
    536880470U,	// INT_NVVM_SQRT_RN_FTZ_F
    536882291U,	// INT_NVVM_SQRT_RP_D
    536879936U,	// INT_NVVM_SQRT_RP_F
    536880573U,	// INT_NVVM_SQRT_RP_FTZ_F
    536882453U,	// INT_NVVM_SQRT_RZ_D
    536880166U,	// INT_NVVM_SQRT_RZ_F
    536880853U,	// INT_NVVM_SQRT_RZ_FTZ_F
    1623599344U,	// INT_PTX_ATOM_ADD_GEN_32_USE_Gp32imm
    1623599344U,	// INT_PTX_ATOM_ADD_GEN_32_USE_Gp32reg
    1623599344U,	// INT_PTX_ATOM_ADD_GEN_32_USE_Gp64imm
    1623599344U,	// INT_PTX_ATOM_ADD_GEN_32_USE_Gp64reg
    1623599366U,	// INT_PTX_ATOM_ADD_GEN_32p32imm
    1623599366U,	// INT_PTX_ATOM_ADD_GEN_32p32reg
    1623599366U,	// INT_PTX_ATOM_ADD_GEN_32p64imm
    1623599366U,	// INT_PTX_ATOM_ADD_GEN_32p64reg
    1623600623U,	// INT_PTX_ATOM_ADD_GEN_64_USE_Gp32imm
    1623600623U,	// INT_PTX_ATOM_ADD_GEN_64_USE_Gp32reg
    1623600623U,	// INT_PTX_ATOM_ADD_GEN_64_USE_Gp64imm
    1623600623U,	// INT_PTX_ATOM_ADD_GEN_64_USE_Gp64reg
    1623600645U,	// INT_PTX_ATOM_ADD_GEN_64p32imm
    1623600645U,	// INT_PTX_ATOM_ADD_GEN_64p32reg
    1623600645U,	// INT_PTX_ATOM_ADD_GEN_64p64imm
    1623600645U,	// INT_PTX_ATOM_ADD_GEN_64p64reg
    1623597588U,	// INT_PTX_ATOM_ADD_GEN_F32p32imm
    1623597588U,	// INT_PTX_ATOM_ADD_GEN_F32p32reg
    1623597588U,	// INT_PTX_ATOM_ADD_GEN_F32p64imm
    1623597588U,	// INT_PTX_ATOM_ADD_GEN_F32p64reg
    1623599344U,	// INT_PTX_ATOM_ADD_G_32p32imm
    1623599344U,	// INT_PTX_ATOM_ADD_G_32p32reg
    1623599344U,	// INT_PTX_ATOM_ADD_G_32p64imm
    1623599344U,	// INT_PTX_ATOM_ADD_G_32p64reg
    1623600623U,	// INT_PTX_ATOM_ADD_G_64p32imm
    1623600623U,	// INT_PTX_ATOM_ADD_G_64p32reg
    1623600623U,	// INT_PTX_ATOM_ADD_G_64p64imm
    1623600623U,	// INT_PTX_ATOM_ADD_G_64p64reg
    1623597566U,	// INT_PTX_ATOM_ADD_G_F32p32imm
    1623597566U,	// INT_PTX_ATOM_ADD_G_F32p32reg
    1623597566U,	// INT_PTX_ATOM_ADD_G_F32p64imm
    1623597566U,	// INT_PTX_ATOM_ADD_G_F32p64reg
    1623599322U,	// INT_PTX_ATOM_ADD_S_32p32imm
    1623599322U,	// INT_PTX_ATOM_ADD_S_32p32reg
    1623599322U,	// INT_PTX_ATOM_ADD_S_32p64imm
    1623599322U,	// INT_PTX_ATOM_ADD_S_32p64reg
    1623600601U,	// INT_PTX_ATOM_ADD_S_64p32imm
    1623600601U,	// INT_PTX_ATOM_ADD_S_64p32reg
    1623600601U,	// INT_PTX_ATOM_ADD_S_64p64imm
    1623600601U,	// INT_PTX_ATOM_ADD_S_64p64reg
    1623597544U,	// INT_PTX_ATOM_ADD_S_F32p32imm
    1623597544U,	// INT_PTX_ATOM_ADD_S_F32p32reg
    1623597544U,	// INT_PTX_ATOM_ADD_S_F32p64imm
    1623597544U,	// INT_PTX_ATOM_ADD_S_F32p64reg
    1623597180U,	// INT_PTX_ATOM_AND_GEN_32_USE_Gp32imm
    1623597180U,	// INT_PTX_ATOM_AND_GEN_32_USE_Gp32reg
    1623597180U,	// INT_PTX_ATOM_AND_GEN_32_USE_Gp64imm
    1623597180U,	// INT_PTX_ATOM_AND_GEN_32_USE_Gp64reg
    1623597202U,	// INT_PTX_ATOM_AND_GEN_32p32imm
    1623597202U,	// INT_PTX_ATOM_AND_GEN_32p32reg
    1623597202U,	// INT_PTX_ATOM_AND_GEN_32p64imm
    1623597202U,	// INT_PTX_ATOM_AND_GEN_32p64reg
    1623597180U,	// INT_PTX_ATOM_AND_G_32p32imm
    1623597180U,	// INT_PTX_ATOM_AND_G_32p32reg
    1623597180U,	// INT_PTX_ATOM_AND_G_32p64imm
    1623597180U,	// INT_PTX_ATOM_AND_G_32p64reg
    1623597158U,	// INT_PTX_ATOM_AND_S_32p32imm
    1623597158U,	// INT_PTX_ATOM_AND_S_32p32reg
    1623597158U,	// INT_PTX_ATOM_AND_S_32p64imm
    1623597158U,	// INT_PTX_ATOM_AND_S_32p64reg
    1623597426U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp32imm1
    1623597426U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp32imm2
    1623597426U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp32imm3
    1623597426U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp32reg
    1623597426U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp64imm1
    1623597426U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp64imm2
    1623597426U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp64imm3
    1623597426U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp64reg
    1623597448U,	// INT_PTX_ATOM_CAS_GEN_32p32imm1
    1623597448U,	// INT_PTX_ATOM_CAS_GEN_32p32imm2
    1623597448U,	// INT_PTX_ATOM_CAS_GEN_32p32imm3
    1623597448U,	// INT_PTX_ATOM_CAS_GEN_32p32reg
    1623597448U,	// INT_PTX_ATOM_CAS_GEN_32p64imm1
    1623597448U,	// INT_PTX_ATOM_CAS_GEN_32p64imm2
    1623597448U,	// INT_PTX_ATOM_CAS_GEN_32p64imm3
    1623597448U,	// INT_PTX_ATOM_CAS_GEN_32p64reg
    1623599856U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp32imm1
    1623599856U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp32imm2
    1623599856U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp32imm3
    1623599856U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp32reg
    1623599856U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp64imm1
    1623599856U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp64imm2
    1623599856U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp64imm3
    1623599856U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp64reg
    1623599878U,	// INT_PTX_ATOM_CAS_GEN_64p32imm1
    1623599878U,	// INT_PTX_ATOM_CAS_GEN_64p32imm2
    1623599878U,	// INT_PTX_ATOM_CAS_GEN_64p32imm3
    1623599878U,	// INT_PTX_ATOM_CAS_GEN_64p32reg
    1623599878U,	// INT_PTX_ATOM_CAS_GEN_64p64imm1
    1623599878U,	// INT_PTX_ATOM_CAS_GEN_64p64imm2
    1623599878U,	// INT_PTX_ATOM_CAS_GEN_64p64imm3
    1623599878U,	// INT_PTX_ATOM_CAS_GEN_64p64reg
    1623597426U,	// INT_PTX_ATOM_CAS_G_32p32imm1
    1623597426U,	// INT_PTX_ATOM_CAS_G_32p32imm2
    1623597426U,	// INT_PTX_ATOM_CAS_G_32p32imm3
    1623597426U,	// INT_PTX_ATOM_CAS_G_32p32reg
    1623597426U,	// INT_PTX_ATOM_CAS_G_32p64imm1
    1623597426U,	// INT_PTX_ATOM_CAS_G_32p64imm2
    1623597426U,	// INT_PTX_ATOM_CAS_G_32p64imm3
    1623597426U,	// INT_PTX_ATOM_CAS_G_32p64reg
    1623599856U,	// INT_PTX_ATOM_CAS_G_64p32imm1
    1623599856U,	// INT_PTX_ATOM_CAS_G_64p32imm2
    1623599856U,	// INT_PTX_ATOM_CAS_G_64p32imm3
    1623599856U,	// INT_PTX_ATOM_CAS_G_64p32reg
    1623599856U,	// INT_PTX_ATOM_CAS_G_64p64imm1
    1623599856U,	// INT_PTX_ATOM_CAS_G_64p64imm2
    1623599856U,	// INT_PTX_ATOM_CAS_G_64p64imm3
    1623599856U,	// INT_PTX_ATOM_CAS_G_64p64reg
    1623597404U,	// INT_PTX_ATOM_CAS_S_32p32imm1
    1623597404U,	// INT_PTX_ATOM_CAS_S_32p32imm2
    1623597404U,	// INT_PTX_ATOM_CAS_S_32p32imm3
    1623597404U,	// INT_PTX_ATOM_CAS_S_32p32reg
    1623597404U,	// INT_PTX_ATOM_CAS_S_32p64imm1
    1623597404U,	// INT_PTX_ATOM_CAS_S_32p64imm2
    1623597404U,	// INT_PTX_ATOM_CAS_S_32p64imm3
    1623597404U,	// INT_PTX_ATOM_CAS_S_32p64reg
    1623599834U,	// INT_PTX_ATOM_CAS_S_64p32imm1
    1623599834U,	// INT_PTX_ATOM_CAS_S_64p32imm2
    1623599834U,	// INT_PTX_ATOM_CAS_S_64p32imm3
    1623599834U,	// INT_PTX_ATOM_CAS_S_64p32reg
    1623599834U,	// INT_PTX_ATOM_CAS_S_64p64imm1
    1623599834U,	// INT_PTX_ATOM_CAS_S_64p64imm2
    1623599834U,	// INT_PTX_ATOM_CAS_S_64p64imm3
    1623599834U,	// INT_PTX_ATOM_CAS_S_64p64reg
    1623599197U,	// INT_PTX_ATOM_DEC_GEN_32_USE_Gp32imm
    1623599197U,	// INT_PTX_ATOM_DEC_GEN_32_USE_Gp32reg
    1623599197U,	// INT_PTX_ATOM_DEC_GEN_32_USE_Gp64imm
    1623599197U,	// INT_PTX_ATOM_DEC_GEN_32_USE_Gp64reg
    1623599219U,	// INT_PTX_ATOM_DEC_GEN_32p32imm
    1623599219U,	// INT_PTX_ATOM_DEC_GEN_32p32reg
    1623599219U,	// INT_PTX_ATOM_DEC_GEN_32p64imm
    1623599219U,	// INT_PTX_ATOM_DEC_GEN_32p64reg
    1623599197U,	// INT_PTX_ATOM_DEC_G_32p32imm
    1623599197U,	// INT_PTX_ATOM_DEC_G_32p32reg
    1623599197U,	// INT_PTX_ATOM_DEC_G_32p64imm
    1623599197U,	// INT_PTX_ATOM_DEC_G_32p64reg
    1623599175U,	// INT_PTX_ATOM_DEC_S_32p32imm
    1623599175U,	// INT_PTX_ATOM_DEC_S_32p32reg
    1623599175U,	// INT_PTX_ATOM_DEC_S_32p64imm
    1623599175U,	// INT_PTX_ATOM_DEC_S_32p64reg
    1623599275U,	// INT_PTX_ATOM_INC_GEN_32_USE_Gp32imm
    1623599275U,	// INT_PTX_ATOM_INC_GEN_32_USE_Gp32reg
    1623599275U,	// INT_PTX_ATOM_INC_GEN_32_USE_Gp64imm
    1623599275U,	// INT_PTX_ATOM_INC_GEN_32_USE_Gp64reg
    1623599297U,	// INT_PTX_ATOM_INC_GEN_32p32imm
    1623599297U,	// INT_PTX_ATOM_INC_GEN_32p32reg
    1623599297U,	// INT_PTX_ATOM_INC_GEN_32p64imm
    1623599297U,	// INT_PTX_ATOM_INC_GEN_32p64reg
    1623599275U,	// INT_PTX_ATOM_INC_G_32p32imm
    1623599275U,	// INT_PTX_ATOM_INC_G_32p32reg
    1623599275U,	// INT_PTX_ATOM_INC_G_32p64imm
    1623599275U,	// INT_PTX_ATOM_INC_G_32p64reg
    1623599253U,	// INT_PTX_ATOM_INC_S_32p32imm
    1623599253U,	// INT_PTX_ATOM_INC_S_32p32reg
    1623599253U,	// INT_PTX_ATOM_INC_S_32p64imm
    1623599253U,	// INT_PTX_ATOM_INC_S_32p64reg
    1623599138U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32_USE_Gp32imm
    1623599138U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32_USE_Gp32reg
    1623599138U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32_USE_Gp64imm
    1623599138U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32_USE_Gp64reg
    1623599160U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32p32imm
    1623599160U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32p32reg
    1623599160U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32p64imm
    1623599160U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32p64reg
    1623599138U,	// INT_PTX_ATOM_LOAD_MAX_G_32p32imm
    1623599138U,	// INT_PTX_ATOM_LOAD_MAX_G_32p32reg
    1623599138U,	// INT_PTX_ATOM_LOAD_MAX_G_32p64imm
    1623599138U,	// INT_PTX_ATOM_LOAD_MAX_G_32p64reg
    1623599116U,	// INT_PTX_ATOM_LOAD_MAX_S_32p32imm
    1623599116U,	// INT_PTX_ATOM_LOAD_MAX_S_32p32reg
    1623599116U,	// INT_PTX_ATOM_LOAD_MAX_S_32p64imm
    1623599116U,	// INT_PTX_ATOM_LOAD_MAX_S_32p64reg
    1623599008U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32_USE_Gp32imm
    1623599008U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32_USE_Gp32reg
    1623599008U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32_USE_Gp64imm
    1623599008U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32_USE_Gp64reg
    1623599030U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32p32imm
    1623599030U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32p32reg
    1623599030U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32p64imm
    1623599030U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32p64reg
    1623599008U,	// INT_PTX_ATOM_LOAD_MIN_G_32p32imm
    1623599008U,	// INT_PTX_ATOM_LOAD_MIN_G_32p32reg
    1623599008U,	// INT_PTX_ATOM_LOAD_MIN_G_32p64imm
    1623599008U,	// INT_PTX_ATOM_LOAD_MIN_G_32p64reg
    1623598986U,	// INT_PTX_ATOM_LOAD_MIN_S_32p32imm
    1623598986U,	// INT_PTX_ATOM_LOAD_MIN_S_32p32reg
    1623598986U,	// INT_PTX_ATOM_LOAD_MIN_S_32p64imm
    1623598986U,	// INT_PTX_ATOM_LOAD_MIN_S_32p64reg
    1623599714U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32_USE_Gp32imm
    1623599714U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32_USE_Gp32reg
    1623599714U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32_USE_Gp64imm
    1623599714U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32_USE_Gp64reg
    1623599736U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32p32imm
    1623599736U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32p32reg
    1623599736U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32p64imm
    1623599736U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32p64reg
    1623599714U,	// INT_PTX_ATOM_LOAD_UMAX_G_32p32imm
    1623599714U,	// INT_PTX_ATOM_LOAD_UMAX_G_32p32reg
    1623599714U,	// INT_PTX_ATOM_LOAD_UMAX_G_32p64imm
    1623599714U,	// INT_PTX_ATOM_LOAD_UMAX_G_32p64reg
    1623599692U,	// INT_PTX_ATOM_LOAD_UMAX_S_32p32imm
    1623599692U,	// INT_PTX_ATOM_LOAD_UMAX_S_32p32reg
    1623599692U,	// INT_PTX_ATOM_LOAD_UMAX_S_32p64imm
    1623599692U,	// INT_PTX_ATOM_LOAD_UMAX_S_32p64reg
    1623599573U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32_USE_Gp32imm
    1623599573U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32_USE_Gp32reg
    1623599573U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32_USE_Gp64imm
    1623599573U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32_USE_Gp64reg
    1623599595U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32p32imm
    1623599595U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32p32reg
    1623599595U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32p64imm
    1623599595U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32p64reg
    1623599573U,	// INT_PTX_ATOM_LOAD_UMIN_G_32p32imm
    1623599573U,	// INT_PTX_ATOM_LOAD_UMIN_G_32p32reg
    1623599573U,	// INT_PTX_ATOM_LOAD_UMIN_G_32p64imm
    1623599573U,	// INT_PTX_ATOM_LOAD_UMIN_G_32p64reg
    1623599551U,	// INT_PTX_ATOM_LOAD_UMIN_S_32p32imm
    1623599551U,	// INT_PTX_ATOM_LOAD_UMIN_S_32p32reg
    1623599551U,	// INT_PTX_ATOM_LOAD_UMIN_S_32p64imm
    1623599551U,	// INT_PTX_ATOM_LOAD_UMIN_S_32p64reg
    1623597310U,	// INT_PTX_ATOM_OR_GEN_32_USE_Gp32imm
    1623597310U,	// INT_PTX_ATOM_OR_GEN_32_USE_Gp32reg
    1623597310U,	// INT_PTX_ATOM_OR_GEN_32_USE_Gp64imm
    1623597310U,	// INT_PTX_ATOM_OR_GEN_32_USE_Gp64reg
    1623597331U,	// INT_PTX_ATOM_OR_GEN_32p32imm
    1623597331U,	// INT_PTX_ATOM_OR_GEN_32p32reg
    1623597331U,	// INT_PTX_ATOM_OR_GEN_32p64imm
    1623597331U,	// INT_PTX_ATOM_OR_GEN_32p64reg
    1623597310U,	// INT_PTX_ATOM_OR_G_32p32imm
    1623597310U,	// INT_PTX_ATOM_OR_G_32p32reg
    1623597310U,	// INT_PTX_ATOM_OR_G_32p64imm
    1623597310U,	// INT_PTX_ATOM_OR_G_32p64reg
    1623597289U,	// INT_PTX_ATOM_OR_S_32p32imm
    1623597289U,	// INT_PTX_ATOM_OR_S_32p32reg
    1623597289U,	// INT_PTX_ATOM_OR_S_32p64imm
    1623597289U,	// INT_PTX_ATOM_OR_S_32p64reg
    13153646U,	// INT_PTX_ATOM_SUB_GEN_32_USE_Gp32reg
    13153646U,	// INT_PTX_ATOM_SUB_GEN_32_USE_Gp64reg
    13284718U,	// INT_PTX_ATOM_SUB_GEN_32p32reg
    13284718U,	// INT_PTX_ATOM_SUB_GEN_32p64reg
    13415829U,	// INT_PTX_ATOM_SUB_GEN_64_USE_Gp32reg
    13415829U,	// INT_PTX_ATOM_SUB_GEN_64_USE_Gp64reg
    13546901U,	// INT_PTX_ATOM_SUB_GEN_64p32reg
    13546901U,	// INT_PTX_ATOM_SUB_GEN_64p64reg
    13153646U,	// INT_PTX_ATOM_SUB_G_32p32reg
    13153646U,	// INT_PTX_ATOM_SUB_G_32p64reg
    13415829U,	// INT_PTX_ATOM_SUB_G_64p32reg
    13415829U,	// INT_PTX_ATOM_SUB_G_64p64reg
    13677934U,	// INT_PTX_ATOM_SUB_S_32p32reg
    13677934U,	// INT_PTX_ATOM_SUB_S_32p64reg
    13809045U,	// INT_PTX_ATOM_SUB_S_64p32reg
    13809045U,	// INT_PTX_ATOM_SUB_S_64p64reg
    1623597240U,	// INT_PTX_ATOM_SWAP_GEN_32_USE_Gp32imm
    1623597240U,	// INT_PTX_ATOM_SWAP_GEN_32_USE_Gp32reg
    1623597240U,	// INT_PTX_ATOM_SWAP_GEN_32_USE_Gp64imm
    1623597240U,	// INT_PTX_ATOM_SWAP_GEN_32_USE_Gp64reg
    1623597263U,	// INT_PTX_ATOM_SWAP_GEN_32p32imm
    1623597263U,	// INT_PTX_ATOM_SWAP_GEN_32p32reg
    1623597263U,	// INT_PTX_ATOM_SWAP_GEN_32p64imm
    1623597263U,	// INT_PTX_ATOM_SWAP_GEN_32p64reg
    1623599785U,	// INT_PTX_ATOM_SWAP_GEN_64_USE_Gp32imm
    1623599785U,	// INT_PTX_ATOM_SWAP_GEN_64_USE_Gp32reg
    1623599785U,	// INT_PTX_ATOM_SWAP_GEN_64_USE_Gp64imm
    1623599785U,	// INT_PTX_ATOM_SWAP_GEN_64_USE_Gp64reg
    1623599808U,	// INT_PTX_ATOM_SWAP_GEN_64p32imm
    1623599808U,	// INT_PTX_ATOM_SWAP_GEN_64p32reg
    1623599808U,	// INT_PTX_ATOM_SWAP_GEN_64p64imm
    1623599808U,	// INT_PTX_ATOM_SWAP_GEN_64p64reg
    1623597240U,	// INT_PTX_ATOM_SWAP_G_32p32imm
    1623597240U,	// INT_PTX_ATOM_SWAP_G_32p32reg
    1623597240U,	// INT_PTX_ATOM_SWAP_G_32p64imm
    1623597240U,	// INT_PTX_ATOM_SWAP_G_32p64reg
    1623599785U,	// INT_PTX_ATOM_SWAP_G_64p32imm
    1623599785U,	// INT_PTX_ATOM_SWAP_G_64p32reg
    1623599785U,	// INT_PTX_ATOM_SWAP_G_64p64imm
    1623599785U,	// INT_PTX_ATOM_SWAP_G_64p64reg
    1623597217U,	// INT_PTX_ATOM_SWAP_S_32p32imm
    1623597217U,	// INT_PTX_ATOM_SWAP_S_32p32reg
    1623597217U,	// INT_PTX_ATOM_SWAP_S_32p64imm
    1623597217U,	// INT_PTX_ATOM_SWAP_S_32p64reg
    1623599762U,	// INT_PTX_ATOM_SWAP_S_64p32imm
    1623599762U,	// INT_PTX_ATOM_SWAP_S_64p32reg
    1623599762U,	// INT_PTX_ATOM_SWAP_S_64p64imm
    1623599762U,	// INT_PTX_ATOM_SWAP_S_64p64reg
    1623597367U,	// INT_PTX_ATOM_XOR_GEN_32_USE_Gp32imm
    1623597367U,	// INT_PTX_ATOM_XOR_GEN_32_USE_Gp32reg
    1623597367U,	// INT_PTX_ATOM_XOR_GEN_32_USE_Gp64imm
    1623597367U,	// INT_PTX_ATOM_XOR_GEN_32_USE_Gp64reg
    1623597389U,	// INT_PTX_ATOM_XOR_GEN_32p32imm
    1623597389U,	// INT_PTX_ATOM_XOR_GEN_32p32reg
    1623597389U,	// INT_PTX_ATOM_XOR_GEN_32p64imm
    1623597389U,	// INT_PTX_ATOM_XOR_GEN_32p64reg
    1623597367U,	// INT_PTX_ATOM_XOR_G_32p32imm
    1623597367U,	// INT_PTX_ATOM_XOR_G_32p32reg
    1623597367U,	// INT_PTX_ATOM_XOR_G_32p64imm
    1623597367U,	// INT_PTX_ATOM_XOR_G_32p64reg
    1623597345U,	// INT_PTX_ATOM_XOR_S_32p32imm
    1623597345U,	// INT_PTX_ATOM_XOR_S_32p32reg
    1623597345U,	// INT_PTX_ATOM_XOR_S_32p64imm
    1623597345U,	// INT_PTX_ATOM_XOR_S_32p64reg
    2160468437U,	// INT_PTX_LDG_GLOBAL_f32areg
    2160468437U,	// INT_PTX_LDG_GLOBAL_f32areg64
    147202517U,	// INT_PTX_LDG_GLOBAL_f32ari
    147202517U,	// INT_PTX_LDG_GLOBAL_f32ari64
    2160468437U,	// INT_PTX_LDG_GLOBAL_f32avar
    2160470856U,	// INT_PTX_LDG_GLOBAL_f64areg
    2160470856U,	// INT_PTX_LDG_GLOBAL_f64areg64
    147204936U,	// INT_PTX_LDG_GLOBAL_f64ari
    147204936U,	// INT_PTX_LDG_GLOBAL_f64ari64
    2160470856U,	// INT_PTX_LDG_GLOBAL_f64avar
    2160471986U,	// INT_PTX_LDG_GLOBAL_i16areg
    2160471986U,	// INT_PTX_LDG_GLOBAL_i16areg64
    147206066U,	// INT_PTX_LDG_GLOBAL_i16ari
    147206066U,	// INT_PTX_LDG_GLOBAL_i16ari64
    2160471986U,	// INT_PTX_LDG_GLOBAL_i16avar
    2160470146U,	// INT_PTX_LDG_GLOBAL_i32areg
    2160470146U,	// INT_PTX_LDG_GLOBAL_i32areg64
    147204226U,	// INT_PTX_LDG_GLOBAL_i32ari
    147204226U,	// INT_PTX_LDG_GLOBAL_i32ari64
    2160470146U,	// INT_PTX_LDG_GLOBAL_i32avar
    2160471494U,	// INT_PTX_LDG_GLOBAL_i64areg
    2160471494U,	// INT_PTX_LDG_GLOBAL_i64areg64
    147205574U,	// INT_PTX_LDG_GLOBAL_i64ari
    147205574U,	// INT_PTX_LDG_GLOBAL_i64ari64
    2160471494U,	// INT_PTX_LDG_GLOBAL_i64avar
    2160472129U,	// INT_PTX_LDG_GLOBAL_i8areg
    2160472129U,	// INT_PTX_LDG_GLOBAL_i8areg64
    147206209U,	// INT_PTX_LDG_GLOBAL_i8ari
    147206209U,	// INT_PTX_LDG_GLOBAL_i8ari64
    2160472129U,	// INT_PTX_LDG_GLOBAL_i8avar
    2160470146U,	// INT_PTX_LDG_GLOBAL_p32areg
    2160470146U,	// INT_PTX_LDG_GLOBAL_p32areg64
    147204226U,	// INT_PTX_LDG_GLOBAL_p32ari
    147204226U,	// INT_PTX_LDG_GLOBAL_p32ari64
    2160470146U,	// INT_PTX_LDG_GLOBAL_p32avar
    2160471494U,	// INT_PTX_LDG_GLOBAL_p64areg
    2160471494U,	// INT_PTX_LDG_GLOBAL_p64areg64
    147205574U,	// INT_PTX_LDG_GLOBAL_p64ari
    147205574U,	// INT_PTX_LDG_GLOBAL_p64ari64
    2160471494U,	// INT_PTX_LDG_GLOBAL_p64avar
    2684369991U,	// INT_PTX_LDG_G_v2f32_ELE_areg32
    2684369991U,	// INT_PTX_LDG_G_v2f32_ELE_areg64
    2684369991U,	// INT_PTX_LDG_G_v2f32_ELE_ari32
    2684369991U,	// INT_PTX_LDG_G_v2f32_ELE_ari64
    2684369991U,	// INT_PTX_LDG_G_v2f32_ELE_avar
    2684370200U,	// INT_PTX_LDG_G_v2f64_ELE_areg32
    2684370200U,	// INT_PTX_LDG_G_v2f64_ELE_areg64
    2684370200U,	// INT_PTX_LDG_G_v2f64_ELE_ari32
    2684370200U,	// INT_PTX_LDG_G_v2f64_ELE_ari64
    2684370200U,	// INT_PTX_LDG_G_v2f64_ELE_avar
    2684370288U,	// INT_PTX_LDG_G_v2i16_ELE_areg32
    2684370288U,	// INT_PTX_LDG_G_v2i16_ELE_areg64
    2684370288U,	// INT_PTX_LDG_G_v2i16_ELE_ari32
    2684370288U,	// INT_PTX_LDG_G_v2i16_ELE_ari64
    2684370288U,	// INT_PTX_LDG_G_v2i16_ELE_avar
    2684370079U,	// INT_PTX_LDG_G_v2i32_ELE_areg32
    2684370079U,	// INT_PTX_LDG_G_v2i32_ELE_areg64
    2684370079U,	// INT_PTX_LDG_G_v2i32_ELE_ari32
    2684370079U,	// INT_PTX_LDG_G_v2i32_ELE_ari64
    2684370079U,	// INT_PTX_LDG_G_v2i32_ELE_avar
    2684370244U,	// INT_PTX_LDG_G_v2i64_ELE_areg32
    2684370244U,	// INT_PTX_LDG_G_v2i64_ELE_areg64
    2684370244U,	// INT_PTX_LDG_G_v2i64_ELE_ari32
    2684370244U,	// INT_PTX_LDG_G_v2i64_ELE_ari64
    2684370244U,	// INT_PTX_LDG_G_v2i64_ELE_avar
    2684370376U,	// INT_PTX_LDG_G_v2i8_ELE_areg32
    2684370376U,	// INT_PTX_LDG_G_v2i8_ELE_areg64
    2684370376U,	// INT_PTX_LDG_G_v2i8_ELE_ari32
    2684370376U,	// INT_PTX_LDG_G_v2i8_ELE_ari64
    2684370376U,	// INT_PTX_LDG_G_v2i8_ELE_avar
    15475U,	// INT_PTX_LDG_G_v4f32_ELE_areg32
    15475U,	// INT_PTX_LDG_G_v4f32_ELE_areg64
    15475U,	// INT_PTX_LDG_G_v4f32_ELE_ari32
    15475U,	// INT_PTX_LDG_G_v4f32_ELE_ari64
    15475U,	// INT_PTX_LDG_G_v4f32_ELE_avar
    15772U,	// INT_PTX_LDG_G_v4i16_ELE_areg32
    15772U,	// INT_PTX_LDG_G_v4i16_ELE_areg64
    15772U,	// INT_PTX_LDG_G_v4i16_ELE_ari32
    15772U,	// INT_PTX_LDG_G_v4i16_ELE_ari64
    15772U,	// INT_PTX_LDG_G_v4i16_ELE_avar
    15563U,	// INT_PTX_LDG_G_v4i32_ELE_areg32
    15563U,	// INT_PTX_LDG_G_v4i32_ELE_areg64
    15563U,	// INT_PTX_LDG_G_v4i32_ELE_ari32
    15563U,	// INT_PTX_LDG_G_v4i32_ELE_ari64
    15563U,	// INT_PTX_LDG_G_v4i32_ELE_avar
    15858U,	// INT_PTX_LDG_G_v4i8_ELE_areg32
    15858U,	// INT_PTX_LDG_G_v4i8_ELE_areg64
    15858U,	// INT_PTX_LDG_G_v4i8_ELE_ari32
    15858U,	// INT_PTX_LDG_G_v4i8_ELE_ari64
    15858U,	// INT_PTX_LDG_G_v4i8_ELE_avar
    2160468525U,	// INT_PTX_LDU_GLOBAL_f32areg
    2160468525U,	// INT_PTX_LDU_GLOBAL_f32areg64
    147202605U,	// INT_PTX_LDU_GLOBAL_f32ari
    147202605U,	// INT_PTX_LDU_GLOBAL_f32ari64
    2160468525U,	// INT_PTX_LDU_GLOBAL_f32avar
    2160470895U,	// INT_PTX_LDU_GLOBAL_f64areg
    2160470895U,	// INT_PTX_LDU_GLOBAL_f64areg64
    147204975U,	// INT_PTX_LDU_GLOBAL_f64ari
    147204975U,	// INT_PTX_LDU_GLOBAL_f64ari64
    2160470895U,	// INT_PTX_LDU_GLOBAL_f64avar
    2160472033U,	// INT_PTX_LDU_GLOBAL_i16areg
    2160472033U,	// INT_PTX_LDU_GLOBAL_i16areg64
    147206113U,	// INT_PTX_LDU_GLOBAL_i16ari
    147206113U,	// INT_PTX_LDU_GLOBAL_i16ari64
    2160472033U,	// INT_PTX_LDU_GLOBAL_i16avar
    2160470399U,	// INT_PTX_LDU_GLOBAL_i32areg
    2160470399U,	// INT_PTX_LDU_GLOBAL_i32areg64
    147204479U,	// INT_PTX_LDU_GLOBAL_i32ari
    147204479U,	// INT_PTX_LDU_GLOBAL_i32ari64
    2160470399U,	// INT_PTX_LDU_GLOBAL_i32avar
    2160471663U,	// INT_PTX_LDU_GLOBAL_i64areg
    2160471663U,	// INT_PTX_LDU_GLOBAL_i64areg64
    147205743U,	// INT_PTX_LDU_GLOBAL_i64ari
    147205743U,	// INT_PTX_LDU_GLOBAL_i64ari64
    2160471663U,	// INT_PTX_LDU_GLOBAL_i64avar
    2160472147U,	// INT_PTX_LDU_GLOBAL_i8areg
    2160472147U,	// INT_PTX_LDU_GLOBAL_i8areg64
    147206227U,	// INT_PTX_LDU_GLOBAL_i8ari
    147206227U,	// INT_PTX_LDU_GLOBAL_i8ari64
    2160472147U,	// INT_PTX_LDU_GLOBAL_i8avar
    2160470399U,	// INT_PTX_LDU_GLOBAL_p32areg
    2160470399U,	// INT_PTX_LDU_GLOBAL_p32areg64
    147204479U,	// INT_PTX_LDU_GLOBAL_p32ari
    147204479U,	// INT_PTX_LDU_GLOBAL_p32ari64
    2160470399U,	// INT_PTX_LDU_GLOBAL_p32avar
    2160471663U,	// INT_PTX_LDU_GLOBAL_p64areg
    2160471663U,	// INT_PTX_LDU_GLOBAL_p64areg64
    147205743U,	// INT_PTX_LDU_GLOBAL_p64ari
    147205743U,	// INT_PTX_LDU_GLOBAL_p64ari64
    2160471663U,	// INT_PTX_LDU_GLOBAL_p64avar
    2684370014U,	// INT_PTX_LDU_G_v2f32_ELE_areg32
    2684370014U,	// INT_PTX_LDU_G_v2f32_ELE_areg64
    2684370014U,	// INT_PTX_LDU_G_v2f32_ELE_ari32
    2684370014U,	// INT_PTX_LDU_G_v2f32_ELE_ari64
    2684370014U,	// INT_PTX_LDU_G_v2f32_ELE_avar
    2684370223U,	// INT_PTX_LDU_G_v2f64_ELE_areg32
    2684370223U,	// INT_PTX_LDU_G_v2f64_ELE_areg64
    2684370223U,	// INT_PTX_LDU_G_v2f64_ELE_ari32
    2684370223U,	// INT_PTX_LDU_G_v2f64_ELE_ari64
    2684370223U,	// INT_PTX_LDU_G_v2f64_ELE_avar
    2684370311U,	// INT_PTX_LDU_G_v2i16_ELE_areg32
    2684370311U,	// INT_PTX_LDU_G_v2i16_ELE_areg64
    2684370311U,	// INT_PTX_LDU_G_v2i16_ELE_ari32
    2684370311U,	// INT_PTX_LDU_G_v2i16_ELE_ari64
    2684370311U,	// INT_PTX_LDU_G_v2i16_ELE_avar
    2684370102U,	// INT_PTX_LDU_G_v2i32_ELE_areg32
    2684370102U,	// INT_PTX_LDU_G_v2i32_ELE_areg64
    2684370102U,	// INT_PTX_LDU_G_v2i32_ELE_ari32
    2684370102U,	// INT_PTX_LDU_G_v2i32_ELE_ari64
    2684370102U,	// INT_PTX_LDU_G_v2i32_ELE_avar
    2684370267U,	// INT_PTX_LDU_G_v2i64_ELE_areg32
    2684370267U,	// INT_PTX_LDU_G_v2i64_ELE_areg64
    2684370267U,	// INT_PTX_LDU_G_v2i64_ELE_ari32
    2684370267U,	// INT_PTX_LDU_G_v2i64_ELE_ari64
    2684370267U,	// INT_PTX_LDU_G_v2i64_ELE_avar
    2684370398U,	// INT_PTX_LDU_G_v2i8_ELE_areg32
    2684370398U,	// INT_PTX_LDU_G_v2i8_ELE_areg64
    2684370398U,	// INT_PTX_LDU_G_v2i8_ELE_ari32
    2684370398U,	// INT_PTX_LDU_G_v2i8_ELE_ari64
    2684370398U,	// INT_PTX_LDU_G_v2i8_ELE_avar
    15498U,	// INT_PTX_LDU_G_v4f32_ELE_areg32
    15498U,	// INT_PTX_LDU_G_v4f32_ELE_areg64
    15498U,	// INT_PTX_LDU_G_v4f32_ELE_ari32
    15498U,	// INT_PTX_LDU_G_v4f32_ELE_ari64
    15498U,	// INT_PTX_LDU_G_v4f32_ELE_avar
    15795U,	// INT_PTX_LDU_G_v4i16_ELE_areg32
    15795U,	// INT_PTX_LDU_G_v4i16_ELE_areg64
    15795U,	// INT_PTX_LDU_G_v4i16_ELE_ari32
    15795U,	// INT_PTX_LDU_G_v4i16_ELE_ari64
    15795U,	// INT_PTX_LDU_G_v4i16_ELE_avar
    15586U,	// INT_PTX_LDU_G_v4i32_ELE_areg32
    15586U,	// INT_PTX_LDU_G_v4i32_ELE_areg64
    15586U,	// INT_PTX_LDU_G_v4i32_ELE_ari32
    15586U,	// INT_PTX_LDU_G_v4i32_ELE_ari64
    15586U,	// INT_PTX_LDU_G_v4i32_ELE_avar
    15880U,	// INT_PTX_LDU_G_v4i8_ELE_areg32
    15880U,	// INT_PTX_LDU_G_v4i8_ELE_areg64
    15880U,	// INT_PTX_LDU_G_v4i8_ELE_ari32
    15880U,	// INT_PTX_LDU_G_v4i8_ELE_ari64
    15880U,	// INT_PTX_LDU_G_v4i8_ELE_avar
    13904450U,	// INT_PTX_SREG_CTAID_X
    14035522U,	// INT_PTX_SREG_CTAID_Y
    14166594U,	// INT_PTX_SREG_CTAID_Z
    14297666U,	// INT_PTX_SREG_NCTAID_X
    14428738U,	// INT_PTX_SREG_NCTAID_Y
    14559810U,	// INT_PTX_SREG_NCTAID_Z
    14690882U,	// INT_PTX_SREG_NTID_X
    14821954U,	// INT_PTX_SREG_NTID_Y
    14953026U,	// INT_PTX_SREG_NTID_Z
    15084098U,	// INT_PTX_SREG_TID_X
    15215170U,	// INT_PTX_SREG_TID_Y
    15346242U,	// INT_PTX_SREG_TID_Z
    15477314U,	// INT_PTX_SREG_WARPSIZE
    2330909424U,	// LDV_f32_v2_areg
    2330909424U,	// LDV_f32_v2_areg_64
    3404651248U,	// LDV_f32_v2_ari
    3404651248U,	// LDV_f32_v2_ari_64
    3404651248U,	// LDV_f32_v2_asi
    2330909424U,	// LDV_f32_v2_avar
    3975084784U,	// LDV_f32_v4_areg
    3975084784U,	// LDV_f32_v4_areg_64
    3975084784U,	// LDV_f32_v4_ari
    3975084784U,	// LDV_f32_v4_ari_64
    3975084784U,	// LDV_f32_v4_asi
    3975084784U,	// LDV_f32_v4_avar
    2330909424U,	// LDV_f64_v2_areg
    2330909424U,	// LDV_f64_v2_areg_64
    3404651248U,	// LDV_f64_v2_ari
    3404651248U,	// LDV_f64_v2_ari_64
    3404651248U,	// LDV_f64_v2_asi
    2330909424U,	// LDV_f64_v2_avar
    3975084784U,	// LDV_f64_v4_areg
    3975084784U,	// LDV_f64_v4_areg_64
    3975084784U,	// LDV_f64_v4_ari
    3975084784U,	// LDV_f64_v4_ari_64
    3975084784U,	// LDV_f64_v4_asi
    3975084784U,	// LDV_f64_v4_avar
    2330909424U,	// LDV_i16_v2_areg
    2330909424U,	// LDV_i16_v2_areg_64
    3404651248U,	// LDV_i16_v2_ari
    3404651248U,	// LDV_i16_v2_ari_64
    3404651248U,	// LDV_i16_v2_asi
    2330909424U,	// LDV_i16_v2_avar
    3975084784U,	// LDV_i16_v4_areg
    3975084784U,	// LDV_i16_v4_areg_64
    3975084784U,	// LDV_i16_v4_ari
    3975084784U,	// LDV_i16_v4_ari_64
    3975084784U,	// LDV_i16_v4_asi
    3975084784U,	// LDV_i16_v4_avar
    2330909424U,	// LDV_i32_v2_areg
    2330909424U,	// LDV_i32_v2_areg_64
    3404651248U,	// LDV_i32_v2_ari
    3404651248U,	// LDV_i32_v2_ari_64
    3404651248U,	// LDV_i32_v2_asi
    2330909424U,	// LDV_i32_v2_avar
    3975084784U,	// LDV_i32_v4_areg
    3975084784U,	// LDV_i32_v4_areg_64
    3975084784U,	// LDV_i32_v4_ari
    3975084784U,	// LDV_i32_v4_ari_64
    3975084784U,	// LDV_i32_v4_asi
    3975084784U,	// LDV_i32_v4_avar
    2330909424U,	// LDV_i64_v2_areg
    2330909424U,	// LDV_i64_v2_areg_64
    3404651248U,	// LDV_i64_v2_ari
    3404651248U,	// LDV_i64_v2_ari_64
    3404651248U,	// LDV_i64_v2_asi
    2330909424U,	// LDV_i64_v2_avar
    3975084784U,	// LDV_i64_v4_areg
    3975084784U,	// LDV_i64_v4_areg_64
    3975084784U,	// LDV_i64_v4_ari
    3975084784U,	// LDV_i64_v4_ari_64
    3975084784U,	// LDV_i64_v4_asi
    3975084784U,	// LDV_i64_v4_avar
    2330909424U,	// LDV_i8_v2_areg
    2330909424U,	// LDV_i8_v2_areg_64
    3404651248U,	// LDV_i8_v2_ari
    3404651248U,	// LDV_i8_v2_ari_64
    3404651248U,	// LDV_i8_v2_asi
    2330909424U,	// LDV_i8_v2_avar
    3975084784U,	// LDV_i8_v4_areg
    3975084784U,	// LDV_i8_v4_areg_64
    3975084784U,	// LDV_i8_v4_ari
    3975084784U,	// LDV_i8_v4_ari_64
    3975084784U,	// LDV_i8_v4_asi
    3975084784U,	// LDV_i8_v4_avar
    250682096U,	// LD_f32_areg
    250682096U,	// LD_f32_areg_64
    284236528U,	// LD_f32_ari
    284236528U,	// LD_f32_ari_64
    284236528U,	// LD_f32_asi
    250682096U,	// LD_f32_avar
    250682096U,	// LD_f64_areg
    250682096U,	// LD_f64_areg_64
    284236528U,	// LD_f64_ari
    284236528U,	// LD_f64_ari_64
    284236528U,	// LD_f64_asi
    250682096U,	// LD_f64_avar
    250682096U,	// LD_i16_areg
    250682096U,	// LD_i16_areg_64
    284236528U,	// LD_i16_ari
    284236528U,	// LD_i16_ari_64
    284236528U,	// LD_i16_asi
    250682096U,	// LD_i16_avar
    250682096U,	// LD_i32_areg
    250682096U,	// LD_i32_areg_64
    284236528U,	// LD_i32_ari
    284236528U,	// LD_i32_ari_64
    284236528U,	// LD_i32_asi
    250682096U,	// LD_i32_avar
    250682096U,	// LD_i64_areg
    250682096U,	// LD_i64_areg_64
    284236528U,	// LD_i64_ari
    284236528U,	// LD_i64_ari_64
    284236528U,	// LD_i64_asi
    250682096U,	// LD_i64_avar
    250682096U,	// LD_i8_areg
    250682096U,	// LD_i8_areg_64
    284236528U,	// LD_i8_ari
    284236528U,	// LD_i8_ari_64
    284236528U,	// LD_i8_asi
    250682096U,	// LD_i8_avar
    302000358U,	// LEA_ADDRi
    302001637U,	// LEA_ADDRi64
    11018251U,	// LastCallArgF32
    11018251U,	// LastCallArgF64
    11018251U,	// LastCallArgI16
    11018251U,	// LastCallArgI32
    11018251U,	// LastCallArgI32imm
    11018251U,	// LastCallArgI64
    11025156U,	// LastCallArgParam
    15872201U,	// LoadParamMemF32
    15872328U,	// LoadParamMemF64
    15872390U,	// LoadParamMemI16
    15872159U,	// LoadParamMemI32
    15872286U,	// LoadParamMemI64
    15872434U,	// LoadParamMemI8
    15946U,	// LoadParamMemV2F32
    16010U,	// LoadParamMemV2F64
    16028U,	// LoadParamMemV2I16
    15900U,	// LoadParamMemV2I32
    15982U,	// LoadParamMemV2I64
    16064U,	// LoadParamMemV2I8
    15964U,	// LoadParamMemV4F32
    16046U,	// LoadParamMemV4I16
    15918U,	// LoadParamMemV4I32
    16081U,	// LoadParamMemV4I8
    12164U,	// MAD16rii
    12164U,	// MAD16rir
    12164U,	// MAD16rri
    12164U,	// MAD16rrr
    10196U,	// MAD32rii
    10196U,	// MAD32rir
    10196U,	// MAD32rri
    10196U,	// MAD32rrr
    11652U,	// MAD64rii
    11652U,	// MAD64rir
    11652U,	// MAD64rri
    11652U,	// MAD64rrr
    536881730U,	// MOV_ADDR
    536882930U,	// MOV_ADDR64
    16001602U,	// MOV_DEPOT_ADDR
    16002802U,	// MOV_DEPOT_ADDR_64
    12141U,	// MULTHSi16ri
    12141U,	// MULTHSi16rr
    10099U,	// MULTHSi32ri
    10099U,	// MULTHSi32rr
    11619U,	// MULTHSi64ri
    11619U,	// MULTHSi64rr
    12244U,	// MULTHUi16ri
    12244U,	// MULTHUi16rr
    10571U,	// MULTHUi32ri
    10571U,	// MULTHUi32rr
    11835U,	// MULTHUi64ri
    11835U,	// MULTHUi64rr
    12177U,	// MULTi16ri
    12177U,	// MULTi16rr
    10209U,	// MULTi32ri
    10209U,	// MULTi32rr
    11665U,	// MULTi64ri
    11665U,	// MULTi64rr
    12116U,	// MULWIDES32
    12116U,	// MULWIDES32Imm
    10074U,	// MULWIDES64
    10074U,	// MULWIDES64Imm
    12229U,	// MULWIDEU32
    12229U,	// MULWIDEU32Imm
    10556U,	// MULWIDEU64
    10556U,	// MULWIDEU64Imm
    536883425U,	// MoveParamF32
    536883552U,	// MoveParamF64
    536883444U,	// MoveParamI16
    536883383U,	// MoveParamI32
    536883510U,	// MoveParamI64
    0U,	// NOP
    536883310U,	// NOT1
    536882960U,	// NOT16
    536879522U,	// NOT32
    536881941U,	// NOT64
    8249U,	// ORb16ri
    8249U,	// ORb16rr
    8272U,	// ORb1ri
    8272U,	// ORb1rr
    8205U,	// ORb32ri
    8205U,	// ORb32rr
    8227U,	// ORb64ri
    8227U,	// ORb64rr
    536883349U,	// POPCr32
    536883476U,	// POPCr64
    11809215U,	// PTX_BAR_SYNC
    16134411U,	// PTX_READ_CLOCK
    16265597U,	// PTX_READ_CLOCK64
    16396555U,	// PTX_READ_CTAID_W
    13906187U,	// PTX_READ_CTAID_X
    14037259U,	// PTX_READ_CTAID_Y
    14168331U,	// PTX_READ_CTAID_Z
    16527627U,	// PTX_READ_GRIDID
    16658699U,	// PTX_READ_LANEID
    16789771U,	// PTX_READ_LANEMASK_EQ
    16920843U,	// PTX_READ_LANEMASK_GE
    17051915U,	// PTX_READ_LANEMASK_GT
    17182987U,	// PTX_READ_LANEMASK_LE
    17314059U,	// PTX_READ_LANEMASK_LT
    17445131U,	// PTX_READ_NCTAID_W
    14299403U,	// PTX_READ_NCTAID_X
    14430475U,	// PTX_READ_NCTAID_Y
    14561547U,	// PTX_READ_NCTAID_Z
    17576203U,	// PTX_READ_NSMID
    17707275U,	// PTX_READ_NTID_W
    14692619U,	// PTX_READ_NTID_X
    14823691U,	// PTX_READ_NTID_Y
    14954763U,	// PTX_READ_NTID_Z
    17838347U,	// PTX_READ_NWARPID
    17969419U,	// PTX_READ_PM0
    18100491U,	// PTX_READ_PM1
    18231563U,	// PTX_READ_PM2
    18362635U,	// PTX_READ_PM3
    18493707U,	// PTX_READ_SMID
    18624779U,	// PTX_READ_TID_W
    15085835U,	// PTX_READ_TID_X
    15216907U,	// PTX_READ_TID_Y
    15347979U,	// PTX_READ_TID_Z
    18755851U,	// PTX_READ_WARPID
    6178U,	// PrintCallNoRetInst
    4596U,	// PrintCallRetInst1
    4643U,	// PrintCallRetInst2
    4708U,	// PrintCallRetInst3
    4791U,	// PrintCallRetInst4
    4892U,	// PrintCallRetInst5
    5011U,	// PrintCallRetInst6
    5148U,	// PrintCallRetInst7
    5303U,	// PrintCallRetInst8
    6168U,	// PrintCallUniNoRetInst
    4575U,	// PrintCallUniRetInst1
    4613U,	// PrintCallUniRetInst2
    4669U,	// PrintCallUniRetInst3
    4743U,	// PrintCallUniRetInst4
    4835U,	// PrintCallUniRetInst5
    4945U,	// PrintCallUniRetInst6
    5073U,	// PrintCallUniRetInst7
    5219U,	// PrintCallUniRetInst8
    11811537U,	// PrototypeInst
    11024390U,	// PseudoUseParamF32
    11024390U,	// PseudoUseParamF64
    11024390U,	// PseudoUseParamI16
    11024390U,	// PseudoUseParamI32
    11024390U,	// PseudoUseParamI64
    6813U,	// RETURNInst
    604018351U,	// ROT32imm_sw
    1140889458U,	// ROT64imm_sw
    1677760104U,	// ROTL32reg_sw
    2214631211U,	// ROTL64reg_sw
    1677760228U,	// ROTR32reg_sw
    2214631335U,	// ROTR64reg_sw
    536880078U,	// RSQRTF32approx1r
    6813U,	// Return
    12200U,	// SDIVi16ri
    12200U,	// SDIVi16rr
    10242U,	// SDIVi32ri
    10242U,	// SDIVi32rr
    11698U,	// SDIVi64ri
    11698U,	// SDIVi64rr
    12692U,	// SELP_b16ii
    12692U,	// SELP_b16ir
    12692U,	// SELP_b16ri
    12692U,	// SELP_b16rr
    12461U,	// SELP_b32ii
    12461U,	// SELP_b32ir
    12461U,	// SELP_b32ri
    12461U,	// SELP_b32rr
    12588U,	// SELP_b64ii
    12588U,	// SELP_b64ir
    12588U,	// SELP_b64ri
    12588U,	// SELP_b64rr
    12503U,	// SELP_f32ii
    12503U,	// SELP_f32ir
    12503U,	// SELP_f32ri
    12503U,	// SELP_f32rr
    12630U,	// SELP_f64ii
    12630U,	// SELP_f64ir
    12630U,	// SELP_f64ri
    12630U,	// SELP_f64rr
    12702U,	// SELP_s16ii
    12702U,	// SELP_s16ir
    12702U,	// SELP_s16ri
    12702U,	// SELP_s16rr
    12522U,	// SELP_s32ii
    12522U,	// SELP_s32ir
    12522U,	// SELP_s32ri
    12522U,	// SELP_s32rr
    12649U,	// SELP_s64ii
    12649U,	// SELP_s64ir
    12649U,	// SELP_s64ri
    12649U,	// SELP_s64rr
    12712U,	// SELP_u16ii
    12712U,	// SELP_u16ir
    12712U,	// SELP_u16ri
    12712U,	// SELP_u16rr
    12545U,	// SELP_u32ii
    12545U,	// SELP_u32ir
    12545U,	// SELP_u32ri
    12545U,	// SELP_u32rr
    12659U,	// SELP_u64ii
    12659U,	// SELP_u64ir
    12659U,	// SELP_u64ri
    12659U,	// SELP_u64rr
    18955319U,	// SETP_b16ir
    18955319U,	// SETP_b16ri
    18955319U,	// SETP_b16rr
    19086391U,	// SETP_b32ir
    19086391U,	// SETP_b32ri
    19086391U,	// SETP_b32rr
    19217463U,	// SETP_b64ir
    19217463U,	// SETP_b64ri
    19217463U,	// SETP_b64rr
    19348535U,	// SETP_f32ir
    19348535U,	// SETP_f32ri
    19348535U,	// SETP_f32rr
    19479607U,	// SETP_f64ir
    19479607U,	// SETP_f64ri
    19479607U,	// SETP_f64rr
    19610679U,	// SETP_s16ir
    19610679U,	// SETP_s16ri
    19610679U,	// SETP_s16rr
    19741751U,	// SETP_s32ir
    19741751U,	// SETP_s32ri
    19741751U,	// SETP_s32rr
    19872823U,	// SETP_s64ir
    19872823U,	// SETP_s64ri
    19872823U,	// SETP_s64rr
    20003895U,	// SETP_u16ir
    20003895U,	// SETP_u16ri
    20003895U,	// SETP_u16rr
    20134967U,	// SETP_u32ir
    20134967U,	// SETP_u32ri
    20134967U,	// SETP_u32rr
    20266039U,	// SETP_u64ir
    20266039U,	// SETP_u64ri
    20266039U,	// SETP_u64rr
    18963516U,	// SET_b16ir
    18963516U,	// SET_b16ri
    18963516U,	// SET_b16rr
    19094588U,	// SET_b32ir
    19094588U,	// SET_b32ri
    19094588U,	// SET_b32rr
    19225660U,	// SET_b64ir
    19225660U,	// SET_b64ri
    19225660U,	// SET_b64rr
    19356732U,	// SET_f32ir
    19356732U,	// SET_f32ri
    19356732U,	// SET_f32rr
    19487804U,	// SET_f64ir
    19487804U,	// SET_f64ri
    19487804U,	// SET_f64rr
    19618876U,	// SET_s16ir
    19618876U,	// SET_s16ri
    19618876U,	// SET_s16rr
    19749948U,	// SET_s32ir
    19749948U,	// SET_s32ri
    19749948U,	// SET_s32rr
    19881020U,	// SET_s64ir
    19881020U,	// SET_s64ri
    19881020U,	// SET_s64rr
    20012092U,	// SET_u16ir
    20012092U,	// SET_u16ri
    20012092U,	// SET_u16rr
    20143164U,	// SET_u32ir
    20143164U,	// SET_u32ri
    20143164U,	// SET_u32rr
    20274236U,	// SET_u64ir
    20274236U,	// SET_u64ri
    20274236U,	// SET_u64rr
    12038U,	// SHLi16ri
    12038U,	// SHLi16rr
    8415U,	// SHLi32ii
    8415U,	// SHLi32ri
    8415U,	// SHLi32rr
    10960U,	// SHLi64ri
    10960U,	// SHLi64rr
    536880027U,	// SINF
    12190U,	// SRAi16ri
    12190U,	// SRAi16rr
    10222U,	// SRAi32ii
    10222U,	// SRAi32ri
    10222U,	// SRAi32rr
    11678U,	// SRAi64ri
    11678U,	// SRAi64rr
    12154U,	// SREMi16ri
    12154U,	// SREMi16rr
    10112U,	// SREMi32ri
    10112U,	// SREMi32rr
    11632U,	// SREMi64ri
    11632U,	// SREMi64rr
    12284U,	// SRLi16ri
    12284U,	// SRLi16rr
    10761U,	// SRLi32ii
    10761U,	// SRLi32ri
    10761U,	// SRLi32rr
    11961U,	// SRLi64ri
    11961U,	// SRLi64rr
    3040271424U,	// STV_f32_v2_areg
    3040271424U,	// STV_f32_v2_areg_64
    3577142336U,	// STV_f32_v2_ari
    3577142336U,	// STV_f32_v2_ari_64
    3577142336U,	// STV_f32_v2_asi
    3040271424U,	// STV_f32_v2_avar
    3073834048U,	// STV_f32_v4_areg
    3073834048U,	// STV_f32_v4_areg_64
    3610704960U,	// STV_f32_v4_ari
    3610704960U,	// STV_f32_v4_ari_64
    3610704960U,	// STV_f32_v4_asi
    3073834048U,	// STV_f32_v4_avar
    3040271424U,	// STV_f64_v2_areg
    3040271424U,	// STV_f64_v2_areg_64
    3577142336U,	// STV_f64_v2_ari
    3577142336U,	// STV_f64_v2_ari_64
    3577142336U,	// STV_f64_v2_asi
    3040271424U,	// STV_f64_v2_avar
    3073834048U,	// STV_f64_v4_areg
    3073834048U,	// STV_f64_v4_areg_64
    3610704960U,	// STV_f64_v4_ari
    3610704960U,	// STV_f64_v4_ari_64
    3610704960U,	// STV_f64_v4_asi
    3073834048U,	// STV_f64_v4_avar
    3040271424U,	// STV_i16_v2_areg
    3040271424U,	// STV_i16_v2_areg_64
    3577142336U,	// STV_i16_v2_ari
    3577142336U,	// STV_i16_v2_ari_64
    3577142336U,	// STV_i16_v2_asi
    3040271424U,	// STV_i16_v2_avar
    3073834048U,	// STV_i16_v4_areg
    3073834048U,	// STV_i16_v4_areg_64
    3610704960U,	// STV_i16_v4_ari
    3610704960U,	// STV_i16_v4_ari_64
    3610704960U,	// STV_i16_v4_asi
    3073834048U,	// STV_i16_v4_avar
    3040271424U,	// STV_i32_v2_areg
    3040271424U,	// STV_i32_v2_areg_64
    3577142336U,	// STV_i32_v2_ari
    3577142336U,	// STV_i32_v2_ari_64
    3577142336U,	// STV_i32_v2_asi
    3040271424U,	// STV_i32_v2_avar
    3073834048U,	// STV_i32_v4_areg
    3073834048U,	// STV_i32_v4_areg_64
    3610704960U,	// STV_i32_v4_ari
    3610704960U,	// STV_i32_v4_ari_64
    3610704960U,	// STV_i32_v4_asi
    3073834048U,	// STV_i32_v4_avar
    3040271424U,	// STV_i64_v2_areg
    3040271424U,	// STV_i64_v2_areg_64
    3577142336U,	// STV_i64_v2_ari
    3577142336U,	// STV_i64_v2_ari_64
    3577142336U,	// STV_i64_v2_asi
    3040271424U,	// STV_i64_v2_avar
    3073834048U,	// STV_i64_v4_areg
    3073834048U,	// STV_i64_v4_areg_64
    3610704960U,	// STV_i64_v4_ari
    3610704960U,	// STV_i64_v4_ari_64
    3610704960U,	// STV_i64_v4_asi
    3073834048U,	// STV_i64_v4_avar
    3040271424U,	// STV_i8_v2_areg
    3040271424U,	// STV_i8_v2_areg_64
    3577142336U,	// STV_i8_v2_ari
    3577142336U,	// STV_i8_v2_ari_64
    3577142336U,	// STV_i8_v2_asi
    3040271424U,	// STV_i8_v2_avar
    3073834048U,	// STV_i8_v4_areg
    3073834048U,	// STV_i8_v4_areg_64
    3610704960U,	// STV_i8_v4_ari
    3610704960U,	// STV_i8_v4_ari_64
    3610704960U,	// STV_i8_v4_asi
    3073834048U,	// STV_i8_v4_avar
    2033654848U,	// ST_f32_areg
    2033654848U,	// ST_f32_areg_64
    3644267584U,	// ST_f32_ari
    3644267584U,	// ST_f32_ari_64
    3644267584U,	// ST_f32_asi
    2033654848U,	// ST_f32_avar
    2033654848U,	// ST_f64_areg
    2033654848U,	// ST_f64_areg_64
    3644267584U,	// ST_f64_ari
    3644267584U,	// ST_f64_ari_64
    3644267584U,	// ST_f64_asi
    2033654848U,	// ST_f64_avar
    2033654848U,	// ST_i16_areg
    2033654848U,	// ST_i16_areg_64
    3644267584U,	// ST_i16_ari
    3644267584U,	// ST_i16_ari_64
    3644267584U,	// ST_i16_asi
    2033654848U,	// ST_i16_avar
    2033654848U,	// ST_i32_areg
    2033654848U,	// ST_i32_areg_64
    3644267584U,	// ST_i32_ari
    3644267584U,	// ST_i32_ari_64
    3644267584U,	// ST_i32_asi
    2033654848U,	// ST_i32_avar
    2033654848U,	// ST_i64_areg
    2033654848U,	// ST_i64_areg_64
    3644267584U,	// ST_i64_ari
    3644267584U,	// ST_i64_ari_64
    3644267584U,	// ST_i64_asi
    2033654848U,	// ST_i64_avar
    2033654848U,	// ST_i8_areg
    2033654848U,	// ST_i8_areg_64
    3644267584U,	// ST_i8_ari
    3644267584U,	// ST_i8_ari_64
    3644267584U,	// ST_i8_asi
    2033654848U,	// ST_i8_avar
    10013U,	// SUBCCCi32ri
    10013U,	// SUBCCCi32rr
    10000U,	// SUBCCi32ri
    10000U,	// SUBCCi32rr
    12387U,	// SUB_i1_ri
    12387U,	// SUB_i1_rr
    12096U,	// SUBi16ri
    12096U,	// SUBi16rr
    9990U,	// SUBi32ri
    9990U,	// SUBi32rr
    11589U,	// SUBi64ri
    11589U,	// SUBi64rr
    1698208588U,	// StoreParamF32
    1698208674U,	// StoreParamF64
    1698208740U,	// StoreParamI16
    1698208522U,	// StoreParamI32
    1698208631U,	// StoreParamI64
    1698208804U,	// StoreParamI8
    456702750U,	// StoreParamV2F32
    456702859U,	// StoreParamV2F64
    456702902U,	// StoreParamV2I16
    456702707U,	// StoreParamV2I32
    456702816U,	// StoreParamV2I64
    456702968U,	// StoreParamV2I8
    490306357U,	// StoreParamV4F32
    490306509U,	// StoreParamV4I16
    490306314U,	// StoreParamV4I32
    490306574U,	// StoreParamV4I8
    20617505U,	// StoreRetvalF32
    20617623U,	// StoreRetvalF64
    20617713U,	// StoreRetvalI16
    20617415U,	// StoreRetvalI32
    20617564U,	// StoreRetvalI64
    20617801U,	// StoreRetvalI8
    121420003U,	// StoreRetvalV2F32
    121420152U,	// StoreRetvalV2F64
    121420211U,	// StoreRetvalV2I16
    121419913U,	// StoreRetvalV2I32
    121420093U,	// StoreRetvalV2I64
    121420301U,	// StoreRetvalV2I8
    3980228866U,	// StoreRetvalV4F32
    3980229074U,	// StoreRetvalV4I16
    3980228776U,	// StoreRetvalV4I32
    3980229163U,	// StoreRetvalV4I8
    12294U,	// UDIVi16ri
    12294U,	// UDIVi16rr
    10808U,	// UDIVi32ri
    10808U,	// UDIVi32rr
    12008U,	// UDIVi64ri
    12008U,	// UDIVi64rr
    12274U,	// UREMi16ri
    12274U,	// UREMi16rr
    10677U,	// UREMi32ri
    10677U,	// UREMi32rr
    11941U,	// UREMi64ri
    11941U,	// UREMi64rr
    113520950U,	// V2F32toF64
    113520823U,	// V2I16toI32
    113520950U,	// V2I32toI64
    3435409718U,	// V4I16toI64
    8248U,	// XORb16ri
    8248U,	// XORb16rr
    8271U,	// XORb1ri
    8271U,	// XORb1rr
    8204U,	// XORb32ri
    8204U,	// XORb32rr
    8226U,	// XORb64ri
    8226U,	// XORb64rr
    536881730U,	// cvta_const_no
    536882930U,	// cvta_const_no_64
    536881683U,	// cvta_const_yes
    536882883U,	// cvta_const_yes_64
    536881730U,	// cvta_global_no
    536882930U,	// cvta_global_no_64
    536881496U,	// cvta_global_yes
    536882760U,	// cvta_global_yes_64
    536881730U,	// cvta_local_no
    536882930U,	// cvta_local_no_64
    536881552U,	// cvta_local_yes
    536882816U,	// cvta_local_yes_64
    536881730U,	// cvta_shared_no
    536882930U,	// cvta_shared_no_64
    536881429U,	// cvta_shared_yes
    536882708U,	// cvta_shared_yes_64
    536881730U,	// cvta_to_const_no
    536882930U,	// cvta_to_const_no_64
    536881700U,	// cvta_to_const_yes
    536882900U,	// cvta_to_const_yes_64
    536881730U,	// cvta_to_global_no
    536882930U,	// cvta_to_global_no_64
    536881514U,	// cvta_to_global_yes
    536882778U,	// cvta_to_global_yes_64
    536881730U,	// cvta_to_local_no
    536882930U,	// cvta_to_local_no_64
    536881569U,	// cvta_to_local_yes
    536882833U,	// cvta_to_local_yes_64
    536881730U,	// cvta_to_shared_no
    536882930U,	// cvta_to_shared_no_64
    536881447U,	// cvta_to_shared_yes
    536882726U,	// cvta_to_shared_yes_64
    536882328U,	// nvvm_move_double
    536879973U,	// nvvm_move_float
    536882970U,	// nvvm_move_i16
    536879543U,	// nvvm_move_i32
    536881962U,	// nvvm_move_i64
    536881730U,	// nvvm_move_ptr32
    536882930U,	// nvvm_move_ptr64
    536881730U,	// nvvm_ptr_gen_to_param
    536882930U,	// nvvm_ptr_gen_to_param_64
    6795U,	// trapinst
    0U
  };

  static const uint16_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    0U,	// ADDCCCi32ri
    0U,	// ADDCCCi32rr
    0U,	// ADDCCi32ri
    0U,	// ADDCCi32rr
    0U,	// ADD_i1_ri
    0U,	// ADD_i1_rr
    0U,	// ADDi16ri
    0U,	// ADDi16rr
    0U,	// ADDi32ri
    0U,	// ADDi32rr
    0U,	// ADDi64ri
    0U,	// ADDi64rr
    0U,	// ANDb16ri
    0U,	// ANDb16rr
    0U,	// ANDb1ri
    0U,	// ANDb1rr
    0U,	// ANDb32ri
    0U,	// ANDb32rr
    0U,	// ANDb64ri
    0U,	// ANDb64rr
    0U,	// BITCONVERT_32_F2I
    0U,	// BITCONVERT_32_I2F
    0U,	// BITCONVERT_64_F2I
    0U,	// BITCONVERT_64_I2F
    0U,	// CALL
    0U,	// CALL_PROTOTYPE
    0U,	// CBranch
    0U,	// CBranchOther
    0U,	// CLZr32
    0U,	// CLZr64
    0U,	// COSF
    0U,	// CVT_INREG_s16_s8
    0U,	// CVT_INREG_s32_s16
    0U,	// CVT_INREG_s32_s8
    0U,	// CVT_INREG_s64_s16
    0U,	// CVT_INREG_s64_s32
    0U,	// CVT_INREG_s64_s8
    0U,	// CVT_f16_f16
    0U,	// CVT_f16_f32
    0U,	// CVT_f16_f64
    0U,	// CVT_f16_s16
    0U,	// CVT_f16_s32
    0U,	// CVT_f16_s64
    0U,	// CVT_f16_u16
    0U,	// CVT_f16_u32
    0U,	// CVT_f16_u64
    0U,	// CVT_f32_f16
    0U,	// CVT_f32_f32
    0U,	// CVT_f32_f64
    0U,	// CVT_f32_s16
    0U,	// CVT_f32_s32
    0U,	// CVT_f32_s64
    0U,	// CVT_f32_u16
    0U,	// CVT_f32_u32
    0U,	// CVT_f32_u64
    0U,	// CVT_f64_f16
    0U,	// CVT_f64_f32
    0U,	// CVT_f64_f64
    0U,	// CVT_f64_s16
    0U,	// CVT_f64_s32
    0U,	// CVT_f64_s64
    0U,	// CVT_f64_u16
    0U,	// CVT_f64_u32
    0U,	// CVT_f64_u64
    0U,	// CVT_s16_f16
    0U,	// CVT_s16_f32
    0U,	// CVT_s16_f64
    0U,	// CVT_s16_s16
    0U,	// CVT_s16_s32
    0U,	// CVT_s16_s64
    0U,	// CVT_s16_u16
    0U,	// CVT_s16_u32
    0U,	// CVT_s16_u64
    0U,	// CVT_s32_f16
    0U,	// CVT_s32_f32
    0U,	// CVT_s32_f64
    0U,	// CVT_s32_s16
    0U,	// CVT_s32_s32
    0U,	// CVT_s32_s64
    0U,	// CVT_s32_u16
    0U,	// CVT_s32_u32
    0U,	// CVT_s32_u64
    0U,	// CVT_s64_f16
    0U,	// CVT_s64_f32
    0U,	// CVT_s64_f64
    0U,	// CVT_s64_s16
    0U,	// CVT_s64_s32
    0U,	// CVT_s64_s64
    0U,	// CVT_s64_u16
    0U,	// CVT_s64_u32
    0U,	// CVT_s64_u64
    0U,	// CVT_u16_f16
    0U,	// CVT_u16_f32
    0U,	// CVT_u16_f64
    0U,	// CVT_u16_s16
    0U,	// CVT_u16_s32
    0U,	// CVT_u16_s64
    0U,	// CVT_u16_u16
    0U,	// CVT_u16_u32
    0U,	// CVT_u16_u64
    0U,	// CVT_u32_f16
    0U,	// CVT_u32_f32
    0U,	// CVT_u32_f64
    0U,	// CVT_u32_s16
    0U,	// CVT_u32_s32
    0U,	// CVT_u32_s64
    0U,	// CVT_u32_u16
    0U,	// CVT_u32_u32
    0U,	// CVT_u32_u64
    0U,	// CVT_u64_f16
    0U,	// CVT_u64_f32
    0U,	// CVT_u64_f64
    0U,	// CVT_u64_s16
    0U,	// CVT_u64_s32
    0U,	// CVT_u64_s64
    0U,	// CVT_u64_u16
    0U,	// CVT_u64_u32
    0U,	// CVT_u64_u64
    0U,	// CallArgBeginInst
    0U,	// CallArgEndInst0
    0U,	// CallArgEndInst1
    0U,	// CallArgF32
    0U,	// CallArgF64
    0U,	// CallArgI16
    0U,	// CallArgI32
    0U,	// CallArgI32imm
    0U,	// CallArgI64
    0U,	// CallArgParam
    0U,	// CallVoidInst
    0U,	// CallVoidInstReg
    0U,	// CallVoidInstReg64
    0U,	// Callseq_End
    0U,	// Callseq_Start
    0U,	// DeclareParamInst
    0U,	// DeclareRetMemInst
    0U,	// DeclareRetRegInst
    0U,	// DeclareRetScalarInst
    0U,	// DeclareScalarParamInst
    0U,	// DeclareScalarRegInst
    0U,	// F64toV2F32
    0U,	// FABSf32
    0U,	// FABSf32_ftz
    0U,	// FABSf64
    0U,	// FADD_rnf32ri
    0U,	// FADD_rnf32ri_ftz
    0U,	// FADD_rnf32rr
    0U,	// FADD_rnf32rr_ftz
    0U,	// FADD_rnf64ri
    0U,	// FADD_rnf64rr
    0U,	// FADDf32ri
    0U,	// FADDf32ri_ftz
    0U,	// FADDf32rr
    0U,	// FADDf32rr_ftz
    0U,	// FADDf64ri
    0U,	// FADDf64rr
    0U,	// FDIV321r
    0U,	// FDIV321r_approx
    0U,	// FDIV321r_approx_ftz
    0U,	// FDIV321r_ftz
    0U,	// FDIV321r_prec
    0U,	// FDIV321r_prec_ftz
    0U,	// FDIV32approxrr
    0U,	// FDIV32approxrr_ftz
    0U,	// FDIV32ri
    0U,	// FDIV32ri_ftz
    0U,	// FDIV32ri_prec
    0U,	// FDIV32ri_prec_ftz
    0U,	// FDIV32rr
    0U,	// FDIV32rr_ftz
    0U,	// FDIV32rr_prec
    0U,	// FDIV32rr_prec_ftz
    0U,	// FDIV641r
    0U,	// FDIV64ri
    0U,	// FDIV64rr
    2U,	// FMA32_ftzrii
    2U,	// FMA32_ftzrir
    2U,	// FMA32_ftzrri
    2U,	// FMA32_ftzrrr
    2U,	// FMA32_ftzrrr2
    2U,	// FMA32rii
    2U,	// FMA32rir
    2U,	// FMA32rri
    2U,	// FMA32rrr
    2U,	// FMA32rrr2
    2U,	// FMA64rii
    2U,	// FMA64rir
    2U,	// FMA64rri
    2U,	// FMA64rrr
    0U,	// FMOV32ri
    0U,	// FMOV32rr
    0U,	// FMOV64ri
    0U,	// FMOV64rr
    0U,	// FMUL_rnf32ri
    0U,	// FMUL_rnf32ri_ftz
    0U,	// FMUL_rnf32rr
    0U,	// FMUL_rnf32rr_ftz
    0U,	// FMUL_rnf64ri
    0U,	// FMUL_rnf64rr
    0U,	// FMULf32ri
    0U,	// FMULf32ri_ftz
    0U,	// FMULf32rr
    0U,	// FMULf32rr_ftz
    0U,	// FMULf64ri
    0U,	// FMULf64rr
    0U,	// FNEGf32
    0U,	// FNEGf32_ftz
    0U,	// FNEGf64
    0U,	// FSQRTf32
    0U,	// FSQRTf32_ftz
    0U,	// FSQRTf64
    0U,	// FSUB_rnf32ri
    0U,	// FSUB_rnf32ri_ftz
    0U,	// FSUB_rnf32rr
    0U,	// FSUB_rnf32rr_ftz
    0U,	// FSUB_rnf64ri
    0U,	// FSUB_rnf64rr
    0U,	// FSUBf32ri
    0U,	// FSUBf32ri_ftz
    0U,	// FSUBf32rr
    0U,	// FSUBf32rr_ftz
    0U,	// FSUBf64ri
    0U,	// FSUBf64rr
    0U,	// GOTO
    0U,	// I32toV2I16
    0U,	// I64toV2I32
    258U,	// I64toV4I16
    0U,	// IMOV16ri
    0U,	// IMOV16rr
    0U,	// IMOV1ri
    0U,	// IMOV1rr
    0U,	// IMOV32ri
    0U,	// IMOV32rr
    0U,	// IMOV64i
    0U,	// IMOV64rr
    0U,	// INEG16
    0U,	// INEG32
    0U,	// INEG64
    0U,	// INT_BARRIER0
    0U,	// INT_BARRIER0_AND
    0U,	// INT_BARRIER0_OR
    0U,	// INT_BARRIER0_POPC
    0U,	// INT_CUDA_SYNCTHREADS
    0U,	// INT_MEMBAR_CTA
    0U,	// INT_MEMBAR_GL
    0U,	// INT_MEMBAR_SYS
    0U,	// INT_NVVM_ABS_I
    0U,	// INT_NVVM_ABS_LL
    0U,	// INT_NVVM_ADD_RM_D
    0U,	// INT_NVVM_ADD_RM_F
    0U,	// INT_NVVM_ADD_RM_FTZ_F
    0U,	// INT_NVVM_ADD_RN_D
    0U,	// INT_NVVM_ADD_RN_F
    0U,	// INT_NVVM_ADD_RN_FTZ_F
    0U,	// INT_NVVM_ADD_RP_D
    0U,	// INT_NVVM_ADD_RP_F
    0U,	// INT_NVVM_ADD_RP_FTZ_F
    0U,	// INT_NVVM_ADD_RZ_D
    0U,	// INT_NVVM_ADD_RZ_F
    0U,	// INT_NVVM_ADD_RZ_FTZ_F
    0U,	// INT_NVVM_BITCAST_D2LL
    0U,	// INT_NVVM_BITCAST_F2I
    0U,	// INT_NVVM_BITCAST_I2F
    0U,	// INT_NVVM_BITCAST_LL2D
    0U,	// INT_NVVM_BREV32
    0U,	// INT_NVVM_BREV64
    0U,	// INT_NVVM_CLZ_I
    0U,	// INT_NVVM_CLZ_LL
    0U,	// INT_NVVM_COMPILER_ERROR_32
    0U,	// INT_NVVM_COMPILER_ERROR_64
    0U,	// INT_NVVM_COMPILER_WARN_32
    0U,	// INT_NVVM_COMPILER_WARN_64
    0U,	// INT_NVVM_COS_APPROX_F
    0U,	// INT_NVVM_COS_APPROX_FTZ_F
    0U,	// INT_NVVM_D2I_HI
    0U,	// INT_NVVM_D2I_LO
    0U,	// INT_NVVM_DIV_APPROX_F
    0U,	// INT_NVVM_DIV_APPROX_FTZ_F
    0U,	// INT_NVVM_DIV_RM_D
    0U,	// INT_NVVM_DIV_RM_F
    0U,	// INT_NVVM_DIV_RM_FTZ_F
    0U,	// INT_NVVM_DIV_RN_D
    0U,	// INT_NVVM_DIV_RN_F
    0U,	// INT_NVVM_DIV_RN_FTZ_F
    0U,	// INT_NVVM_DIV_RP_D
    0U,	// INT_NVVM_DIV_RP_F
    0U,	// INT_NVVM_DIV_RP_FTZ_F
    0U,	// INT_NVVM_DIV_RZ_D
    0U,	// INT_NVVM_DIV_RZ_F
    0U,	// INT_NVVM_DIV_RZ_FTZ_F
    0U,	// INT_NVVM_EX2_APPROX_D
    0U,	// INT_NVVM_EX2_APPROX_F
    0U,	// INT_NVVM_EX2_APPROX_FTZ_F
    0U,	// INT_NVVM_F2H_RN
    0U,	// INT_NVVM_F2H_RN_FTZ
    0U,	// INT_NVVM_FABS_D
    0U,	// INT_NVVM_FABS_F
    0U,	// INT_NVVM_FABS_FTZ_F
    0U,	// INT_NVVM_FMAX_D
    0U,	// INT_NVVM_FMAX_F
    0U,	// INT_NVVM_FMAX_FTZ_F
    2U,	// INT_NVVM_FMA_RM_D
    2U,	// INT_NVVM_FMA_RM_F
    2U,	// INT_NVVM_FMA_RM_FTZ_F
    2U,	// INT_NVVM_FMA_RN_D
    2U,	// INT_NVVM_FMA_RN_F
    2U,	// INT_NVVM_FMA_RN_FTZ_F
    2U,	// INT_NVVM_FMA_RP_D
    2U,	// INT_NVVM_FMA_RP_F
    2U,	// INT_NVVM_FMA_RP_FTZ_F
    2U,	// INT_NVVM_FMA_RZ_D
    2U,	// INT_NVVM_FMA_RZ_F
    2U,	// INT_NVVM_FMA_RZ_FTZ_F
    0U,	// INT_NVVM_FMIN_D
    0U,	// INT_NVVM_FMIN_F
    0U,	// INT_NVVM_FMIN_FTZ_F
    0U,	// INT_NVVM_H2F
    0U,	// INT_NVVM_LG2_APPROX_D
    0U,	// INT_NVVM_LG2_APPROX_F
    0U,	// INT_NVVM_LG2_APPROX_FTZ_F
    0U,	// INT_NVVM_LOHI_I2D
    0U,	// INT_NVVM_MAX_I
    0U,	// INT_NVVM_MAX_LL
    0U,	// INT_NVVM_MAX_UI
    0U,	// INT_NVVM_MAX_ULL
    0U,	// INT_NVVM_MIN_I
    0U,	// INT_NVVM_MIN_LL
    0U,	// INT_NVVM_MIN_UI
    0U,	// INT_NVVM_MIN_ULL
    0U,	// INT_NVVM_MUL24_I
    0U,	// INT_NVVM_MUL24_UI
    0U,	// INT_NVVM_MULHI_I
    0U,	// INT_NVVM_MULHI_LL
    0U,	// INT_NVVM_MULHI_UI
    0U,	// INT_NVVM_MULHI_ULL
    0U,	// INT_NVVM_MUL_RM_D
    0U,	// INT_NVVM_MUL_RM_F
    0U,	// INT_NVVM_MUL_RM_FTZ_F
    0U,	// INT_NVVM_MUL_RN_D
    0U,	// INT_NVVM_MUL_RN_F
    0U,	// INT_NVVM_MUL_RN_FTZ_F
    0U,	// INT_NVVM_MUL_RP_D
    0U,	// INT_NVVM_MUL_RP_F
    0U,	// INT_NVVM_MUL_RP_FTZ_F
    0U,	// INT_NVVM_MUL_RZ_D
    0U,	// INT_NVVM_MUL_RZ_F
    0U,	// INT_NVVM_MUL_RZ_FTZ_F
    0U,	// INT_NVVM_POPC_I
    0U,	// INT_NVVM_POPC_LL
    2U,	// INT_NVVM_PRMT
    0U,	// INT_NVVM_RCP_APPROX_FTZ_D
    0U,	// INT_NVVM_RCP_RM_D
    0U,	// INT_NVVM_RCP_RM_F
    0U,	// INT_NVVM_RCP_RM_FTZ_F
    0U,	// INT_NVVM_RCP_RN_D
    0U,	// INT_NVVM_RCP_RN_F
    0U,	// INT_NVVM_RCP_RN_FTZ_F
    0U,	// INT_NVVM_RCP_RP_D
    0U,	// INT_NVVM_RCP_RP_F
    0U,	// INT_NVVM_RCP_RP_FTZ_F
    0U,	// INT_NVVM_RCP_RZ_D
    0U,	// INT_NVVM_RCP_RZ_F
    0U,	// INT_NVVM_RCP_RZ_FTZ_F
    0U,	// INT_NVVM_RSQRT_APPROX_D
    0U,	// INT_NVVM_RSQRT_APPROX_F
    0U,	// INT_NVVM_RSQRT_APPROX_FTZ_F
    2U,	// INT_NVVM_SAD_I
    2U,	// INT_NVVM_SAD_UI
    0U,	// INT_NVVM_SIN_APPROX_F
    0U,	// INT_NVVM_SIN_APPROX_FTZ_F
    0U,	// INT_NVVM_SQRT_APPROX_F
    0U,	// INT_NVVM_SQRT_APPROX_FTZ_F
    0U,	// INT_NVVM_SQRT_RM_D
    0U,	// INT_NVVM_SQRT_RM_F
    0U,	// INT_NVVM_SQRT_RM_FTZ_F
    0U,	// INT_NVVM_SQRT_RN_D
    0U,	// INT_NVVM_SQRT_RN_F
    0U,	// INT_NVVM_SQRT_RN_FTZ_F
    0U,	// INT_NVVM_SQRT_RP_D
    0U,	// INT_NVVM_SQRT_RP_F
    0U,	// INT_NVVM_SQRT_RP_FTZ_F
    0U,	// INT_NVVM_SQRT_RZ_D
    0U,	// INT_NVVM_SQRT_RZ_F
    0U,	// INT_NVVM_SQRT_RZ_FTZ_F
    36U,	// INT_PTX_ATOM_ADD_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_ADD_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_ADD_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_ADD_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_ADD_GEN_32p32imm
    36U,	// INT_PTX_ATOM_ADD_GEN_32p32reg
    36U,	// INT_PTX_ATOM_ADD_GEN_32p64imm
    36U,	// INT_PTX_ATOM_ADD_GEN_32p64reg
    36U,	// INT_PTX_ATOM_ADD_GEN_64_USE_Gp32imm
    36U,	// INT_PTX_ATOM_ADD_GEN_64_USE_Gp32reg
    36U,	// INT_PTX_ATOM_ADD_GEN_64_USE_Gp64imm
    36U,	// INT_PTX_ATOM_ADD_GEN_64_USE_Gp64reg
    36U,	// INT_PTX_ATOM_ADD_GEN_64p32imm
    36U,	// INT_PTX_ATOM_ADD_GEN_64p32reg
    36U,	// INT_PTX_ATOM_ADD_GEN_64p64imm
    36U,	// INT_PTX_ATOM_ADD_GEN_64p64reg
    36U,	// INT_PTX_ATOM_ADD_GEN_F32p32imm
    36U,	// INT_PTX_ATOM_ADD_GEN_F32p32reg
    36U,	// INT_PTX_ATOM_ADD_GEN_F32p64imm
    36U,	// INT_PTX_ATOM_ADD_GEN_F32p64reg
    36U,	// INT_PTX_ATOM_ADD_G_32p32imm
    36U,	// INT_PTX_ATOM_ADD_G_32p32reg
    36U,	// INT_PTX_ATOM_ADD_G_32p64imm
    36U,	// INT_PTX_ATOM_ADD_G_32p64reg
    36U,	// INT_PTX_ATOM_ADD_G_64p32imm
    36U,	// INT_PTX_ATOM_ADD_G_64p32reg
    36U,	// INT_PTX_ATOM_ADD_G_64p64imm
    36U,	// INT_PTX_ATOM_ADD_G_64p64reg
    36U,	// INT_PTX_ATOM_ADD_G_F32p32imm
    36U,	// INT_PTX_ATOM_ADD_G_F32p32reg
    36U,	// INT_PTX_ATOM_ADD_G_F32p64imm
    36U,	// INT_PTX_ATOM_ADD_G_F32p64reg
    36U,	// INT_PTX_ATOM_ADD_S_32p32imm
    36U,	// INT_PTX_ATOM_ADD_S_32p32reg
    36U,	// INT_PTX_ATOM_ADD_S_32p64imm
    36U,	// INT_PTX_ATOM_ADD_S_32p64reg
    36U,	// INT_PTX_ATOM_ADD_S_64p32imm
    36U,	// INT_PTX_ATOM_ADD_S_64p32reg
    36U,	// INT_PTX_ATOM_ADD_S_64p64imm
    36U,	// INT_PTX_ATOM_ADD_S_64p64reg
    36U,	// INT_PTX_ATOM_ADD_S_F32p32imm
    36U,	// INT_PTX_ATOM_ADD_S_F32p32reg
    36U,	// INT_PTX_ATOM_ADD_S_F32p64imm
    36U,	// INT_PTX_ATOM_ADD_S_F32p64reg
    36U,	// INT_PTX_ATOM_AND_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_AND_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_AND_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_AND_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_AND_GEN_32p32imm
    36U,	// INT_PTX_ATOM_AND_GEN_32p32reg
    36U,	// INT_PTX_ATOM_AND_GEN_32p64imm
    36U,	// INT_PTX_ATOM_AND_GEN_32p64reg
    36U,	// INT_PTX_ATOM_AND_G_32p32imm
    36U,	// INT_PTX_ATOM_AND_G_32p32reg
    36U,	// INT_PTX_ATOM_AND_G_32p64imm
    36U,	// INT_PTX_ATOM_AND_G_32p64reg
    36U,	// INT_PTX_ATOM_AND_S_32p32imm
    36U,	// INT_PTX_ATOM_AND_S_32p32reg
    36U,	// INT_PTX_ATOM_AND_S_32p64imm
    36U,	// INT_PTX_ATOM_AND_S_32p64reg
    68U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp32imm1
    68U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp32imm2
    68U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp32imm3
    68U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp32reg
    68U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp64imm1
    68U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp64imm2
    68U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp64imm3
    68U,	// INT_PTX_ATOM_CAS_GEN_32_USE_Gp64reg
    68U,	// INT_PTX_ATOM_CAS_GEN_32p32imm1
    68U,	// INT_PTX_ATOM_CAS_GEN_32p32imm2
    68U,	// INT_PTX_ATOM_CAS_GEN_32p32imm3
    68U,	// INT_PTX_ATOM_CAS_GEN_32p32reg
    68U,	// INT_PTX_ATOM_CAS_GEN_32p64imm1
    68U,	// INT_PTX_ATOM_CAS_GEN_32p64imm2
    68U,	// INT_PTX_ATOM_CAS_GEN_32p64imm3
    68U,	// INT_PTX_ATOM_CAS_GEN_32p64reg
    68U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp32imm1
    68U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp32imm2
    68U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp32imm3
    68U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp32reg
    68U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp64imm1
    68U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp64imm2
    68U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp64imm3
    68U,	// INT_PTX_ATOM_CAS_GEN_64_USE_Gp64reg
    68U,	// INT_PTX_ATOM_CAS_GEN_64p32imm1
    68U,	// INT_PTX_ATOM_CAS_GEN_64p32imm2
    68U,	// INT_PTX_ATOM_CAS_GEN_64p32imm3
    68U,	// INT_PTX_ATOM_CAS_GEN_64p32reg
    68U,	// INT_PTX_ATOM_CAS_GEN_64p64imm1
    68U,	// INT_PTX_ATOM_CAS_GEN_64p64imm2
    68U,	// INT_PTX_ATOM_CAS_GEN_64p64imm3
    68U,	// INT_PTX_ATOM_CAS_GEN_64p64reg
    68U,	// INT_PTX_ATOM_CAS_G_32p32imm1
    68U,	// INT_PTX_ATOM_CAS_G_32p32imm2
    68U,	// INT_PTX_ATOM_CAS_G_32p32imm3
    68U,	// INT_PTX_ATOM_CAS_G_32p32reg
    68U,	// INT_PTX_ATOM_CAS_G_32p64imm1
    68U,	// INT_PTX_ATOM_CAS_G_32p64imm2
    68U,	// INT_PTX_ATOM_CAS_G_32p64imm3
    68U,	// INT_PTX_ATOM_CAS_G_32p64reg
    68U,	// INT_PTX_ATOM_CAS_G_64p32imm1
    68U,	// INT_PTX_ATOM_CAS_G_64p32imm2
    68U,	// INT_PTX_ATOM_CAS_G_64p32imm3
    68U,	// INT_PTX_ATOM_CAS_G_64p32reg
    68U,	// INT_PTX_ATOM_CAS_G_64p64imm1
    68U,	// INT_PTX_ATOM_CAS_G_64p64imm2
    68U,	// INT_PTX_ATOM_CAS_G_64p64imm3
    68U,	// INT_PTX_ATOM_CAS_G_64p64reg
    68U,	// INT_PTX_ATOM_CAS_S_32p32imm1
    68U,	// INT_PTX_ATOM_CAS_S_32p32imm2
    68U,	// INT_PTX_ATOM_CAS_S_32p32imm3
    68U,	// INT_PTX_ATOM_CAS_S_32p32reg
    68U,	// INT_PTX_ATOM_CAS_S_32p64imm1
    68U,	// INT_PTX_ATOM_CAS_S_32p64imm2
    68U,	// INT_PTX_ATOM_CAS_S_32p64imm3
    68U,	// INT_PTX_ATOM_CAS_S_32p64reg
    68U,	// INT_PTX_ATOM_CAS_S_64p32imm1
    68U,	// INT_PTX_ATOM_CAS_S_64p32imm2
    68U,	// INT_PTX_ATOM_CAS_S_64p32imm3
    68U,	// INT_PTX_ATOM_CAS_S_64p32reg
    68U,	// INT_PTX_ATOM_CAS_S_64p64imm1
    68U,	// INT_PTX_ATOM_CAS_S_64p64imm2
    68U,	// INT_PTX_ATOM_CAS_S_64p64imm3
    68U,	// INT_PTX_ATOM_CAS_S_64p64reg
    36U,	// INT_PTX_ATOM_DEC_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_DEC_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_DEC_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_DEC_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_DEC_GEN_32p32imm
    36U,	// INT_PTX_ATOM_DEC_GEN_32p32reg
    36U,	// INT_PTX_ATOM_DEC_GEN_32p64imm
    36U,	// INT_PTX_ATOM_DEC_GEN_32p64reg
    36U,	// INT_PTX_ATOM_DEC_G_32p32imm
    36U,	// INT_PTX_ATOM_DEC_G_32p32reg
    36U,	// INT_PTX_ATOM_DEC_G_32p64imm
    36U,	// INT_PTX_ATOM_DEC_G_32p64reg
    36U,	// INT_PTX_ATOM_DEC_S_32p32imm
    36U,	// INT_PTX_ATOM_DEC_S_32p32reg
    36U,	// INT_PTX_ATOM_DEC_S_32p64imm
    36U,	// INT_PTX_ATOM_DEC_S_32p64reg
    36U,	// INT_PTX_ATOM_INC_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_INC_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_INC_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_INC_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_INC_GEN_32p32imm
    36U,	// INT_PTX_ATOM_INC_GEN_32p32reg
    36U,	// INT_PTX_ATOM_INC_GEN_32p64imm
    36U,	// INT_PTX_ATOM_INC_GEN_32p64reg
    36U,	// INT_PTX_ATOM_INC_G_32p32imm
    36U,	// INT_PTX_ATOM_INC_G_32p32reg
    36U,	// INT_PTX_ATOM_INC_G_32p64imm
    36U,	// INT_PTX_ATOM_INC_G_32p64reg
    36U,	// INT_PTX_ATOM_INC_S_32p32imm
    36U,	// INT_PTX_ATOM_INC_S_32p32reg
    36U,	// INT_PTX_ATOM_INC_S_32p64imm
    36U,	// INT_PTX_ATOM_INC_S_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_MAX_GEN_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_MAX_G_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_MAX_G_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_MAX_G_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_MAX_G_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_MAX_S_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_MAX_S_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_MAX_S_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_MAX_S_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_MIN_GEN_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_MIN_G_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_MIN_G_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_MIN_G_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_MIN_G_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_MIN_S_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_MIN_S_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_MIN_S_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_MIN_S_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_UMAX_GEN_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_UMAX_G_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_UMAX_G_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_UMAX_G_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_UMAX_G_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_UMAX_S_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_UMAX_S_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_UMAX_S_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_UMAX_S_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_UMIN_GEN_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_UMIN_G_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_UMIN_G_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_UMIN_G_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_UMIN_G_32p64reg
    36U,	// INT_PTX_ATOM_LOAD_UMIN_S_32p32imm
    36U,	// INT_PTX_ATOM_LOAD_UMIN_S_32p32reg
    36U,	// INT_PTX_ATOM_LOAD_UMIN_S_32p64imm
    36U,	// INT_PTX_ATOM_LOAD_UMIN_S_32p64reg
    36U,	// INT_PTX_ATOM_OR_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_OR_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_OR_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_OR_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_OR_GEN_32p32imm
    36U,	// INT_PTX_ATOM_OR_GEN_32p32reg
    36U,	// INT_PTX_ATOM_OR_GEN_32p64imm
    36U,	// INT_PTX_ATOM_OR_GEN_32p64reg
    36U,	// INT_PTX_ATOM_OR_G_32p32imm
    36U,	// INT_PTX_ATOM_OR_G_32p32reg
    36U,	// INT_PTX_ATOM_OR_G_32p64imm
    36U,	// INT_PTX_ATOM_OR_G_32p64reg
    36U,	// INT_PTX_ATOM_OR_S_32p32imm
    36U,	// INT_PTX_ATOM_OR_S_32p32reg
    36U,	// INT_PTX_ATOM_OR_S_32p64imm
    36U,	// INT_PTX_ATOM_OR_S_32p64reg
    0U,	// INT_PTX_ATOM_SUB_GEN_32_USE_Gp32reg
    0U,	// INT_PTX_ATOM_SUB_GEN_32_USE_Gp64reg
    0U,	// INT_PTX_ATOM_SUB_GEN_32p32reg
    0U,	// INT_PTX_ATOM_SUB_GEN_32p64reg
    0U,	// INT_PTX_ATOM_SUB_GEN_64_USE_Gp32reg
    0U,	// INT_PTX_ATOM_SUB_GEN_64_USE_Gp64reg
    0U,	// INT_PTX_ATOM_SUB_GEN_64p32reg
    0U,	// INT_PTX_ATOM_SUB_GEN_64p64reg
    0U,	// INT_PTX_ATOM_SUB_G_32p32reg
    0U,	// INT_PTX_ATOM_SUB_G_32p64reg
    0U,	// INT_PTX_ATOM_SUB_G_64p32reg
    0U,	// INT_PTX_ATOM_SUB_G_64p64reg
    0U,	// INT_PTX_ATOM_SUB_S_32p32reg
    0U,	// INT_PTX_ATOM_SUB_S_32p64reg
    0U,	// INT_PTX_ATOM_SUB_S_64p32reg
    0U,	// INT_PTX_ATOM_SUB_S_64p64reg
    36U,	// INT_PTX_ATOM_SWAP_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_SWAP_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_SWAP_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_SWAP_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_SWAP_GEN_32p32imm
    36U,	// INT_PTX_ATOM_SWAP_GEN_32p32reg
    36U,	// INT_PTX_ATOM_SWAP_GEN_32p64imm
    36U,	// INT_PTX_ATOM_SWAP_GEN_32p64reg
    36U,	// INT_PTX_ATOM_SWAP_GEN_64_USE_Gp32imm
    36U,	// INT_PTX_ATOM_SWAP_GEN_64_USE_Gp32reg
    36U,	// INT_PTX_ATOM_SWAP_GEN_64_USE_Gp64imm
    36U,	// INT_PTX_ATOM_SWAP_GEN_64_USE_Gp64reg
    36U,	// INT_PTX_ATOM_SWAP_GEN_64p32imm
    36U,	// INT_PTX_ATOM_SWAP_GEN_64p32reg
    36U,	// INT_PTX_ATOM_SWAP_GEN_64p64imm
    36U,	// INT_PTX_ATOM_SWAP_GEN_64p64reg
    36U,	// INT_PTX_ATOM_SWAP_G_32p32imm
    36U,	// INT_PTX_ATOM_SWAP_G_32p32reg
    36U,	// INT_PTX_ATOM_SWAP_G_32p64imm
    36U,	// INT_PTX_ATOM_SWAP_G_32p64reg
    36U,	// INT_PTX_ATOM_SWAP_G_64p32imm
    36U,	// INT_PTX_ATOM_SWAP_G_64p32reg
    36U,	// INT_PTX_ATOM_SWAP_G_64p64imm
    36U,	// INT_PTX_ATOM_SWAP_G_64p64reg
    36U,	// INT_PTX_ATOM_SWAP_S_32p32imm
    36U,	// INT_PTX_ATOM_SWAP_S_32p32reg
    36U,	// INT_PTX_ATOM_SWAP_S_32p64imm
    36U,	// INT_PTX_ATOM_SWAP_S_32p64reg
    36U,	// INT_PTX_ATOM_SWAP_S_64p32imm
    36U,	// INT_PTX_ATOM_SWAP_S_64p32reg
    36U,	// INT_PTX_ATOM_SWAP_S_64p64imm
    36U,	// INT_PTX_ATOM_SWAP_S_64p64reg
    36U,	// INT_PTX_ATOM_XOR_GEN_32_USE_Gp32imm
    36U,	// INT_PTX_ATOM_XOR_GEN_32_USE_Gp32reg
    36U,	// INT_PTX_ATOM_XOR_GEN_32_USE_Gp64imm
    36U,	// INT_PTX_ATOM_XOR_GEN_32_USE_Gp64reg
    36U,	// INT_PTX_ATOM_XOR_GEN_32p32imm
    36U,	// INT_PTX_ATOM_XOR_GEN_32p32reg
    36U,	// INT_PTX_ATOM_XOR_GEN_32p64imm
    36U,	// INT_PTX_ATOM_XOR_GEN_32p64reg
    36U,	// INT_PTX_ATOM_XOR_G_32p32imm
    36U,	// INT_PTX_ATOM_XOR_G_32p32reg
    36U,	// INT_PTX_ATOM_XOR_G_32p64imm
    36U,	// INT_PTX_ATOM_XOR_G_32p64reg
    36U,	// INT_PTX_ATOM_XOR_S_32p32imm
    36U,	// INT_PTX_ATOM_XOR_S_32p32reg
    36U,	// INT_PTX_ATOM_XOR_S_32p64imm
    36U,	// INT_PTX_ATOM_XOR_S_32p64reg
    0U,	// INT_PTX_LDG_GLOBAL_f32areg
    0U,	// INT_PTX_LDG_GLOBAL_f32areg64
    0U,	// INT_PTX_LDG_GLOBAL_f32ari
    0U,	// INT_PTX_LDG_GLOBAL_f32ari64
    0U,	// INT_PTX_LDG_GLOBAL_f32avar
    0U,	// INT_PTX_LDG_GLOBAL_f64areg
    0U,	// INT_PTX_LDG_GLOBAL_f64areg64
    0U,	// INT_PTX_LDG_GLOBAL_f64ari
    0U,	// INT_PTX_LDG_GLOBAL_f64ari64
    0U,	// INT_PTX_LDG_GLOBAL_f64avar
    0U,	// INT_PTX_LDG_GLOBAL_i16areg
    0U,	// INT_PTX_LDG_GLOBAL_i16areg64
    0U,	// INT_PTX_LDG_GLOBAL_i16ari
    0U,	// INT_PTX_LDG_GLOBAL_i16ari64
    0U,	// INT_PTX_LDG_GLOBAL_i16avar
    0U,	// INT_PTX_LDG_GLOBAL_i32areg
    0U,	// INT_PTX_LDG_GLOBAL_i32areg64
    0U,	// INT_PTX_LDG_GLOBAL_i32ari
    0U,	// INT_PTX_LDG_GLOBAL_i32ari64
    0U,	// INT_PTX_LDG_GLOBAL_i32avar
    0U,	// INT_PTX_LDG_GLOBAL_i64areg
    0U,	// INT_PTX_LDG_GLOBAL_i64areg64
    0U,	// INT_PTX_LDG_GLOBAL_i64ari
    0U,	// INT_PTX_LDG_GLOBAL_i64ari64
    0U,	// INT_PTX_LDG_GLOBAL_i64avar
    0U,	// INT_PTX_LDG_GLOBAL_i8areg
    0U,	// INT_PTX_LDG_GLOBAL_i8areg64
    0U,	// INT_PTX_LDG_GLOBAL_i8ari
    0U,	// INT_PTX_LDG_GLOBAL_i8ari64
    0U,	// INT_PTX_LDG_GLOBAL_i8avar
    0U,	// INT_PTX_LDG_GLOBAL_p32areg
    0U,	// INT_PTX_LDG_GLOBAL_p32areg64
    0U,	// INT_PTX_LDG_GLOBAL_p32ari
    0U,	// INT_PTX_LDG_GLOBAL_p32ari64
    0U,	// INT_PTX_LDG_GLOBAL_p32avar
    0U,	// INT_PTX_LDG_GLOBAL_p64areg
    0U,	// INT_PTX_LDG_GLOBAL_p64areg64
    0U,	// INT_PTX_LDG_GLOBAL_p64ari
    0U,	// INT_PTX_LDG_GLOBAL_p64ari64
    0U,	// INT_PTX_LDG_GLOBAL_p64avar
    100U,	// INT_PTX_LDG_G_v2f32_ELE_areg32
    100U,	// INT_PTX_LDG_G_v2f32_ELE_areg64
    6U,	// INT_PTX_LDG_G_v2f32_ELE_ari32
    6U,	// INT_PTX_LDG_G_v2f32_ELE_ari64
    100U,	// INT_PTX_LDG_G_v2f32_ELE_avar
    100U,	// INT_PTX_LDG_G_v2f64_ELE_areg32
    100U,	// INT_PTX_LDG_G_v2f64_ELE_areg64
    6U,	// INT_PTX_LDG_G_v2f64_ELE_ari32
    6U,	// INT_PTX_LDG_G_v2f64_ELE_ari64
    100U,	// INT_PTX_LDG_G_v2f64_ELE_avar
    100U,	// INT_PTX_LDG_G_v2i16_ELE_areg32
    100U,	// INT_PTX_LDG_G_v2i16_ELE_areg64
    6U,	// INT_PTX_LDG_G_v2i16_ELE_ari32
    6U,	// INT_PTX_LDG_G_v2i16_ELE_ari64
    100U,	// INT_PTX_LDG_G_v2i16_ELE_avar
    100U,	// INT_PTX_LDG_G_v2i32_ELE_areg32
    100U,	// INT_PTX_LDG_G_v2i32_ELE_areg64
    6U,	// INT_PTX_LDG_G_v2i32_ELE_ari32
    6U,	// INT_PTX_LDG_G_v2i32_ELE_ari64
    100U,	// INT_PTX_LDG_G_v2i32_ELE_avar
    100U,	// INT_PTX_LDG_G_v2i64_ELE_areg32
    100U,	// INT_PTX_LDG_G_v2i64_ELE_areg64
    6U,	// INT_PTX_LDG_G_v2i64_ELE_ari32
    6U,	// INT_PTX_LDG_G_v2i64_ELE_ari64
    100U,	// INT_PTX_LDG_G_v2i64_ELE_avar
    100U,	// INT_PTX_LDG_G_v2i8_ELE_areg32
    100U,	// INT_PTX_LDG_G_v2i8_ELE_areg64
    6U,	// INT_PTX_LDG_G_v2i8_ELE_ari32
    6U,	// INT_PTX_LDG_G_v2i8_ELE_ari64
    100U,	// INT_PTX_LDG_G_v2i8_ELE_avar
    514U,	// INT_PTX_LDG_G_v4f32_ELE_areg32
    514U,	// INT_PTX_LDG_G_v4f32_ELE_areg64
    1538U,	// INT_PTX_LDG_G_v4f32_ELE_ari32
    1538U,	// INT_PTX_LDG_G_v4f32_ELE_ari64
    514U,	// INT_PTX_LDG_G_v4f32_ELE_avar
    514U,	// INT_PTX_LDG_G_v4i16_ELE_areg32
    514U,	// INT_PTX_LDG_G_v4i16_ELE_areg64
    1538U,	// INT_PTX_LDG_G_v4i16_ELE_ari32
    1538U,	// INT_PTX_LDG_G_v4i16_ELE_ari64
    514U,	// INT_PTX_LDG_G_v4i16_ELE_avar
    514U,	// INT_PTX_LDG_G_v4i32_ELE_areg32
    514U,	// INT_PTX_LDG_G_v4i32_ELE_areg64
    1538U,	// INT_PTX_LDG_G_v4i32_ELE_ari32
    1538U,	// INT_PTX_LDG_G_v4i32_ELE_ari64
    514U,	// INT_PTX_LDG_G_v4i32_ELE_avar
    514U,	// INT_PTX_LDG_G_v4i8_ELE_areg32
    514U,	// INT_PTX_LDG_G_v4i8_ELE_areg64
    1538U,	// INT_PTX_LDG_G_v4i8_ELE_ari32
    1538U,	// INT_PTX_LDG_G_v4i8_ELE_ari64
    514U,	// INT_PTX_LDG_G_v4i8_ELE_avar
    0U,	// INT_PTX_LDU_GLOBAL_f32areg
    0U,	// INT_PTX_LDU_GLOBAL_f32areg64
    0U,	// INT_PTX_LDU_GLOBAL_f32ari
    0U,	// INT_PTX_LDU_GLOBAL_f32ari64
    0U,	// INT_PTX_LDU_GLOBAL_f32avar
    0U,	// INT_PTX_LDU_GLOBAL_f64areg
    0U,	// INT_PTX_LDU_GLOBAL_f64areg64
    0U,	// INT_PTX_LDU_GLOBAL_f64ari
    0U,	// INT_PTX_LDU_GLOBAL_f64ari64
    0U,	// INT_PTX_LDU_GLOBAL_f64avar
    0U,	// INT_PTX_LDU_GLOBAL_i16areg
    0U,	// INT_PTX_LDU_GLOBAL_i16areg64
    0U,	// INT_PTX_LDU_GLOBAL_i16ari
    0U,	// INT_PTX_LDU_GLOBAL_i16ari64
    0U,	// INT_PTX_LDU_GLOBAL_i16avar
    0U,	// INT_PTX_LDU_GLOBAL_i32areg
    0U,	// INT_PTX_LDU_GLOBAL_i32areg64
    0U,	// INT_PTX_LDU_GLOBAL_i32ari
    0U,	// INT_PTX_LDU_GLOBAL_i32ari64
    0U,	// INT_PTX_LDU_GLOBAL_i32avar
    0U,	// INT_PTX_LDU_GLOBAL_i64areg
    0U,	// INT_PTX_LDU_GLOBAL_i64areg64
    0U,	// INT_PTX_LDU_GLOBAL_i64ari
    0U,	// INT_PTX_LDU_GLOBAL_i64ari64
    0U,	// INT_PTX_LDU_GLOBAL_i64avar
    0U,	// INT_PTX_LDU_GLOBAL_i8areg
    0U,	// INT_PTX_LDU_GLOBAL_i8areg64
    0U,	// INT_PTX_LDU_GLOBAL_i8ari
    0U,	// INT_PTX_LDU_GLOBAL_i8ari64
    0U,	// INT_PTX_LDU_GLOBAL_i8avar
    0U,	// INT_PTX_LDU_GLOBAL_p32areg
    0U,	// INT_PTX_LDU_GLOBAL_p32areg64
    0U,	// INT_PTX_LDU_GLOBAL_p32ari
    0U,	// INT_PTX_LDU_GLOBAL_p32ari64
    0U,	// INT_PTX_LDU_GLOBAL_p32avar
    0U,	// INT_PTX_LDU_GLOBAL_p64areg
    0U,	// INT_PTX_LDU_GLOBAL_p64areg64
    0U,	// INT_PTX_LDU_GLOBAL_p64ari
    0U,	// INT_PTX_LDU_GLOBAL_p64ari64
    0U,	// INT_PTX_LDU_GLOBAL_p64avar
    100U,	// INT_PTX_LDU_G_v2f32_ELE_areg32
    100U,	// INT_PTX_LDU_G_v2f32_ELE_areg64
    6U,	// INT_PTX_LDU_G_v2f32_ELE_ari32
    6U,	// INT_PTX_LDU_G_v2f32_ELE_ari64
    100U,	// INT_PTX_LDU_G_v2f32_ELE_avar
    100U,	// INT_PTX_LDU_G_v2f64_ELE_areg32
    100U,	// INT_PTX_LDU_G_v2f64_ELE_areg64
    6U,	// INT_PTX_LDU_G_v2f64_ELE_ari32
    6U,	// INT_PTX_LDU_G_v2f64_ELE_ari64
    100U,	// INT_PTX_LDU_G_v2f64_ELE_avar
    100U,	// INT_PTX_LDU_G_v2i16_ELE_areg32
    100U,	// INT_PTX_LDU_G_v2i16_ELE_areg64
    6U,	// INT_PTX_LDU_G_v2i16_ELE_ari32
    6U,	// INT_PTX_LDU_G_v2i16_ELE_ari64
    100U,	// INT_PTX_LDU_G_v2i16_ELE_avar
    100U,	// INT_PTX_LDU_G_v2i32_ELE_areg32
    100U,	// INT_PTX_LDU_G_v2i32_ELE_areg64
    6U,	// INT_PTX_LDU_G_v2i32_ELE_ari32
    6U,	// INT_PTX_LDU_G_v2i32_ELE_ari64
    100U,	// INT_PTX_LDU_G_v2i32_ELE_avar
    100U,	// INT_PTX_LDU_G_v2i64_ELE_areg32
    100U,	// INT_PTX_LDU_G_v2i64_ELE_areg64
    6U,	// INT_PTX_LDU_G_v2i64_ELE_ari32
    6U,	// INT_PTX_LDU_G_v2i64_ELE_ari64
    100U,	// INT_PTX_LDU_G_v2i64_ELE_avar
    100U,	// INT_PTX_LDU_G_v2i8_ELE_areg32
    100U,	// INT_PTX_LDU_G_v2i8_ELE_areg64
    6U,	// INT_PTX_LDU_G_v2i8_ELE_ari32
    6U,	// INT_PTX_LDU_G_v2i8_ELE_ari64
    100U,	// INT_PTX_LDU_G_v2i8_ELE_avar
    514U,	// INT_PTX_LDU_G_v4f32_ELE_areg32
    514U,	// INT_PTX_LDU_G_v4f32_ELE_areg64
    1538U,	// INT_PTX_LDU_G_v4f32_ELE_ari32
    1538U,	// INT_PTX_LDU_G_v4f32_ELE_ari64
    514U,	// INT_PTX_LDU_G_v4f32_ELE_avar
    514U,	// INT_PTX_LDU_G_v4i16_ELE_areg32
    514U,	// INT_PTX_LDU_G_v4i16_ELE_areg64
    1538U,	// INT_PTX_LDU_G_v4i16_ELE_ari32
    1538U,	// INT_PTX_LDU_G_v4i16_ELE_ari64
    514U,	// INT_PTX_LDU_G_v4i16_ELE_avar
    514U,	// INT_PTX_LDU_G_v4i32_ELE_areg32
    514U,	// INT_PTX_LDU_G_v4i32_ELE_areg64
    1538U,	// INT_PTX_LDU_G_v4i32_ELE_ari32
    1538U,	// INT_PTX_LDU_G_v4i32_ELE_ari64
    514U,	// INT_PTX_LDU_G_v4i32_ELE_avar
    514U,	// INT_PTX_LDU_G_v4i8_ELE_areg32
    514U,	// INT_PTX_LDU_G_v4i8_ELE_areg64
    1538U,	// INT_PTX_LDU_G_v4i8_ELE_ari32
    1538U,	// INT_PTX_LDU_G_v4i8_ELE_ari64
    514U,	// INT_PTX_LDU_G_v4i8_ELE_avar
    0U,	// INT_PTX_SREG_CTAID_X
    0U,	// INT_PTX_SREG_CTAID_Y
    0U,	// INT_PTX_SREG_CTAID_Z
    0U,	// INT_PTX_SREG_NCTAID_X
    0U,	// INT_PTX_SREG_NCTAID_Y
    0U,	// INT_PTX_SREG_NCTAID_Z
    0U,	// INT_PTX_SREG_NTID_X
    0U,	// INT_PTX_SREG_NTID_Y
    0U,	// INT_PTX_SREG_NTID_Z
    0U,	// INT_PTX_SREG_TID_X
    0U,	// INT_PTX_SREG_TID_Y
    0U,	// INT_PTX_SREG_TID_Z
    0U,	// INT_PTX_SREG_WARPSIZE
    0U,	// LDV_f32_v2_areg
    0U,	// LDV_f32_v2_areg_64
    104U,	// LDV_f32_v2_ari
    104U,	// LDV_f32_v2_ari_64
    104U,	// LDV_f32_v2_asi
    0U,	// LDV_f32_v2_avar
    106U,	// LDV_f32_v4_areg
    106U,	// LDV_f32_v4_areg_64
    138U,	// LDV_f32_v4_ari
    138U,	// LDV_f32_v4_ari_64
    138U,	// LDV_f32_v4_asi
    106U,	// LDV_f32_v4_avar
    0U,	// LDV_f64_v2_areg
    0U,	// LDV_f64_v2_areg_64
    104U,	// LDV_f64_v2_ari
    104U,	// LDV_f64_v2_ari_64
    104U,	// LDV_f64_v2_asi
    0U,	// LDV_f64_v2_avar
    106U,	// LDV_f64_v4_areg
    106U,	// LDV_f64_v4_areg_64
    138U,	// LDV_f64_v4_ari
    138U,	// LDV_f64_v4_ari_64
    138U,	// LDV_f64_v4_asi
    106U,	// LDV_f64_v4_avar
    0U,	// LDV_i16_v2_areg
    0U,	// LDV_i16_v2_areg_64
    104U,	// LDV_i16_v2_ari
    104U,	// LDV_i16_v2_ari_64
    104U,	// LDV_i16_v2_asi
    0U,	// LDV_i16_v2_avar
    106U,	// LDV_i16_v4_areg
    106U,	// LDV_i16_v4_areg_64
    138U,	// LDV_i16_v4_ari
    138U,	// LDV_i16_v4_ari_64
    138U,	// LDV_i16_v4_asi
    106U,	// LDV_i16_v4_avar
    0U,	// LDV_i32_v2_areg
    0U,	// LDV_i32_v2_areg_64
    104U,	// LDV_i32_v2_ari
    104U,	// LDV_i32_v2_ari_64
    104U,	// LDV_i32_v2_asi
    0U,	// LDV_i32_v2_avar
    106U,	// LDV_i32_v4_areg
    106U,	// LDV_i32_v4_areg_64
    138U,	// LDV_i32_v4_ari
    138U,	// LDV_i32_v4_ari_64
    138U,	// LDV_i32_v4_asi
    106U,	// LDV_i32_v4_avar
    0U,	// LDV_i64_v2_areg
    0U,	// LDV_i64_v2_areg_64
    104U,	// LDV_i64_v2_ari
    104U,	// LDV_i64_v2_ari_64
    104U,	// LDV_i64_v2_asi
    0U,	// LDV_i64_v2_avar
    106U,	// LDV_i64_v4_areg
    106U,	// LDV_i64_v4_areg_64
    138U,	// LDV_i64_v4_ari
    138U,	// LDV_i64_v4_ari_64
    138U,	// LDV_i64_v4_asi
    106U,	// LDV_i64_v4_avar
    0U,	// LDV_i8_v2_areg
    0U,	// LDV_i8_v2_areg_64
    104U,	// LDV_i8_v2_ari
    104U,	// LDV_i8_v2_ari_64
    104U,	// LDV_i8_v2_asi
    0U,	// LDV_i8_v2_avar
    106U,	// LDV_i8_v4_areg
    106U,	// LDV_i8_v4_areg_64
    138U,	// LDV_i8_v4_ari
    138U,	// LDV_i8_v4_ari_64
    138U,	// LDV_i8_v4_asi
    106U,	// LDV_i8_v4_avar
    0U,	// LD_f32_areg
    0U,	// LD_f32_areg_64
    0U,	// LD_f32_ari
    0U,	// LD_f32_ari_64
    0U,	// LD_f32_asi
    0U,	// LD_f32_avar
    0U,	// LD_f64_areg
    0U,	// LD_f64_areg_64
    0U,	// LD_f64_ari
    0U,	// LD_f64_ari_64
    0U,	// LD_f64_asi
    0U,	// LD_f64_avar
    0U,	// LD_i16_areg
    0U,	// LD_i16_areg_64
    0U,	// LD_i16_ari
    0U,	// LD_i16_ari_64
    0U,	// LD_i16_asi
    0U,	// LD_i16_avar
    0U,	// LD_i32_areg
    0U,	// LD_i32_areg_64
    0U,	// LD_i32_ari
    0U,	// LD_i32_ari_64
    0U,	// LD_i32_asi
    0U,	// LD_i32_avar
    0U,	// LD_i64_areg
    0U,	// LD_i64_areg_64
    0U,	// LD_i64_ari
    0U,	// LD_i64_ari_64
    0U,	// LD_i64_asi
    0U,	// LD_i64_avar
    0U,	// LD_i8_areg
    0U,	// LD_i8_areg_64
    0U,	// LD_i8_ari
    0U,	// LD_i8_ari_64
    0U,	// LD_i8_asi
    0U,	// LD_i8_avar
    0U,	// LEA_ADDRi
    0U,	// LEA_ADDRi64
    0U,	// LastCallArgF32
    0U,	// LastCallArgF64
    0U,	// LastCallArgI16
    0U,	// LastCallArgI32
    0U,	// LastCallArgI32imm
    0U,	// LastCallArgI64
    0U,	// LastCallArgParam
    0U,	// LoadParamMemF32
    0U,	// LoadParamMemF64
    0U,	// LoadParamMemI16
    0U,	// LoadParamMemI32
    0U,	// LoadParamMemI64
    0U,	// LoadParamMemI8
    1U,	// LoadParamMemV2F32
    1U,	// LoadParamMemV2F64
    1U,	// LoadParamMemV2I16
    1U,	// LoadParamMemV2I32
    1U,	// LoadParamMemV2I64
    1U,	// LoadParamMemV2I8
    770U,	// LoadParamMemV4F32
    770U,	// LoadParamMemV4I16
    770U,	// LoadParamMemV4I32
    770U,	// LoadParamMemV4I8
    2U,	// MAD16rii
    2U,	// MAD16rir
    2U,	// MAD16rri
    2U,	// MAD16rrr
    2U,	// MAD32rii
    2U,	// MAD32rir
    2U,	// MAD32rri
    2U,	// MAD32rrr
    2U,	// MAD64rii
    2U,	// MAD64rir
    2U,	// MAD64rri
    2U,	// MAD64rrr
    0U,	// MOV_ADDR
    0U,	// MOV_ADDR64
    0U,	// MOV_DEPOT_ADDR
    0U,	// MOV_DEPOT_ADDR_64
    0U,	// MULTHSi16ri
    0U,	// MULTHSi16rr
    0U,	// MULTHSi32ri
    0U,	// MULTHSi32rr
    0U,	// MULTHSi64ri
    0U,	// MULTHSi64rr
    0U,	// MULTHUi16ri
    0U,	// MULTHUi16rr
    0U,	// MULTHUi32ri
    0U,	// MULTHUi32rr
    0U,	// MULTHUi64ri
    0U,	// MULTHUi64rr
    0U,	// MULTi16ri
    0U,	// MULTi16rr
    0U,	// MULTi32ri
    0U,	// MULTi32rr
    0U,	// MULTi64ri
    0U,	// MULTi64rr
    0U,	// MULWIDES32
    0U,	// MULWIDES32Imm
    0U,	// MULWIDES64
    0U,	// MULWIDES64Imm
    0U,	// MULWIDEU32
    0U,	// MULWIDEU32Imm
    0U,	// MULWIDEU64
    0U,	// MULWIDEU64Imm
    0U,	// MoveParamF32
    0U,	// MoveParamF64
    0U,	// MoveParamI16
    0U,	// MoveParamI32
    0U,	// MoveParamI64
    0U,	// NOP
    0U,	// NOT1
    0U,	// NOT16
    0U,	// NOT32
    0U,	// NOT64
    0U,	// ORb16ri
    0U,	// ORb16rr
    0U,	// ORb1ri
    0U,	// ORb1rr
    0U,	// ORb32ri
    0U,	// ORb32rr
    0U,	// ORb64ri
    0U,	// ORb64rr
    0U,	// POPCr32
    0U,	// POPCr64
    0U,	// PTX_BAR_SYNC
    0U,	// PTX_READ_CLOCK
    0U,	// PTX_READ_CLOCK64
    0U,	// PTX_READ_CTAID_W
    0U,	// PTX_READ_CTAID_X
    0U,	// PTX_READ_CTAID_Y
    0U,	// PTX_READ_CTAID_Z
    0U,	// PTX_READ_GRIDID
    0U,	// PTX_READ_LANEID
    0U,	// PTX_READ_LANEMASK_EQ
    0U,	// PTX_READ_LANEMASK_GE
    0U,	// PTX_READ_LANEMASK_GT
    0U,	// PTX_READ_LANEMASK_LE
    0U,	// PTX_READ_LANEMASK_LT
    0U,	// PTX_READ_NCTAID_W
    0U,	// PTX_READ_NCTAID_X
    0U,	// PTX_READ_NCTAID_Y
    0U,	// PTX_READ_NCTAID_Z
    0U,	// PTX_READ_NSMID
    0U,	// PTX_READ_NTID_W
    0U,	// PTX_READ_NTID_X
    0U,	// PTX_READ_NTID_Y
    0U,	// PTX_READ_NTID_Z
    0U,	// PTX_READ_NWARPID
    0U,	// PTX_READ_PM0
    0U,	// PTX_READ_PM1
    0U,	// PTX_READ_PM2
    0U,	// PTX_READ_PM3
    0U,	// PTX_READ_SMID
    0U,	// PTX_READ_TID_W
    0U,	// PTX_READ_TID_X
    0U,	// PTX_READ_TID_Y
    0U,	// PTX_READ_TID_Z
    0U,	// PTX_READ_WARPID
    0U,	// PrintCallNoRetInst
    0U,	// PrintCallRetInst1
    0U,	// PrintCallRetInst2
    0U,	// PrintCallRetInst3
    0U,	// PrintCallRetInst4
    0U,	// PrintCallRetInst5
    0U,	// PrintCallRetInst6
    0U,	// PrintCallRetInst7
    0U,	// PrintCallRetInst8
    0U,	// PrintCallUniNoRetInst
    0U,	// PrintCallUniRetInst1
    0U,	// PrintCallUniRetInst2
    0U,	// PrintCallUniRetInst3
    0U,	// PrintCallUniRetInst4
    0U,	// PrintCallUniRetInst5
    0U,	// PrintCallUniRetInst6
    0U,	// PrintCallUniRetInst7
    0U,	// PrintCallUniRetInst8
    0U,	// PrototypeInst
    0U,	// PseudoUseParamF32
    0U,	// PseudoUseParamF64
    0U,	// PseudoUseParamI16
    0U,	// PseudoUseParamI32
    0U,	// PseudoUseParamI64
    0U,	// RETURNInst
    1U,	// ROT32imm_sw
    1U,	// ROT64imm_sw
    13U,	// ROTL32reg_sw
    15U,	// ROTL64reg_sw
    17U,	// ROTR32reg_sw
    19U,	// ROTR64reg_sw
    0U,	// RSQRTF32approx1r
    0U,	// Return
    0U,	// SDIVi16ri
    0U,	// SDIVi16rr
    0U,	// SDIVi32ri
    0U,	// SDIVi32rr
    0U,	// SDIVi64ri
    0U,	// SDIVi64rr
    2U,	// SELP_b16ii
    2U,	// SELP_b16ir
    2U,	// SELP_b16ri
    2U,	// SELP_b16rr
    2U,	// SELP_b32ii
    2U,	// SELP_b32ir
    2U,	// SELP_b32ri
    2U,	// SELP_b32rr
    2U,	// SELP_b64ii
    2U,	// SELP_b64ir
    2U,	// SELP_b64ri
    2U,	// SELP_b64rr
    2U,	// SELP_f32ii
    2U,	// SELP_f32ir
    2U,	// SELP_f32ri
    2U,	// SELP_f32rr
    2U,	// SELP_f64ii
    2U,	// SELP_f64ir
    2U,	// SELP_f64ri
    2U,	// SELP_f64rr
    2U,	// SELP_s16ii
    2U,	// SELP_s16ir
    2U,	// SELP_s16ri
    2U,	// SELP_s16rr
    2U,	// SELP_s32ii
    2U,	// SELP_s32ir
    2U,	// SELP_s32ri
    2U,	// SELP_s32rr
    2U,	// SELP_s64ii
    2U,	// SELP_s64ir
    2U,	// SELP_s64ri
    2U,	// SELP_s64rr
    2U,	// SELP_u16ii
    2U,	// SELP_u16ir
    2U,	// SELP_u16ri
    2U,	// SELP_u16rr
    2U,	// SELP_u32ii
    2U,	// SELP_u32ir
    2U,	// SELP_u32ri
    2U,	// SELP_u32rr
    2U,	// SELP_u64ii
    2U,	// SELP_u64ir
    2U,	// SELP_u64ri
    2U,	// SELP_u64rr
    0U,	// SETP_b16ir
    0U,	// SETP_b16ri
    0U,	// SETP_b16rr
    0U,	// SETP_b32ir
    0U,	// SETP_b32ri
    0U,	// SETP_b32rr
    0U,	// SETP_b64ir
    0U,	// SETP_b64ri
    0U,	// SETP_b64rr
    0U,	// SETP_f32ir
    0U,	// SETP_f32ri
    0U,	// SETP_f32rr
    0U,	// SETP_f64ir
    0U,	// SETP_f64ri
    0U,	// SETP_f64rr
    0U,	// SETP_s16ir
    0U,	// SETP_s16ri
    0U,	// SETP_s16rr
    0U,	// SETP_s32ir
    0U,	// SETP_s32ri
    0U,	// SETP_s32rr
    0U,	// SETP_s64ir
    0U,	// SETP_s64ri
    0U,	// SETP_s64rr
    0U,	// SETP_u16ir
    0U,	// SETP_u16ri
    0U,	// SETP_u16rr
    0U,	// SETP_u32ir
    0U,	// SETP_u32ri
    0U,	// SETP_u32rr
    0U,	// SETP_u64ir
    0U,	// SETP_u64ri
    0U,	// SETP_u64rr
    0U,	// SET_b16ir
    0U,	// SET_b16ri
    0U,	// SET_b16rr
    0U,	// SET_b32ir
    0U,	// SET_b32ri
    0U,	// SET_b32rr
    0U,	// SET_b64ir
    0U,	// SET_b64ri
    0U,	// SET_b64rr
    0U,	// SET_f32ir
    0U,	// SET_f32ri
    0U,	// SET_f32rr
    0U,	// SET_f64ir
    0U,	// SET_f64ri
    0U,	// SET_f64rr
    0U,	// SET_s16ir
    0U,	// SET_s16ri
    0U,	// SET_s16rr
    0U,	// SET_s32ir
    0U,	// SET_s32ri
    0U,	// SET_s32rr
    0U,	// SET_s64ir
    0U,	// SET_s64ri
    0U,	// SET_s64rr
    0U,	// SET_u16ir
    0U,	// SET_u16ri
    0U,	// SET_u16rr
    0U,	// SET_u32ir
    0U,	// SET_u32ri
    0U,	// SET_u32rr
    0U,	// SET_u64ir
    0U,	// SET_u64ri
    0U,	// SET_u64rr
    0U,	// SHLi16ri
    0U,	// SHLi16rr
    0U,	// SHLi32ii
    0U,	// SHLi32ri
    0U,	// SHLi32rr
    0U,	// SHLi64ri
    0U,	// SHLi64rr
    0U,	// SINF
    0U,	// SRAi16ri
    0U,	// SRAi16rr
    0U,	// SRAi32ii
    0U,	// SRAi32ri
    0U,	// SRAi32rr
    0U,	// SRAi64ri
    0U,	// SRAi64rr
    0U,	// SREMi16ri
    0U,	// SREMi16rr
    0U,	// SREMi32ri
    0U,	// SREMi32rr
    0U,	// SREMi64ri
    0U,	// SREMi64rr
    0U,	// SRLi16ri
    0U,	// SRLi16rr
    0U,	// SRLi32ii
    0U,	// SRLi32ri
    0U,	// SRLi32rr
    0U,	// SRLi64ri
    0U,	// SRLi64rr
    21U,	// STV_f32_v2_areg
    21U,	// STV_f32_v2_areg_64
    168U,	// STV_f32_v2_ari
    168U,	// STV_f32_v2_ari_64
    168U,	// STV_f32_v2_asi
    21U,	// STV_f32_v2_avar
    195U,	// STV_f32_v4_areg
    195U,	// STV_f32_v4_areg_64
    22U,	// STV_f32_v4_ari
    22U,	// STV_f32_v4_ari_64
    22U,	// STV_f32_v4_asi
    195U,	// STV_f32_v4_avar
    21U,	// STV_f64_v2_areg
    21U,	// STV_f64_v2_areg_64
    168U,	// STV_f64_v2_ari
    168U,	// STV_f64_v2_ari_64
    168U,	// STV_f64_v2_asi
    21U,	// STV_f64_v2_avar
    195U,	// STV_f64_v4_areg
    195U,	// STV_f64_v4_areg_64
    22U,	// STV_f64_v4_ari
    22U,	// STV_f64_v4_ari_64
    22U,	// STV_f64_v4_asi
    195U,	// STV_f64_v4_avar
    21U,	// STV_i16_v2_areg
    21U,	// STV_i16_v2_areg_64
    168U,	// STV_i16_v2_ari
    168U,	// STV_i16_v2_ari_64
    168U,	// STV_i16_v2_asi
    21U,	// STV_i16_v2_avar
    195U,	// STV_i16_v4_areg
    195U,	// STV_i16_v4_areg_64
    22U,	// STV_i16_v4_ari
    22U,	// STV_i16_v4_ari_64
    22U,	// STV_i16_v4_asi
    195U,	// STV_i16_v4_avar
    21U,	// STV_i32_v2_areg
    21U,	// STV_i32_v2_areg_64
    168U,	// STV_i32_v2_ari
    168U,	// STV_i32_v2_ari_64
    168U,	// STV_i32_v2_asi
    21U,	// STV_i32_v2_avar
    195U,	// STV_i32_v4_areg
    195U,	// STV_i32_v4_areg_64
    22U,	// STV_i32_v4_ari
    22U,	// STV_i32_v4_ari_64
    22U,	// STV_i32_v4_asi
    195U,	// STV_i32_v4_avar
    21U,	// STV_i64_v2_areg
    21U,	// STV_i64_v2_areg_64
    168U,	// STV_i64_v2_ari
    168U,	// STV_i64_v2_ari_64
    168U,	// STV_i64_v2_asi
    21U,	// STV_i64_v2_avar
    195U,	// STV_i64_v4_areg
    195U,	// STV_i64_v4_areg_64
    22U,	// STV_i64_v4_ari
    22U,	// STV_i64_v4_ari_64
    22U,	// STV_i64_v4_asi
    195U,	// STV_i64_v4_avar
    21U,	// STV_i8_v2_areg
    21U,	// STV_i8_v2_areg_64
    168U,	// STV_i8_v2_ari
    168U,	// STV_i8_v2_ari_64
    168U,	// STV_i8_v2_asi
    21U,	// STV_i8_v2_avar
    195U,	// STV_i8_v4_areg
    195U,	// STV_i8_v4_areg_64
    22U,	// STV_i8_v4_ari
    22U,	// STV_i8_v4_ari_64
    22U,	// STV_i8_v4_asi
    195U,	// STV_i8_v4_avar
    24U,	// ST_f32_areg
    24U,	// ST_f32_areg_64
    26U,	// ST_f32_ari
    26U,	// ST_f32_ari_64
    26U,	// ST_f32_asi
    24U,	// ST_f32_avar
    24U,	// ST_f64_areg
    24U,	// ST_f64_areg_64
    26U,	// ST_f64_ari
    26U,	// ST_f64_ari_64
    26U,	// ST_f64_asi
    24U,	// ST_f64_avar
    24U,	// ST_i16_areg
    24U,	// ST_i16_areg_64
    26U,	// ST_i16_ari
    26U,	// ST_i16_ari_64
    26U,	// ST_i16_asi
    24U,	// ST_i16_avar
    24U,	// ST_i32_areg
    24U,	// ST_i32_areg_64
    26U,	// ST_i32_ari
    26U,	// ST_i32_ari_64
    26U,	// ST_i32_asi
    24U,	// ST_i32_avar
    24U,	// ST_i64_areg
    24U,	// ST_i64_areg_64
    26U,	// ST_i64_ari
    26U,	// ST_i64_ari_64
    26U,	// ST_i64_asi
    24U,	// ST_i64_avar
    24U,	// ST_i8_areg
    24U,	// ST_i8_areg_64
    26U,	// ST_i8_ari
    26U,	// ST_i8_ari_64
    26U,	// ST_i8_asi
    24U,	// ST_i8_avar
    0U,	// SUBCCCi32ri
    0U,	// SUBCCCi32rr
    0U,	// SUBCCi32ri
    0U,	// SUBCCi32rr
    0U,	// SUB_i1_ri
    0U,	// SUB_i1_rr
    0U,	// SUBi16ri
    0U,	// SUBi16rr
    0U,	// SUBi32ri
    0U,	// SUBi32rr
    0U,	// SUBi64ri
    0U,	// SUBi64rr
    24U,	// StoreParamF32
    24U,	// StoreParamF64
    24U,	// StoreParamI16
    24U,	// StoreParamI32
    24U,	// StoreParamI64
    24U,	// StoreParamI8
    0U,	// StoreParamV2F32
    0U,	// StoreParamV2F64
    0U,	// StoreParamV2I16
    0U,	// StoreParamV2I32
    0U,	// StoreParamV2I64
    0U,	// StoreParamV2I8
    0U,	// StoreParamV4F32
    0U,	// StoreParamV4I16
    0U,	// StoreParamV4I32
    0U,	// StoreParamV4I8
    0U,	// StoreRetvalF32
    0U,	// StoreRetvalF64
    0U,	// StoreRetvalI16
    0U,	// StoreRetvalI32
    0U,	// StoreRetvalI64
    0U,	// StoreRetvalI8
    0U,	// StoreRetvalV2F32
    0U,	// StoreRetvalV2F64
    0U,	// StoreRetvalV2I16
    0U,	// StoreRetvalV2I32
    0U,	// StoreRetvalV2I64
    0U,	// StoreRetvalV2I8
    20U,	// StoreRetvalV4F32
    20U,	// StoreRetvalV4I16
    20U,	// StoreRetvalV4I32
    20U,	// StoreRetvalV4I8
    0U,	// UDIVi16ri
    0U,	// UDIVi16rr
    0U,	// UDIVi32ri
    0U,	// UDIVi32rr
    0U,	// UDIVi64ri
    0U,	// UDIVi64rr
    0U,	// UREMi16ri
    0U,	// UREMi16rr
    0U,	// UREMi32ri
    0U,	// UREMi32rr
    0U,	// UREMi64ri
    0U,	// UREMi64rr
    0U,	// V2F32toF64
    0U,	// V2I16toI32
    0U,	// V2I32toI64
    1U,	// V4I16toI64
    0U,	// XORb16ri
    0U,	// XORb16rr
    0U,	// XORb1ri
    0U,	// XORb1rr
    0U,	// XORb32ri
    0U,	// XORb32rr
    0U,	// XORb64ri
    0U,	// XORb64rr
    0U,	// cvta_const_no
    0U,	// cvta_const_no_64
    0U,	// cvta_const_yes
    0U,	// cvta_const_yes_64
    0U,	// cvta_global_no
    0U,	// cvta_global_no_64
    0U,	// cvta_global_yes
    0U,	// cvta_global_yes_64
    0U,	// cvta_local_no
    0U,	// cvta_local_no_64
    0U,	// cvta_local_yes
    0U,	// cvta_local_yes_64
    0U,	// cvta_shared_no
    0U,	// cvta_shared_no_64
    0U,	// cvta_shared_yes
    0U,	// cvta_shared_yes_64
    0U,	// cvta_to_const_no
    0U,	// cvta_to_const_no_64
    0U,	// cvta_to_const_yes
    0U,	// cvta_to_const_yes_64
    0U,	// cvta_to_global_no
    0U,	// cvta_to_global_no_64
    0U,	// cvta_to_global_yes
    0U,	// cvta_to_global_yes_64
    0U,	// cvta_to_local_no
    0U,	// cvta_to_local_no_64
    0U,	// cvta_to_local_yes
    0U,	// cvta_to_local_yes_64
    0U,	// cvta_to_shared_no
    0U,	// cvta_to_shared_no_64
    0U,	// cvta_to_shared_yes
    0U,	// cvta_to_shared_yes_64
    0U,	// nvvm_move_double
    0U,	// nvvm_move_float
    0U,	// nvvm_move_i16
    0U,	// nvvm_move_i32
    0U,	// nvvm_move_i64
    0U,	// nvvm_move_ptr32
    0U,	// nvvm_move_ptr64
    0U,	// nvvm_ptr_gen_to_param
    0U,	// nvvm_ptr_gen_to_param_64
    0U,	// trapinst
    0U
  };

  const char AsmStrs[] = {
  /* 0 */ 'a', 'n', 'd', '.', 'b', '3', '2', 32, 32, 9, 0,
  /* 11 */ 'x', 'o', 'r', '.', 'b', '3', '2', 32, 32, 9, 0,
  /* 22 */ 'a', 'n', 'd', '.', 'b', '6', '4', 32, 32, 9, 0,
  /* 33 */ 'x', 'o', 'r', '.', 'b', '6', '4', 32, 32, 9, 0,
  /* 44 */ 'a', 'n', 'd', '.', 'b', '1', '6', 32, 32, 9, 0,
  /* 55 */ 'x', 'o', 'r', '.', 'b', '1', '6', 32, 32, 9, 0,
  /* 66 */ 'a', 'n', 'd', '.', 'p', 'r', 'e', 'd', 32, 32, 9, 0,
  /* 78 */ 'x', 'o', 'r', '.', 'p', 'r', 'e', 'd', 32, 32, 9, 0,
  /* 90 */ 'p', 'o', 'p', 'c', '.', 'b', '3', '2', 32, 9, 0,
  /* 101 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'a', 'n', 'd', '.', 'b', '3', '2', 32, 9, 0,
  /* 123 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'a', 'n', 'd', '.', 'b', '3', '2', 32, 9, 0,
  /* 145 */ 'a', 't', 'o', 'm', '.', 'a', 'n', 'd', '.', 'b', '3', '2', 32, 9, 0,
  /* 160 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'e', 'x', 'c', 'h', '.', 'b', '3', '2', 32, 9, 0,
  /* 183 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'e', 'x', 'c', 'h', '.', 'b', '3', '2', 32, 9, 0,
  /* 206 */ 'a', 't', 'o', 'm', '.', 'e', 'x', 'c', 'h', '.', 'b', '3', '2', 32, 9, 0,
  /* 222 */ 's', 'h', 'l', '.', 'b', '3', '2', 32, 9, 0,
  /* 232 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'o', 'r', '.', 'b', '3', '2', 32, 9, 0,
  /* 253 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'o', 'r', '.', 'b', '3', '2', 32, 9, 0,
  /* 274 */ 'a', 't', 'o', 'm', '.', 'o', 'r', '.', 'b', '3', '2', 32, 9, 0,
  /* 288 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'x', 'o', 'r', '.', 'b', '3', '2', 32, 9, 0,
  /* 310 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'x', 'o', 'r', '.', 'b', '3', '2', 32, 9, 0,
  /* 332 */ 'a', 't', 'o', 'm', '.', 'x', 'o', 'r', '.', 'b', '3', '2', 32, 9, 0,
  /* 347 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'c', 'a', 's', '.', 'b', '3', '2', 32, 9, 0,
  /* 369 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'c', 'a', 's', '.', 'b', '3', '2', 32, 9, 0,
  /* 391 */ 'a', 't', 'o', 'm', '.', 'c', 'a', 's', '.', 'b', '3', '2', 32, 9, 0,
  /* 406 */ 'p', 'r', 'm', 't', '.', 'b', '3', '2', 32, 9, 0,
  /* 417 */ 'n', 'o', 't', '.', 'b', '3', '2', 32, 9, 0,
  /* 427 */ 'b', 'r', 'e', 'v', '.', 'b', '3', '2', 32, 9, 0,
  /* 438 */ 'm', 'o', 'v', '.', 'b', '3', '2', 32, 9, 0,
  /* 448 */ 'c', 'l', 'z', '.', 'b', '3', '2', 32, 9, 0,
  /* 458 */ 's', 'u', 'b', '.', 'f', '3', '2', 32, 9, 0,
  /* 468 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'f', '3', '2', 32, 9, 0,
  /* 487 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'a', 'd', 'd', '.', 'f', '3', '2', 32, 9, 0,
  /* 509 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'a', 'd', 'd', '.', 'f', '3', '2', 32, 9, 0,
  /* 531 */ 'a', 't', 'o', 'm', '.', 'a', 'd', 'd', '.', 'f', '3', '2', 32, 9, 0,
  /* 546 */ 'n', 'e', 'g', '.', 'f', '3', '2', 32, 9, 0,
  /* 556 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'f', '3', '2', 32, 9, 0,
  /* 573 */ 'd', 'i', 'v', '.', 'f', 'u', 'l', 'l', '.', 'f', '3', '2', 32, 9, 0,
  /* 588 */ 'm', 'u', 'l', '.', 'f', '3', '2', 32, 9, 0,
  /* 598 */ 'f', 'm', 'a', '.', 'r', 'm', '.', 'f', '3', '2', 32, 9, 0,
  /* 611 */ 'a', 'd', 'd', '.', 'r', 'm', '.', 'f', '3', '2', 32, 9, 0,
  /* 624 */ 'm', 'u', 'l', '.', 'r', 'm', '.', 'f', '3', '2', 32, 9, 0,
  /* 637 */ 'r', 'c', 'p', '.', 'r', 'm', '.', 'f', '3', '2', 32, 9, 0,
  /* 650 */ 's', 'q', 'r', 't', '.', 'r', 'm', '.', 'f', '3', '2', 32, 9, 0,
  /* 664 */ 'd', 'i', 'v', '.', 'r', 'm', '.', 'f', '3', '2', 32, 9, 0,
  /* 677 */ 'm', 'i', 'n', '.', 'f', '3', '2', 32, 9, 0,
  /* 687 */ 'f', 'm', 'a', '.', 'r', 'n', '.', 'f', '3', '2', 32, 9, 0,
  /* 700 */ 's', 'u', 'b', '.', 'r', 'n', '.', 'f', '3', '2', 32, 9, 0,
  /* 713 */ 'a', 'd', 'd', '.', 'r', 'n', '.', 'f', '3', '2', 32, 9, 0,
  /* 726 */ 'm', 'u', 'l', '.', 'r', 'n', '.', 'f', '3', '2', 32, 9, 0,
  /* 739 */ 'r', 'c', 'p', '.', 'r', 'n', '.', 'f', '3', '2', 32, 9, 0,
  /* 752 */ 's', 'q', 'r', 't', '.', 'r', 'n', '.', 'f', '3', '2', 32, 9, 0,
  /* 766 */ 'd', 'i', 'v', '.', 'r', 'n', '.', 'f', '3', '2', 32, 9, 0,
  /* 779 */ 'f', 'm', 'a', '.', 'r', 'p', '.', 'f', '3', '2', 32, 9, 0,
  /* 792 */ 'a', 'd', 'd', '.', 'r', 'p', '.', 'f', '3', '2', 32, 9, 0,
  /* 805 */ 'm', 'u', 'l', '.', 'r', 'p', '.', 'f', '3', '2', 32, 9, 0,
  /* 818 */ 'r', 'c', 'p', '.', 'r', 'p', '.', 'f', '3', '2', 32, 9, 0,
  /* 831 */ 's', 'q', 'r', 't', '.', 'r', 'p', '.', 'f', '3', '2', 32, 9, 0,
  /* 845 */ 'd', 'i', 'v', '.', 'r', 'p', '.', 'f', '3', '2', 32, 9, 0,
  /* 858 */ 'a', 'b', 's', '.', 'f', '3', '2', 32, 9, 0,
  /* 868 */ 'm', 'o', 'v', '.', 'f', '3', '2', 32, 9, 0,
  /* 878 */ 'm', 'a', 'x', '.', 'f', '3', '2', 32, 9, 0,
  /* 888 */ 'l', 'g', '2', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '3', '2', 32, 9, 0,
  /* 905 */ 'e', 'x', '2', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '3', '2', 32, 9, 0,
  /* 922 */ 's', 'i', 'n', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '3', '2', 32, 9, 0,
  /* 939 */ 'r', 'c', 'p', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '3', '2', 32, 9, 0,
  /* 956 */ 'c', 'o', 's', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '3', '2', 32, 9, 0,
  /* 973 */ 'r', 's', 'q', 'r', 't', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '3', '2', 32, 9, 0,
  /* 992 */ 'd', 'i', 'v', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '3', '2', 32, 9, 0,
  /* 1009 */ 'f', 'm', 'a', '.', 'r', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1022 */ 'a', 'd', 'd', '.', 'r', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1035 */ 'm', 'u', 'l', '.', 'r', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1048 */ 'r', 'c', 'p', '.', 'r', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1061 */ 's', 'q', 'r', 't', '.', 'r', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1075 */ 'd', 'i', 'v', '.', 'r', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1088 */ 's', 'u', 'b', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1102 */ 'a', 'd', 'd', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1116 */ 'n', 'e', 'g', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1130 */ 'd', 'i', 'v', '.', 'f', 'u', 'l', 'l', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1149 */ 'm', 'u', 'l', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1163 */ 'f', 'm', 'a', '.', 'r', 'm', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1180 */ 'a', 'd', 'd', '.', 'r', 'm', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1197 */ 'm', 'u', 'l', '.', 'r', 'm', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1214 */ 'r', 'c', 'p', '.', 'r', 'm', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1231 */ 's', 'q', 'r', 't', '.', 'r', 'm', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1249 */ 'd', 'i', 'v', '.', 'r', 'm', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1266 */ 'm', 'i', 'n', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1280 */ 'f', 'm', 'a', '.', 'r', 'n', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1297 */ 's', 'u', 'b', '.', 'r', 'n', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1314 */ 'a', 'd', 'd', '.', 'r', 'n', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1331 */ 'm', 'u', 'l', '.', 'r', 'n', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1348 */ 'r', 'c', 'p', '.', 'r', 'n', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1365 */ 's', 'q', 'r', 't', '.', 'r', 'n', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1383 */ 'd', 'i', 'v', '.', 'r', 'n', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1400 */ 'f', 'm', 'a', '.', 'r', 'p', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1417 */ 'a', 'd', 'd', '.', 'r', 'p', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1434 */ 'm', 'u', 'l', '.', 'r', 'p', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1451 */ 'r', 'c', 'p', '.', 'r', 'p', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1468 */ 's', 'q', 'r', 't', '.', 'r', 'p', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1486 */ 'd', 'i', 'v', '.', 'r', 'p', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1503 */ 'a', 'b', 's', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1517 */ 'm', 'a', 'x', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1531 */ 'l', 'g', '2', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1552 */ 'e', 'x', '2', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1573 */ 's', 'i', 'n', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1594 */ 'r', 'c', 'p', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1615 */ 'c', 'o', 's', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1636 */ 'r', 's', 'q', 'r', 't', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1659 */ 'd', 'i', 'v', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1680 */ 'f', 'm', 'a', '.', 'r', 'z', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1697 */ 'a', 'd', 'd', '.', 'r', 'z', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1714 */ 'm', 'u', 'l', '.', 'r', 'z', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1731 */ 'r', 'c', 'p', '.', 'r', 'z', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1748 */ 's', 'q', 'r', 't', '.', 'r', 'z', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1766 */ 'd', 'i', 'v', '.', 'r', 'z', '.', 'f', 't', 'z', '.', 'f', '3', '2', 32, 9, 0,
  /* 1783 */ 'c', 'v', 't', '.', 's', '6', '4', '.', 's', '3', '2', 32, 9, 0,
  /* 1797 */ 's', 'u', 'b', '.', 's', '3', '2', 32, 9, 0,
  /* 1807 */ 's', 'u', 'b', '.', 'c', 'c', '.', 's', '3', '2', 32, 9, 0,
  /* 1820 */ 's', 'u', 'b', 'c', '.', 'c', 'c', '.', 's', '3', '2', 32, 9, 0,
  /* 1834 */ 'a', 'd', 'd', 'c', '.', 'c', 'c', '.', 's', '3', '2', 32, 9, 0,
  /* 1848 */ 'a', 'd', 'd', '.', 'c', 'c', '.', 's', '3', '2', 32, 9, 0,
  /* 1861 */ 's', 'a', 'd', '.', 's', '3', '2', 32, 9, 0,
  /* 1871 */ 'a', 'd', 'd', '.', 's', '3', '2', 32, 9, 0,
  /* 1881 */ 'm', 'u', 'l', '.', 'w', 'i', 'd', 'e', '.', 's', '3', '2', 32, 9, 0,
  /* 1896 */ 'n', 'e', 'g', '.', 's', '3', '2', 32, 9, 0,
  /* 1906 */ 'm', 'u', 'l', '.', 'h', 'i', '.', 's', '3', '2', 32, 9, 0,
  /* 1919 */ 'r', 'e', 'm', '.', 's', '3', '2', 32, 9, 0,
  /* 1929 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'm', 'i', 'n', '.', 's', '3', '2', 32, 9, 0,
  /* 1951 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'm', 'i', 'n', '.', 's', '3', '2', 32, 9, 0,
  /* 1973 */ 'a', 't', 'o', 'm', '.', 'm', 'i', 'n', '.', 's', '3', '2', 32, 9, 0,
  /* 1988 */ 'm', 'u', 'l', '2', '4', '.', 'l', 'o', '.', 's', '3', '2', 32, 9, 0,
  /* 2003 */ 'm', 'a', 'd', '.', 'l', 'o', '.', 's', '3', '2', 32, 9, 0,
  /* 2016 */ 'm', 'u', 'l', '.', 'l', 'o', '.', 's', '3', '2', 32, 9, 0,
  /* 2029 */ 's', 'h', 'r', '.', 's', '3', '2', 32, 9, 0,
  /* 2039 */ 'a', 'b', 's', '.', 's', '3', '2', 32, 9, 0,
  /* 2049 */ 'd', 'i', 'v', '.', 's', '3', '2', 32, 9, 0,
  /* 2059 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'm', 'a', 'x', '.', 's', '3', '2', 32, 9, 0,
  /* 2081 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'm', 'a', 'x', '.', 's', '3', '2', 32, 9, 0,
  /* 2103 */ 'a', 't', 'o', 'm', '.', 'm', 'a', 'x', '.', 's', '3', '2', 32, 9, 0,
  /* 2118 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'd', 'e', 'c', '.', 'u', '3', '2', 32, 9, 0,
  /* 2140 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'd', 'e', 'c', '.', 'u', '3', '2', 32, 9, 0,
  /* 2162 */ 'a', 't', 'o', 'm', '.', 'd', 'e', 'c', '.', 'u', '3', '2', 32, 9, 0,
  /* 2177 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'u', '3', '2', 32, 9, 0,
  /* 2196 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'i', 'n', 'c', '.', 'u', '3', '2', 32, 9, 0,
  /* 2218 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'i', 'n', 'c', '.', 'u', '3', '2', 32, 9, 0,
  /* 2240 */ 'a', 't', 'o', 'm', '.', 'i', 'n', 'c', '.', 'u', '3', '2', 32, 9, 0,
  /* 2255 */ 's', 'a', 'd', '.', 'u', '3', '2', 32, 9, 0,
  /* 2265 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'a', 'd', 'd', '.', 'u', '3', '2', 32, 9, 0,
  /* 2287 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'a', 'd', 'd', '.', 'u', '3', '2', 32, 9, 0,
  /* 2309 */ 'a', 't', 'o', 'm', '.', 'a', 'd', 'd', '.', 'u', '3', '2', 32, 9, 0,
  /* 2324 */ 'c', 'v', 't', 'a', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'u', '3', '2', 32, 9, 0,
  /* 2342 */ 'c', 'v', 't', 'a', '.', 't', 'o', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'u', '3', '2', 32, 9, 0,
  /* 2363 */ 'm', 'u', 'l', '.', 'w', 'i', 'd', 'e', '.', 'u', '3', '2', 32, 9, 0,
  /* 2378 */ 'm', 'u', 'l', '.', 'h', 'i', '.', 'u', '3', '2', 32, 9, 0,
  /* 2391 */ 'c', 'v', 't', 'a', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'u', '3', '2', 32, 9, 0,
  /* 2409 */ 'c', 'v', 't', 'a', '.', 't', 'o', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'u', '3', '2', 32, 9, 0,
  /* 2430 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'u', '3', '2', 32, 9, 0,
  /* 2447 */ 'c', 'v', 't', 'a', '.', 'l', 'o', 'c', 'a', 'l', '.', 'u', '3', '2', 32, 9, 0,
  /* 2464 */ 'c', 'v', 't', 'a', '.', 't', 'o', '.', 'l', 'o', 'c', 'a', 'l', '.', 'u', '3', '2', 32, 9, 0,
  /* 2484 */ 'r', 'e', 'm', '.', 'u', '3', '2', 32, 9, 0,
  /* 2494 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'm', 'i', 'n', '.', 'u', '3', '2', 32, 9, 0,
  /* 2516 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'm', 'i', 'n', '.', 'u', '3', '2', 32, 9, 0,
  /* 2538 */ 'a', 't', 'o', 'm', '.', 'm', 'i', 'n', '.', 'u', '3', '2', 32, 9, 0,
  /* 2553 */ 'm', 'u', 'l', '2', '4', '.', 'l', 'o', '.', 'u', '3', '2', 32, 9, 0,
  /* 2568 */ 's', 'h', 'r', '.', 'u', '3', '2', 32, 9, 0,
  /* 2578 */ 'c', 'v', 't', 'a', '.', 'c', 'o', 'n', 's', 't', '.', 'u', '3', '2', 32, 9, 0,
  /* 2595 */ 'c', 'v', 't', 'a', '.', 't', 'o', '.', 'c', 'o', 'n', 's', 't', '.', 'u', '3', '2', 32, 9, 0,
  /* 2615 */ 'd', 'i', 'v', '.', 'u', '3', '2', 32, 9, 0,
  /* 2625 */ 'm', 'o', 'v', '.', 'u', '3', '2', 32, 9, 0,
  /* 2635 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'm', 'a', 'x', '.', 'u', '3', '2', 32, 9, 0,
  /* 2657 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'm', 'a', 'x', '.', 'u', '3', '2', 32, 9, 0,
  /* 2679 */ 'a', 't', 'o', 'm', '.', 'm', 'a', 'x', '.', 'u', '3', '2', 32, 9, 0,
  /* 2694 */ 'p', 'o', 'p', 'c', '.', 'b', '6', '4', 32, 9, 0,
  /* 2705 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'e', 'x', 'c', 'h', '.', 'b', '6', '4', 32, 9, 0,
  /* 2728 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'e', 'x', 'c', 'h', '.', 'b', '6', '4', 32, 9, 0,
  /* 2751 */ 'a', 't', 'o', 'm', '.', 'e', 'x', 'c', 'h', '.', 'b', '6', '4', 32, 9, 0,
  /* 2767 */ 's', 'h', 'l', '.', 'b', '6', '4', 32, 9, 0,
  /* 2777 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'c', 'a', 's', '.', 'b', '6', '4', 32, 9, 0,
  /* 2799 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'c', 'a', 's', '.', 'b', '6', '4', 32, 9, 0,
  /* 2821 */ 'a', 't', 'o', 'm', '.', 'c', 'a', 's', '.', 'b', '6', '4', 32, 9, 0,
  /* 2836 */ 'n', 'o', 't', '.', 'b', '6', '4', 32, 9, 0,
  /* 2846 */ 'b', 'r', 'e', 'v', '.', 'b', '6', '4', 32, 9, 0,
  /* 2857 */ 'm', 'o', 'v', '.', 'b', '6', '4', 32, 9, 0,
  /* 2867 */ 'c', 'l', 'z', '.', 'b', '6', '4', 32, 9, 0,
  /* 2877 */ 's', 'u', 'b', '.', 'f', '6', '4', 32, 9, 0,
  /* 2887 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'f', '6', '4', 32, 9, 0,
  /* 2906 */ 'a', 'd', 'd', '.', 'f', '6', '4', 32, 9, 0,
  /* 2916 */ 'n', 'e', 'g', '.', 'f', '6', '4', 32, 9, 0,
  /* 2926 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'f', '6', '4', 32, 9, 0,
  /* 2943 */ 'm', 'u', 'l', '.', 'f', '6', '4', 32, 9, 0,
  /* 2953 */ 'f', 'm', 'a', '.', 'r', 'm', '.', 'f', '6', '4', 32, 9, 0,
  /* 2966 */ 'a', 'd', 'd', '.', 'r', 'm', '.', 'f', '6', '4', 32, 9, 0,
  /* 2979 */ 'm', 'u', 'l', '.', 'r', 'm', '.', 'f', '6', '4', 32, 9, 0,
  /* 2992 */ 'r', 'c', 'p', '.', 'r', 'm', '.', 'f', '6', '4', 32, 9, 0,
  /* 3005 */ 's', 'q', 'r', 't', '.', 'r', 'm', '.', 'f', '6', '4', 32, 9, 0,
  /* 3019 */ 'd', 'i', 'v', '.', 'r', 'm', '.', 'f', '6', '4', 32, 9, 0,
  /* 3032 */ 'm', 'i', 'n', '.', 'f', '6', '4', 32, 9, 0,
  /* 3042 */ 'f', 'm', 'a', '.', 'r', 'n', '.', 'f', '6', '4', 32, 9, 0,
  /* 3055 */ 's', 'u', 'b', '.', 'r', 'n', '.', 'f', '6', '4', 32, 9, 0,
  /* 3068 */ 'a', 'd', 'd', '.', 'r', 'n', '.', 'f', '6', '4', 32, 9, 0,
  /* 3081 */ 'm', 'u', 'l', '.', 'r', 'n', '.', 'f', '6', '4', 32, 9, 0,
  /* 3094 */ 'r', 'c', 'p', '.', 'r', 'n', '.', 'f', '6', '4', 32, 9, 0,
  /* 3107 */ 's', 'q', 'r', 't', '.', 'r', 'n', '.', 'f', '6', '4', 32, 9, 0,
  /* 3121 */ 'd', 'i', 'v', '.', 'r', 'n', '.', 'f', '6', '4', 32, 9, 0,
  /* 3134 */ 'f', 'm', 'a', '.', 'r', 'p', '.', 'f', '6', '4', 32, 9, 0,
  /* 3147 */ 'a', 'd', 'd', '.', 'r', 'p', '.', 'f', '6', '4', 32, 9, 0,
  /* 3160 */ 'm', 'u', 'l', '.', 'r', 'p', '.', 'f', '6', '4', 32, 9, 0,
  /* 3173 */ 'r', 'c', 'p', '.', 'r', 'p', '.', 'f', '6', '4', 32, 9, 0,
  /* 3186 */ 's', 'q', 'r', 't', '.', 'r', 'p', '.', 'f', '6', '4', 32, 9, 0,
  /* 3200 */ 'd', 'i', 'v', '.', 'r', 'p', '.', 'f', '6', '4', 32, 9, 0,
  /* 3213 */ 'a', 'b', 's', '.', 'f', '6', '4', 32, 9, 0,
  /* 3223 */ 'm', 'o', 'v', '.', 'f', '6', '4', 32, 9, 0,
  /* 3233 */ 'm', 'a', 'x', '.', 'f', '6', '4', 32, 9, 0,
  /* 3243 */ 'l', 'g', '2', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '6', '4', 32, 9, 0,
  /* 3260 */ 'e', 'x', '2', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '6', '4', 32, 9, 0,
  /* 3277 */ 'r', 's', 'q', 'r', 't', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', '6', '4', 32, 9, 0,
  /* 3296 */ 'f', 'm', 'a', '.', 'r', 'z', '.', 'f', '6', '4', 32, 9, 0,
  /* 3309 */ 'a', 'd', 'd', '.', 'r', 'z', '.', 'f', '6', '4', 32, 9, 0,
  /* 3322 */ 'm', 'u', 'l', '.', 'r', 'z', '.', 'f', '6', '4', 32, 9, 0,
  /* 3335 */ 'r', 'c', 'p', '.', 'r', 'z', '.', 'f', '6', '4', 32, 9, 0,
  /* 3348 */ 's', 'q', 'r', 't', '.', 'r', 'z', '.', 'f', '6', '4', 32, 9, 0,
  /* 3362 */ 'd', 'i', 'v', '.', 'r', 'z', '.', 'f', '6', '4', 32, 9, 0,
  /* 3375 */ 'r', 'c', 'p', '.', 'a', 'p', 'p', 'r', 'o', 'x', '.', 'f', 't', 'z', '.', 'f', '6', '4', 32, 9, 0,
  /* 3396 */ 's', 'u', 'b', '.', 's', '6', '4', 32, 9, 0,
  /* 3406 */ 'a', 'd', 'd', '.', 's', '6', '4', 32, 9, 0,
  /* 3416 */ 'n', 'e', 'g', '.', 's', '6', '4', 32, 9, 0,
  /* 3426 */ 'm', 'u', 'l', '.', 'h', 'i', '.', 's', '6', '4', 32, 9, 0,
  /* 3439 */ 'r', 'e', 'm', '.', 's', '6', '4', 32, 9, 0,
  /* 3449 */ 'm', 'i', 'n', '.', 's', '6', '4', 32, 9, 0,
  /* 3459 */ 'm', 'a', 'd', '.', 'l', 'o', '.', 's', '6', '4', 32, 9, 0,
  /* 3472 */ 'm', 'u', 'l', '.', 'l', 'o', '.', 's', '6', '4', 32, 9, 0,
  /* 3485 */ 's', 'h', 'r', '.', 's', '6', '4', 32, 9, 0,
  /* 3495 */ 'a', 'b', 's', '.', 's', '6', '4', 32, 9, 0,
  /* 3505 */ 'd', 'i', 'v', '.', 's', '6', '4', 32, 9, 0,
  /* 3515 */ 'm', 'a', 'x', '.', 's', '6', '4', 32, 9, 0,
  /* 3525 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'u', '6', '4', 32, 9, 0,
  /* 3544 */ 'a', 't', 'o', 'm', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'a', 'd', 'd', '.', 'u', '6', '4', 32, 9, 0,
  /* 3566 */ 'a', 't', 'o', 'm', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'a', 'd', 'd', '.', 'u', '6', '4', 32, 9, 0,
  /* 3588 */ 'a', 't', 'o', 'm', '.', 'a', 'd', 'd', '.', 'u', '6', '4', 32, 9, 0,
  /* 3603 */ 'c', 'v', 't', 'a', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'u', '6', '4', 32, 9, 0,
  /* 3621 */ 'c', 'v', 't', 'a', '.', 't', 'o', '.', 's', 'h', 'a', 'r', 'e', 'd', '.', 'u', '6', '4', 32, 9, 0,
  /* 3642 */ 'm', 'u', 'l', '.', 'h', 'i', '.', 'u', '6', '4', 32, 9, 0,
  /* 3655 */ 'c', 'v', 't', 'a', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'u', '6', '4', 32, 9, 0,
  /* 3673 */ 'c', 'v', 't', 'a', '.', 't', 'o', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'u', '6', '4', 32, 9, 0,
  /* 3694 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'u', '6', '4', 32, 9, 0,
  /* 3711 */ 'c', 'v', 't', 'a', '.', 'l', 'o', 'c', 'a', 'l', '.', 'u', '6', '4', 32, 9, 0,
  /* 3728 */ 'c', 'v', 't', 'a', '.', 't', 'o', '.', 'l', 'o', 'c', 'a', 'l', '.', 'u', '6', '4', 32, 9, 0,
  /* 3748 */ 'r', 'e', 'm', '.', 'u', '6', '4', 32, 9, 0,
  /* 3758 */ 'm', 'i', 'n', '.', 'u', '6', '4', 32, 9, 0,
  /* 3768 */ 's', 'h', 'r', '.', 'u', '6', '4', 32, 9, 0,
  /* 3778 */ 'c', 'v', 't', 'a', '.', 'c', 'o', 'n', 's', 't', '.', 'u', '6', '4', 32, 9, 0,
  /* 3795 */ 'c', 'v', 't', 'a', '.', 't', 'o', '.', 'c', 'o', 'n', 's', 't', '.', 'u', '6', '4', 32, 9, 0,
  /* 3815 */ 'd', 'i', 'v', '.', 'u', '6', '4', 32, 9, 0,
  /* 3825 */ 'm', 'o', 'v', '.', 'u', '6', '4', 32, 9, 0,
  /* 3835 */ 'm', 'a', 'x', '.', 'u', '6', '4', 32, 9, 0,
  /* 3845 */ 's', 'h', 'l', '.', 'b', '1', '6', 32, 9, 0,
  /* 3855 */ 'n', 'o', 't', '.', 'b', '1', '6', 32, 9, 0,
  /* 3865 */ 'm', 'o', 'v', '.', 'b', '1', '6', 32, 9, 0,
  /* 3875 */ 'c', 'v', 't', '.', 's', '3', '2', '.', 's', '1', '6', 32, 9, 0,
  /* 3889 */ 'c', 'v', 't', '.', 's', '6', '4', '.', 's', '1', '6', 32, 9, 0,
  /* 3903 */ 's', 'u', 'b', '.', 's', '1', '6', 32, 9, 0,
  /* 3913 */ 'a', 'd', 'd', '.', 's', '1', '6', 32, 9, 0,
  /* 3923 */ 'm', 'u', 'l', '.', 'w', 'i', 'd', 'e', '.', 's', '1', '6', 32, 9, 0,
  /* 3938 */ 'n', 'e', 'g', '.', 's', '1', '6', 32, 9, 0,
  /* 3948 */ 'm', 'u', 'l', '.', 'h', 'i', '.', 's', '1', '6', 32, 9, 0,
  /* 3961 */ 'r', 'e', 'm', '.', 's', '1', '6', 32, 9, 0,
  /* 3971 */ 'm', 'a', 'd', '.', 'l', 'o', '.', 's', '1', '6', 32, 9, 0,
  /* 3984 */ 'm', 'u', 'l', '.', 'l', 'o', '.', 's', '1', '6', 32, 9, 0,
  /* 3997 */ 's', 'h', 'r', '.', 's', '1', '6', 32, 9, 0,
  /* 4007 */ 'd', 'i', 'v', '.', 's', '1', '6', 32, 9, 0,
  /* 4017 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'u', '1', '6', 32, 9, 0,
  /* 4036 */ 'm', 'u', 'l', '.', 'w', 'i', 'd', 'e', '.', 'u', '1', '6', 32, 9, 0,
  /* 4051 */ 'm', 'u', 'l', '.', 'h', 'i', '.', 'u', '1', '6', 32, 9, 0,
  /* 4064 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'u', '1', '6', 32, 9, 0,
  /* 4081 */ 'r', 'e', 'm', '.', 'u', '1', '6', 32, 9, 0,
  /* 4091 */ 's', 'h', 'r', '.', 'u', '1', '6', 32, 9, 0,
  /* 4101 */ 'd', 'i', 'v', '.', 'u', '1', '6', 32, 9, 0,
  /* 4111 */ 'm', 'o', 'v', '.', 'u', '1', '6', 32, 9, 0,
  /* 4121 */ 'c', 'v', 't', '.', 's', '3', '2', '.', 's', '8', 32, 9, 0,
  /* 4134 */ 'c', 'v', 't', '.', 's', '6', '4', '.', 's', '8', 32, 9, 0,
  /* 4147 */ 'c', 'v', 't', '.', 's', '1', '6', '.', 's', '8', 32, 9, 0,
  /* 4160 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'u', '8', 32, 9, 0,
  /* 4178 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'u', '8', 32, 9, 0,
  /* 4194 */ 'x', 'o', 'r', '.', 'p', 'r', 'e', 'd', 32, 9, 0,
  /* 4205 */ 'n', 'o', 't', '.', 'p', 'r', 'e', 'd', 32, 9, 0,
  /* 4216 */ 'm', 'o', 'v', '.', 'p', 'r', 'e', 'd', 32, 9, 0,
  /* 4227 */ 'b', 'r', 'a', '.', 'u', 'n', 'i', 32, 9, 0,
  /* 4237 */ 'c', 'a', 'l', 'l', 32, 9, 0,
  /* 4244 */ 'p', 'o', 'p', 'c', '.', 'b', '3', '2', 9, 0,
  /* 4254 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '3', '2', 9, 0,
  /* 4268 */ 's', 'e', 'l', 'p', '.', 'b', '3', '2', 9, 0,
  /* 4278 */ 'm', 'o', 'v', '.', 'b', '3', '2', 9, 0,
  /* 4287 */ 'c', 'l', 'z', '.', 'b', '3', '2', 9, 0,
  /* 4296 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'f', '3', '2', 9, 0,
  /* 4310 */ 's', 'e', 'l', 'p', '.', 'f', '3', '2', 9, 0,
  /* 4320 */ 'm', 'o', 'v', '.', 'f', '3', '2', 9, 0,
  /* 4329 */ 's', 'e', 'l', 'p', '.', 's', '3', '2', 9, 0,
  /* 4339 */ 'c', 'v', 't', '.', 'u', '1', '6', '.', 'u', '3', '2', 9, 0,
  /* 4352 */ 's', 'e', 'l', 'p', '.', 'u', '3', '2', 9, 0,
  /* 4362 */ 'm', 'o', 'v', '.', 'u', '3', '2', 9, 0,
  /* 4371 */ 'p', 'o', 'p', 'c', '.', 'b', '6', '4', 9, 0,
  /* 4381 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '6', '4', 9, 0,
  /* 4395 */ 's', 'e', 'l', 'p', '.', 'b', '6', '4', 9, 0,
  /* 4405 */ 'm', 'o', 'v', '.', 'b', '6', '4', 9, 0,
  /* 4414 */ 'c', 'l', 'z', '.', 'b', '6', '4', 9, 0,
  /* 4423 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'f', '6', '4', 9, 0,
  /* 4437 */ 's', 'e', 'l', 'p', '.', 'f', '6', '4', 9, 0,
  /* 4447 */ 'm', 'o', 'v', '.', 'f', '6', '4', 9, 0,
  /* 4456 */ 's', 'e', 'l', 'p', '.', 's', '6', '4', 9, 0,
  /* 4466 */ 's', 'e', 'l', 'p', '.', 'u', '6', '4', 9, 0,
  /* 4476 */ 'm', 'o', 'v', '.', 'u', '6', '4', 9, 0,
  /* 4485 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '1', '6', 9, 0,
  /* 4499 */ 's', 'e', 'l', 'p', '.', 'b', '1', '6', 9, 0,
  /* 4509 */ 's', 'e', 'l', 'p', '.', 's', '1', '6', 9, 0,
  /* 4519 */ 's', 'e', 'l', 'p', '.', 'u', '1', '6', 9, 0,
  /* 4529 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '8', 9, 0,
  /* 4542 */ 'b', 'a', 'r', '.', 's', 'y', 'n', 'c', 9, 0,
  /* 4552 */ 'm', 'o', 'v', '.', 'b', '3', '2', 32, 9, 32, 0,
  /* 4563 */ 'm', 'o', 'v', '.', 'b', '6', '4', 32, 9, 32, 0,
  /* 4574 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ')', ',', 32, 0,
  /* 4595 */ 'c', 'a', 'l', 'l', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ')', ',', 32, 0,
  /* 4612 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ')', ',', 32, 0,
  /* 4642 */ 'c', 'a', 'l', 'l', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ')', ',', 32, 0,
  /* 4668 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ')', ',', 32, 0,
  /* 4707 */ 'c', 'a', 'l', 'l', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ')', ',', 32, 0,
  /* 4742 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ')', ',', 32, 0,
  /* 4790 */ 'c', 'a', 'l', 'l', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ')', ',', 32, 0,
  /* 4834 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '4', ')', ',', 32, 0,
  /* 4891 */ 'c', 'a', 'l', 'l', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '4', ')', ',', 32, 0,
  /* 4944 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '4', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '5', ')', ',', 32, 0,
  /* 5010 */ 'c', 'a', 'l', 'l', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '4', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '5', ')', ',', 32, 0,
  /* 5072 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '4', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '5', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '6', ')', ',', 32, 0,
  /* 5147 */ 'c', 'a', 'l', 'l', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '4', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '5', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '6', ')', ',', 32, 0,
  /* 5218 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '4', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '5', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '6', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '7', ')', ',', 32, 0,
  /* 5302 */ 'c', 'a', 'l', 'l', 32, '(', 'r', 'e', 't', 'v', 'a', 'l', '0', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '1', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '2', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '3', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '4', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '5', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '6', ',', 32, 'r', 'e', 't', 'v', 'a', 'l', '7', ')', ',', 32, 0,
  /* 5382 */ '{', 32, 10, 9, '.', 'r', 'e', 'g', 32, '.', 'p', 'r', 'e', 'd', 32, 9, '%', 'p', '1', ';', 32, 10, 9, 's', 'e', 't', 'p', '.', 'n', 'e', '.', 'u', '3', '2', 32, 9, '%', 'p', '1', ',', 32, 0,
  /* 5424 */ '{', 32, 10, 9, '.', 'r', 'e', 'g', 32, '.', 'p', 'r', 'e', 'd', 32, 9, '%', 'p', '1', ';', 32, 10, 9, '.', 'r', 'e', 'g', 32, '.', 'p', 'r', 'e', 'd', 32, 9, '%', 'p', '2', ';', 32, 10, 9, 's', 'e', 't', 'p', '.', 'n', 'e', '.', 'u', '3', '2', 32, 9, '%', 'p', '1', ',', 32, 0,
  /* 5485 */ '{', 32, 10, 9, '.', 'r', 'e', 'g', 32, 9, '.', 's', '3', '2', 32, 't', 'e', 'm', 'p', ';', 32, 10, 9, 'n', 'e', 'g', '.', 's', '3', '2', 32, 9, 't', 'e', 'm', 'p', ',', 32, 0,
  /* 5524 */ '{', 32, 10, 9, '.', 'r', 'e', 'g', 32, 9, '.', 's', '6', '4', 32, 't', 'e', 'm', 'p', ';', 32, 10, 9, 'n', 'e', 'g', '.', 's', '6', '4', 32, 9, 't', 'e', 'm', 'p', ',', 32, 0,
  /* 5563 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '1', '6', 32, '%', 't', 'e', 'm', 'p', ';', 10, 9, 'c', 'v', 't', '.', 'r', 'n', '.', 'f', '1', '6', '.', 'f', '3', '2', 32, 9, '%', 't', 'e', 'm', 'p', ',', 32, 0,
  /* 5608 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '1', '6', 32, '%', 't', 'e', 'm', 'p', ';', 10, 9, 'c', 'v', 't', '.', 'r', 'n', '.', 'f', 't', 'z', '.', 'f', '1', '6', '.', 'f', '3', '2', 32, 9, '%', 't', 'e', 'm', 'p', ',', 32, 0,
  /* 5657 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '1', '6', 32, '%', 't', 'e', 'm', 'p', ';', 10, 9, 'm', 'o', 'v', '.', 'b', '1', '6', 32, 9, '%', 't', 'e', 'm', 'p', ',', 32, 0,
  /* 5695 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 't', 'e', 'm', 'p', ';', 32, 10, 9, 'm', 'o', 'v', '.', 'b', '6', '4', 32, 9, '{', '%', 't', 'e', 'm', 'p', ',', 32, 0,
  /* 5735 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 'l', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 'r', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 'a', 'm', 't', '2', ';', 10, 9, 's', 'h', 'l', '.', 'b', '3', '2', 32, 9, '%', 'l', 'h', 's', ',', 32, 0,
  /* 5806 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 'l', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 'r', 'h', 's', ';', 10, 9, 's', 'h', 'l', '.', 'b', '3', '2', 32, 9, '%', 'l', 'h', 's', ',', 32, 0,
  /* 5859 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 'l', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 'r', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 'a', 'm', 't', '2', ';', 10, 9, 's', 'h', 'r', '.', 'b', '3', '2', 32, 9, '%', 'l', 'h', 's', ',', 32, 0,
  /* 5930 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '6', '4', 32, '%', 'l', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '6', '4', 32, '%', 'r', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'u', '3', '2', 32, '%', 'a', 'm', 't', '2', ';', 10, 9, 's', 'h', 'l', '.', 'b', '6', '4', 32, 9, '%', 'l', 'h', 's', ',', 32, 0,
  /* 6001 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '6', '4', 32, '%', 'l', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '6', '4', 32, '%', 'r', 'h', 's', ';', 10, 9, 's', 'h', 'l', '.', 'b', '6', '4', 32, 9, '%', 'l', 'h', 's', ',', 32, 0,
  /* 6054 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '6', '4', 32, '%', 'l', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '6', '4', 32, '%', 'r', 'h', 's', ';', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'u', '3', '2', 32, '%', 'a', 'm', 't', '2', ';', 10, 9, 's', 'h', 'r', '.', 'b', '6', '4', 32, 9, '%', 'l', 'h', 's', ',', 32, 0,
  /* 6125 */ 10, 9, '/', '/', '{', 10, 9, '}', '/', '/', 32, 'C', 'a', 'l', 'l', 's', 'e', 'q', 32, 'E', 'n', 'd', 32, 0,
  /* 6149 */ '/', '/', 32, 'P', 's', 'e', 'u', 'd', 'o', 32, 'u', 's', 'e', 32, 'o', 'f', 32, 0,
  /* 6167 */ 'c', 'a', 'l', 'l', '.', 'u', 'n', 'i', 32, 0,
  /* 6177 */ 'c', 'a', 'l', 'l', 32, 0,
  /* 6183 */ '.', 'p', 'a', 'r', 'a', 'm', 32, '.', 'a', 'l', 'i', 'g', 'n', 32, 0,
  /* 6198 */ '/', '/', 32, 'C', 'a', 'l', 'l', 's', 'e', 'q', 32, 'S', 't', 'a', 'r', 't', 32, 0,
  /* 6216 */ '@', '!', 0,
  /* 6219 */ '(', 0,
  /* 6221 */ '/', '/', 32, 'l', 'l', 'v', 'm', '.', 'n', 'v', 'v', 'm', '.', 'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '.', 'w', 'a', 'r', 'n', '(', ')', 0,
  /* 6250 */ '/', '/', 32, 'l', 'l', 'v', 'm', '.', 'n', 'v', 'v', 'm', '.', 'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '.', 'e', 'r', 'r', 'o', 'r', '(', ')', 0,
  /* 6280 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '3', '2', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6311 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'b', '3', '2', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6342 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '3', '2', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6370 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'f', '3', '2', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6401 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'f', '3', '2', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6432 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'f', '3', '2', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6460 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '6', '4', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6491 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '6', '4', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6519 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'f', '6', '4', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6550 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'f', '6', '4', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6578 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '1', '6', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6609 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'b', '1', '6', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6640 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '1', '6', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6668 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '8', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6698 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'b', '8', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6728 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '8', 9, '[', 'f', 'u', 'n', 'c', '_', 'r', 'e', 't', 'v', 'a', 'l', '0', '+', 0,
  /* 6755 */ ')', ';', 0,
  /* 6758 */ 'b', 'a', 'r', '.', 's', 'y', 'n', 'c', 32, 9, '0', ';', 0,
  /* 6771 */ 'm', 'e', 'm', 'b', 'a', 'r', '.', 'c', 't', 'a', ';', 0,
  /* 6783 */ 'm', 'e', 'm', 'b', 'a', 'r', '.', 'g', 'l', ';', 0,
  /* 6794 */ 't', 'r', 'a', 'p', ';', 0,
  /* 6800 */ 'm', 'e', 'm', 'b', 'a', 'r', '.', 's', 'y', 's', ';', 0,
  /* 6812 */ 'r', 'e', 't', ';', 0,
  /* 6817 */ '@', 0,
  /* 6819 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 6832 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 6839 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 6849 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 6864 */ ',', 32, 'p', 'r', 'o', 't', 'o', 't', 'y', 'p', 'e', '_', 0,
  /* 6877 */ '.', 'r', 'e', 'g', 32, '.', 'b', 0,
  /* 6885 */ '.', 'p', 'a', 'r', 'a', 'm', 32, '.', 'b', 0,
  /* 6895 */ 'l', 'd', 0,
  /* 6898 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '3', '2', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 6921 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '3', '2', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 6941 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'f', '3', '2', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 6964 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'f', '3', '2', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 6987 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'f', '3', '2', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7007 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '6', '4', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7030 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '6', '4', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7050 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'f', '6', '4', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7073 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'f', '6', '4', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7093 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '1', '6', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7116 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'b', '1', '6', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7139 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '1', '6', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7159 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '8', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7181 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'b', '8', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7203 */ 's', 't', '.', 'p', 'a', 'r', 'a', 'm', '.', 'b', '8', 9, '[', 'p', 'a', 'r', 'a', 'm', 0,
  /* 7222 */ 's', 'e', 't', 'p', 0,
  /* 7227 */ 's', 'e', 't', 0,
  /* 7231 */ 's', 't', 0,
  /* 7234 */ 'c', 'v', 't', 0,
  /* 7238 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '2', '.', 'f', '3', '2', 32, 9, '{', 0,
  /* 7261 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '2', '.', 'f', '3', '2', 32, 9, '{', 0,
  /* 7282 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '4', '.', 'f', '3', '2', 32, 9, '{', 0,
  /* 7305 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '4', '.', 'f', '3', '2', 32, 9, '{', 0,
  /* 7326 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '2', '.', 'u', '3', '2', 32, 9, '{', 0,
  /* 7349 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '2', '.', 'u', '3', '2', 32, 9, '{', 0,
  /* 7370 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '4', '.', 'u', '3', '2', 32, 9, '{', 0,
  /* 7393 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '4', '.', 'u', '3', '2', 32, 9, '{', 0,
  /* 7414 */ '{', 10, 9, '.', 'r', 'e', 'g', 32, '.', 'b', '3', '2', 32, '%', 't', 'e', 'm', 'p', ';', 32, 10, 9, 'm', 'o', 'v', '.', 'b', '6', '4', 32, 9, '{', 0,
  /* 7447 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '2', '.', 'f', '6', '4', 32, 9, '{', 0,
  /* 7470 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '2', '.', 'f', '6', '4', 32, 9, '{', 0,
  /* 7491 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '2', '.', 'u', '6', '4', 32, 9, '{', 0,
  /* 7514 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '2', '.', 'u', '6', '4', 32, 9, '{', 0,
  /* 7535 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '2', '.', 'u', '1', '6', 32, 9, '{', 0,
  /* 7558 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '2', '.', 'u', '1', '6', 32, 9, '{', 0,
  /* 7579 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '4', '.', 'u', '1', '6', 32, 9, '{', 0,
  /* 7602 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '4', '.', 'u', '1', '6', 32, 9, '{', 0,
  /* 7623 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '2', '.', 'u', '8', 32, 9, '{', 0,
  /* 7645 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '2', '.', 'u', '8', 32, 9, '{', 0,
  /* 7665 */ 'l', 'd', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'n', 'c', '.', 'v', '4', '.', 'u', '8', 32, 9, '{', 0,
  /* 7687 */ 'l', 'd', 'u', '.', 'g', 'l', 'o', 'b', 'a', 'l', '.', 'v', '4', '.', 'u', '8', 32, 9, '{', 0,
  /* 7707 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '3', '2', 9, '{', 0,
  /* 7725 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'b', '3', '2', 9, '{', 0,
  /* 7743 */ 'm', 'o', 'v', '.', 'b', '3', '2', 9, '{', 0,
  /* 7753 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'f', '3', '2', 9, '{', 0,
  /* 7771 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'f', '3', '2', 9, '{', 0,
  /* 7789 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '6', '4', 9, '{', 0,
  /* 7807 */ 'm', 'o', 'v', '.', 'b', '6', '4', 9, '{', 0,
  /* 7817 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'f', '6', '4', 9, '{', 0,
  /* 7835 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '1', '6', 9, '{', 0,
  /* 7853 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'b', '1', '6', 9, '{', 0,
  /* 7871 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '2', '.', 'b', '8', 9, '{', 0,
  /* 7888 */ 'l', 'd', '.', 'p', 'a', 'r', 'a', 'm', '.', 'v', '4', '.', 'b', '8', 9, '{', 0,
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits1 = OpInfo[MI->getOpcode()];
  uint64_t Bits2 = OpInfo2[MI->getOpcode()];
  uint64_t Bits = (Bits2 << 32) | Bits1;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 13) & 15) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, CallArgBeginInst, Cal...
    return;
    break;
  case 1:
    // ADDCCCi32ri, ADDCCCi32rr, ADDCCi32ri, ADDCCi32rr, ADD_i1_ri, ADD_i1_rr...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // CALL_PROTOTYPE
    printProtoIdent(MI, 0, O); 
    return;
    break;
  case 3:
    // CVT_f16_f16, CVT_f16_f32, CVT_f16_f64, CVT_f16_s16, CVT_f16_s32, CVT_f...
    printCvtMode(MI, 2, O, "base"); 
    printCvtMode(MI, 2, O, "ftz"); 
    printCvtMode(MI, 2, O, "sat"); 
    break;
  case 4:
    // DeclareScalarParamInst, DeclareScalarRegInst, INT_BARRIER0_AND, INT_BA...
    printOperand(MI, 1, O); 
    break;
  case 5:
    // INT_PTX_ATOM_SUB_GEN_32_USE_Gp32reg, INT_PTX_ATOM_SUB_GEN_32_USE_Gp64r...
    printOperand(MI, 2, O); 
    break;
  case 6:
    // LDV_f32_v2_areg, LDV_f32_v2_areg_64, LDV_f32_v2_ari, LDV_f32_v2_ari_64...
    printLdStCode(MI, 2, O, "volatile"); 
    printLdStCode(MI, 3, O, "addsp"); 
    printLdStCode(MI, 4, O, "vec"); 
    O << '.'; 
    printLdStCode(MI, 5, O, "sign"); 
    printOperand(MI, 6, O); 
    break;
  case 7:
    // LDV_f32_v4_areg, LDV_f32_v4_areg_64, LDV_f32_v4_ari, LDV_f32_v4_ari_64...
    printLdStCode(MI, 4, O, "volatile"); 
    printLdStCode(MI, 5, O, "addsp"); 
    printLdStCode(MI, 6, O, "vec"); 
    O << '.'; 
    printLdStCode(MI, 7, O, "sign"); 
    printOperand(MI, 8, O); 
    break;
  case 8:
    // LD_f32_areg, LD_f32_areg_64, LD_f32_ari, LD_f32_ari_64, LD_f32_asi, LD...
    printLdStCode(MI, 1, O, "volatile"); 
    printLdStCode(MI, 2, O, "addsp"); 
    printLdStCode(MI, 3, O, "vec"); 
    O << '.'; 
    printLdStCode(MI, 4, O, "sign"); 
    printOperand(MI, 5, O); 
    break;
  case 9:
    // SETP_b16ir, SETP_b16ri, SETP_b16rr, SETP_b32ir, SETP_b32ri, SETP_b32rr...
    printCmpMode(MI, 3, O, "base"); 
    printCmpMode(MI, 3, O, "ftz"); 
    break;
  case 10:
    // SET_b16ir, SET_b16ri, SET_b16rr, SET_b32ir, SET_b32ri, SET_b32rr, SET_...
    printCmpMode(MI, 3, O); 
    break;
  case 11:
    // StoreParamV4F32, StoreParamV4I16, StoreParamV4I32, StoreParamV4I8, Sto...
    printOperand(MI, 4, O); 
    break;
  }


  // Fragment 1 encoded into 8 bits for 159 unique commands.
  switch ((Bits >> 17) & 255) {
  default:   // unreachable.
  case 0:
    // ADDCCCi32ri, ADDCCCi32rr, ADDCCi32ri, ADDCCi32rr, ADD_i1_ri, ADD_i1_rr...
    O << ", "; 
    break;
  case 1:
    // CALL
    O << ", (1);"; 
    return;
    break;
  case 2:
    // CBranch, CBranchOther
    O << " bra \t"; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 3:
    // CVT_f16_f16
    O << ".f16.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 4:
    // CVT_f16_f32
    O << ".f16.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 5:
    // CVT_f16_f64
    O << ".f16.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 6:
    // CVT_f16_s16
    O << ".f16.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 7:
    // CVT_f16_s32
    O << ".f16.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 8:
    // CVT_f16_s64
    O << ".f16.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 9:
    // CVT_f16_u16
    O << ".f16.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 10:
    // CVT_f16_u32
    O << ".f16.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 11:
    // CVT_f16_u64
    O << ".f16.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 12:
    // CVT_f32_f16
    O << ".f32.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 13:
    // CVT_f32_f32
    O << ".f32.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 14:
    // CVT_f32_f64
    O << ".f32.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 15:
    // CVT_f32_s16
    O << ".f32.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 16:
    // CVT_f32_s32
    O << ".f32.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 17:
    // CVT_f32_s64
    O << ".f32.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 18:
    // CVT_f32_u16
    O << ".f32.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 19:
    // CVT_f32_u32
    O << ".f32.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 20:
    // CVT_f32_u64
    O << ".f32.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 21:
    // CVT_f64_f16
    O << ".f64.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 22:
    // CVT_f64_f32
    O << ".f64.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 23:
    // CVT_f64_f64
    O << ".f64.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 24:
    // CVT_f64_s16
    O << ".f64.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 25:
    // CVT_f64_s32
    O << ".f64.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 26:
    // CVT_f64_s64
    O << ".f64.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 27:
    // CVT_f64_u16
    O << ".f64.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 28:
    // CVT_f64_u32
    O << ".f64.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 29:
    // CVT_f64_u64
    O << ".f64.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 30:
    // CVT_s16_f16
    O << ".s16.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 31:
    // CVT_s16_f32
    O << ".s16.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 32:
    // CVT_s16_f64
    O << ".s16.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 33:
    // CVT_s16_s16
    O << ".s16.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 34:
    // CVT_s16_s32
    O << ".s16.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 35:
    // CVT_s16_s64
    O << ".s16.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 36:
    // CVT_s16_u16
    O << ".s16.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 37:
    // CVT_s16_u32
    O << ".s16.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 38:
    // CVT_s16_u64
    O << ".s16.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 39:
    // CVT_s32_f16
    O << ".s32.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 40:
    // CVT_s32_f32
    O << ".s32.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 41:
    // CVT_s32_f64
    O << ".s32.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 42:
    // CVT_s32_s16
    O << ".s32.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 43:
    // CVT_s32_s32
    O << ".s32.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 44:
    // CVT_s32_s64
    O << ".s32.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 45:
    // CVT_s32_u16
    O << ".s32.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 46:
    // CVT_s32_u32
    O << ".s32.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 47:
    // CVT_s32_u64
    O << ".s32.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 48:
    // CVT_s64_f16
    O << ".s64.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 49:
    // CVT_s64_f32
    O << ".s64.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 50:
    // CVT_s64_f64
    O << ".s64.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 51:
    // CVT_s64_s16
    O << ".s64.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 52:
    // CVT_s64_s32
    O << ".s64.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 53:
    // CVT_s64_s64
    O << ".s64.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 54:
    // CVT_s64_u16
    O << ".s64.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 55:
    // CVT_s64_u32
    O << ".s64.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 56:
    // CVT_s64_u64
    O << ".s64.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 57:
    // CVT_u16_f16
    O << ".u16.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 58:
    // CVT_u16_f32
    O << ".u16.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 59:
    // CVT_u16_f64
    O << ".u16.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 60:
    // CVT_u16_s16
    O << ".u16.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 61:
    // CVT_u16_s32
    O << ".u16.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 62:
    // CVT_u16_s64
    O << ".u16.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 63:
    // CVT_u16_u16
    O << ".u16.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 64:
    // CVT_u16_u32
    O << ".u16.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 65:
    // CVT_u16_u64
    O << ".u16.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 66:
    // CVT_u32_f16
    O << ".u32.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 67:
    // CVT_u32_f32
    O << ".u32.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 68:
    // CVT_u32_f64
    O << ".u32.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 69:
    // CVT_u32_s16
    O << ".u32.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 70:
    // CVT_u32_s32
    O << ".u32.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 71:
    // CVT_u32_s64
    O << ".u32.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 72:
    // CVT_u32_u16
    O << ".u32.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 73:
    // CVT_u32_u32
    O << ".u32.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 74:
    // CVT_u32_u64
    O << ".u32.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 75:
    // CVT_u64_f16
    O << ".u64.f16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 76:
    // CVT_u64_f32
    O << ".u64.f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 77:
    // CVT_u64_f64
    O << ".u64.f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 78:
    // CVT_u64_s16
    O << ".u64.s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 79:
    // CVT_u64_s32
    O << ".u64.s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 80:
    // CVT_u64_s64
    O << ".u64.s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 81:
    // CVT_u64_u16
    O << ".u64.u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 82:
    // CVT_u64_u32
    O << ".u64.u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 83:
    // CVT_u64_u64
    O << ".u64.u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 84:
    // Callseq_End, LastCallArgF32, LastCallArgF64, LastCallArgI16, LastCallA...
    return;
    break;
  case 85:
    // Callseq_Start
    O << "\n\t{\n\t.reg .b32 temp_param_reg;\n\t// <end>}"; 
    return;
    break;
  case 86:
    // DeclareParamInst
    O << " .b8 param"; 
    printOperand(MI, 1, O); 
    O << '['; 
    printOperand(MI, 2, O); 
    O << "];"; 
    return;
    break;
  case 87:
    // DeclareRetMemInst
    O << " .b8 retval"; 
    printOperand(MI, 2, O); 
    O << '['; 
    printOperand(MI, 1, O); 
    O << "];"; 
    return;
    break;
  case 88:
    // DeclareRetRegInst, DeclareRetScalarInst
    O << " retval"; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 89:
    // DeclareScalarParamInst, DeclareScalarRegInst
    O << " param"; 
    printOperand(MI, 0, O); 
    O << ';'; 
    return;
    break;
  case 90:
    // GOTO, PTX_BAR_SYNC, PrototypeInst
    O << ';'; 
    return;
    break;
  case 91:
    // INT_BARRIER0_AND
    O << ", 0; \n\tbar.red.and.pred \t%p2, 0, %p1; \n\tselp.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", 1, 0, %p2; \n\t}"; 
    return;
    break;
  case 92:
    // INT_BARRIER0_OR
    O << ", 0; \n\tbar.red.or.pred \t%p2, 0, %p1; \n\tselp.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", 1, 0, %p2; \n\t}"; 
    return;
    break;
  case 93:
    // INT_BARRIER0_POPC
    O << ", 0; \n\tbar.red.popc.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", 0, %p1; \n\t}"; 
    return;
    break;
  case 94:
    // INT_NVVM_D2I_HI
    O << "}, "; 
    printOperand(MI, 1, O); 
    O << ";\n\t}"; 
    return;
    break;
  case 95:
    // INT_NVVM_D2I_LO
    O << ", %temp}, "; 
    printOperand(MI, 1, O); 
    O << ";\n\t}"; 
    return;
    break;
  case 96:
    // INT_NVVM_F2H_RN, INT_NVVM_F2H_RN_FTZ
    O << ";\n\tmov.b16 \t"; 
    printOperand(MI, 0, O); 
    O << ", %temp;\n}"; 
    return;
    break;
  case 97:
    // INT_NVVM_H2F
    O << ";\n\tcvt.f32.f16 \t"; 
    printOperand(MI, 0, O); 
    O << ", %temp;\n\t}"; 
    return;
    break;
  case 98:
    // INT_NVVM_LOHI_I2D, V2F32toF64, V2I16toI32, V2I32toI64, V4I16toI64
    O << ", {"; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    break;
  case 99:
    // INT_PTX_ATOM_ADD_GEN_32_USE_Gp32imm, INT_PTX_ATOM_ADD_GEN_32_USE_Gp32r...
    O << ", ["; 
    break;
  case 100:
    // INT_PTX_ATOM_SUB_GEN_32_USE_Gp32reg, INT_PTX_ATOM_SUB_GEN_32_USE_Gp64r...
    O << "; \n\tatom.global.add.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", ["; 
    printOperand(MI, 1, O); 
    O << "], temp; \n\t}"; 
    return;
    break;
  case 101:
    // INT_PTX_ATOM_SUB_GEN_32p32reg, INT_PTX_ATOM_SUB_GEN_32p64reg
    O << "; \n\tatom.add.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", ["; 
    printOperand(MI, 1, O); 
    O << "], temp; \n\t}"; 
    return;
    break;
  case 102:
    // INT_PTX_ATOM_SUB_GEN_64_USE_Gp32reg, INT_PTX_ATOM_SUB_GEN_64_USE_Gp64r...
    O << "; \n\tatom.global.add.u64 \t"; 
    printOperand(MI, 0, O); 
    O << ", ["; 
    printOperand(MI, 1, O); 
    O << "], temp; \n\t}"; 
    return;
    break;
  case 103:
    // INT_PTX_ATOM_SUB_GEN_64p32reg, INT_PTX_ATOM_SUB_GEN_64p64reg
    O << "; \n\tatom.add.u64 \t"; 
    printOperand(MI, 0, O); 
    O << ", ["; 
    printOperand(MI, 1, O); 
    O << "], temp; \n\t}"; 
    return;
    break;
  case 104:
    // INT_PTX_ATOM_SUB_S_32p32reg, INT_PTX_ATOM_SUB_S_32p64reg
    O << "; \n\tatom.shared.add.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", ["; 
    printOperand(MI, 1, O); 
    O << "], temp; \n\t}"; 
    return;
    break;
  case 105:
    // INT_PTX_ATOM_SUB_S_64p32reg, INT_PTX_ATOM_SUB_S_64p64reg
    O << "; \n\tatom.shared.add.u64 \t"; 
    printOperand(MI, 0, O); 
    O << ", ["; 
    printOperand(MI, 1, O); 
    O << "], temp; \n\t}"; 
    return;
    break;
  case 106:
    // INT_PTX_SREG_CTAID_X, PTX_READ_CTAID_X
    O << ", %ctaid.x;"; 
    return;
    break;
  case 107:
    // INT_PTX_SREG_CTAID_Y, PTX_READ_CTAID_Y
    O << ", %ctaid.y;"; 
    return;
    break;
  case 108:
    // INT_PTX_SREG_CTAID_Z, PTX_READ_CTAID_Z
    O << ", %ctaid.z;"; 
    return;
    break;
  case 109:
    // INT_PTX_SREG_NCTAID_X, PTX_READ_NCTAID_X
    O << ", %nctaid.x;"; 
    return;
    break;
  case 110:
    // INT_PTX_SREG_NCTAID_Y, PTX_READ_NCTAID_Y
    O << ", %nctaid.y;"; 
    return;
    break;
  case 111:
    // INT_PTX_SREG_NCTAID_Z, PTX_READ_NCTAID_Z
    O << ", %nctaid.z;"; 
    return;
    break;
  case 112:
    // INT_PTX_SREG_NTID_X, PTX_READ_NTID_X
    O << ", %ntid.x;"; 
    return;
    break;
  case 113:
    // INT_PTX_SREG_NTID_Y, PTX_READ_NTID_Y
    O << ", %ntid.y;"; 
    return;
    break;
  case 114:
    // INT_PTX_SREG_NTID_Z, PTX_READ_NTID_Z
    O << ", %ntid.z;"; 
    return;
    break;
  case 115:
    // INT_PTX_SREG_TID_X, PTX_READ_TID_X
    O << ", %tid.x;"; 
    return;
    break;
  case 116:
    // INT_PTX_SREG_TID_Y, PTX_READ_TID_Y
    O << ", %tid.y;"; 
    return;
    break;
  case 117:
    // INT_PTX_SREG_TID_Z, PTX_READ_TID_Z
    O << ", %tid.z;"; 
    return;
    break;
  case 118:
    // INT_PTX_SREG_WARPSIZE
    O << ", WARP_SZ;"; 
    return;
    break;
  case 119:
    // LDV_f32_v2_areg, LDV_f32_v2_areg_64, LDV_f32_v2_ari, LDV_f32_v2_ari_64...
    O << " \t{"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 120:
    // LD_f32_areg, LD_f32_areg_64, LD_f32_ari, LD_f32_ari_64, LD_f32_asi, LD...
    O << " \t"; 
    printOperand(MI, 0, O); 
    O << ", ["; 
    printOperand(MI, 6, O); 
    break;
  case 121:
    // LoadParamMemF32, LoadParamMemF64, LoadParamMemI16, LoadParamMemI32, Lo...
    O << ", [retval0+"; 
    printOperand(MI, 1, O); 
    O << "];"; 
    return;
    break;
  case 122:
    // MOV_DEPOT_ADDR, MOV_DEPOT_ADDR_64
    O << ", __local_depot"; 
    printOperand(MI, 1, O); 
    O << ';'; 
    return;
    break;
  case 123:
    // PTX_READ_CLOCK
    O << ", %clock;"; 
    return;
    break;
  case 124:
    // PTX_READ_CLOCK64
    O << ", %clock64;"; 
    return;
    break;
  case 125:
    // PTX_READ_CTAID_W
    O << ", %ctaid.w;"; 
    return;
    break;
  case 126:
    // PTX_READ_GRIDID
    O << ", %gridid;"; 
    return;
    break;
  case 127:
    // PTX_READ_LANEID
    O << ", %laneid;"; 
    return;
    break;
  case 128:
    // PTX_READ_LANEMASK_EQ
    O << ", %lanemask_eq;"; 
    return;
    break;
  case 129:
    // PTX_READ_LANEMASK_GE
    O << ", %lanemask_ge;"; 
    return;
    break;
  case 130:
    // PTX_READ_LANEMASK_GT
    O << ", %lanemask_gt;"; 
    return;
    break;
  case 131:
    // PTX_READ_LANEMASK_LE
    O << ", %lanemask_le;"; 
    return;
    break;
  case 132:
    // PTX_READ_LANEMASK_LT
    O << ", %lanemask_lt;"; 
    return;
    break;
  case 133:
    // PTX_READ_NCTAID_W
    O << ", %nctaid.w;"; 
    return;
    break;
  case 134:
    // PTX_READ_NSMID
    O << ", %nsmid;"; 
    return;
    break;
  case 135:
    // PTX_READ_NTID_W
    O << ", %ntid.w;"; 
    return;
    break;
  case 136:
    // PTX_READ_NWARPID
    O << ", %nwarpid;"; 
    return;
    break;
  case 137:
    // PTX_READ_PM0
    O << ", %pm0;"; 
    return;
    break;
  case 138:
    // PTX_READ_PM1
    O << ", %pm1;"; 
    return;
    break;
  case 139:
    // PTX_READ_PM2
    O << ", %pm2;"; 
    return;
    break;
  case 140:
    // PTX_READ_PM3
    O << ", %pm3;"; 
    return;
    break;
  case 141:
    // PTX_READ_SMID
    O << ", %smid;"; 
    return;
    break;
  case 142:
    // PTX_READ_TID_W
    O << ", %tid.w;"; 
    return;
    break;
  case 143:
    // PTX_READ_WARPID
    O << ", %warpid;"; 
    return;
    break;
  case 144:
    // SETP_b16ir, SETP_b16ri, SETP_b16rr, SET_b16ir, SET_b16ri, SET_b16rr
    O << ".b16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 145:
    // SETP_b32ir, SETP_b32ri, SETP_b32rr, SET_b32ir, SET_b32ri, SET_b32rr
    O << ".b32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 146:
    // SETP_b64ir, SETP_b64ri, SETP_b64rr, SET_b64ir, SET_b64ri, SET_b64rr
    O << ".b64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 147:
    // SETP_f32ir, SETP_f32ri, SETP_f32rr, SET_f32ir, SET_f32ri, SET_f32rr
    O << ".f32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 148:
    // SETP_f64ir, SETP_f64ri, SETP_f64rr, SET_f64ir, SET_f64ri, SET_f64rr
    O << ".f64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 149:
    // SETP_s16ir, SETP_s16ri, SETP_s16rr, SET_s16ir, SET_s16ri, SET_s16rr
    O << ".s16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 150:
    // SETP_s32ir, SETP_s32ri, SETP_s32rr, SET_s32ir, SET_s32ri, SET_s32rr
    O << ".s32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 151:
    // SETP_s64ir, SETP_s64ri, SETP_s64rr, SET_s64ir, SET_s64ri, SET_s64rr
    O << ".s64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 152:
    // SETP_u16ir, SETP_u16ri, SETP_u16rr, SET_u16ir, SET_u16ri, SET_u16rr
    O << ".u16\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 153:
    // SETP_u32ir, SETP_u32ri, SETP_u32rr, SET_u32ir, SET_u32ri, SET_u32rr
    O << ".u32\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 154:
    // SETP_u64ir, SETP_u64ri, SETP_u64rr, SET_u64ir, SET_u64ri, SET_u64rr
    O << ".u64\t"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 155:
    // STV_f32_v2_areg, STV_f32_v2_areg_64, STV_f32_v2_ari, STV_f32_v2_ari_64...
    O << " \t["; 
    break;
  case 156:
    // StoreParamF32, StoreParamF64, StoreParamI16, StoreParamI32, StoreParam...
    O << '+'; 
    break;
  case 157:
    // StoreRetvalF32, StoreRetvalF64, StoreRetvalI16, StoreRetvalI32, StoreR...
    O << "], "; 
    printOperand(MI, 0, O); 
    O << ';'; 
    return;
    break;
  case 158:
    // StoreRetvalV2F32, StoreRetvalV2F64, StoreRetvalV2I16, StoreRetvalV2I32...
    O << "], {"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  }


  // Fragment 2 encoded into 4 bits for 15 unique commands.
  switch ((Bits >> 25) & 15) {
  default:   // unreachable.
  case 0:
    // ADDCCCi32ri, ADDCCCi32rr, ADDCCi32ri, ADDCCi32rr, ADD_i1_ri, ADD_i1_rr...
    printOperand(MI, 1, O); 
    break;
  case 1:
    // CallArgF32, CallArgF64, CallArgI16, CallArgI32, CallArgI32imm, CallArg...
    return;
    break;
  case 2:
    // FDIV321r, FDIV321r_approx, FDIV321r_approx_ftz, FDIV321r_ftz, FDIV321r...
    printOperand(MI, 2, O); 
    break;
  case 3:
    // INT_NVVM_LOHI_I2D, StoreRetvalV2F32, StoreRetvalV2F64, StoreRetvalV2I1...
    O << "};"; 
    return;
    break;
  case 4:
    // INT_PTX_LDG_GLOBAL_f32ari, INT_PTX_LDG_GLOBAL_f32ari64, INT_PTX_LDG_GL...
    printMemOperand(MI, 1, O); 
    O << "];"; 
    return;
    break;
  case 5:
    // LDV_f32_v2_areg, LDV_f32_v2_areg_64, LDV_f32_v2_ari, LDV_f32_v2_ari_64...
    O << "}, ["; 
    printOperand(MI, 7, O); 
    break;
  case 6:
    // LDV_f32_v4_areg, LDV_f32_v4_areg_64, LDV_f32_v4_ari, LDV_f32_v4_ari_64...
    O << ", "; 
    break;
  case 7:
    // LD_f32_areg, LD_f32_areg_64, LD_f32_avar, LD_f64_areg, LD_f64_areg_64,...
    O << "];"; 
    return;
    break;
  case 8:
    // LD_f32_ari, LD_f32_ari_64, LD_f32_asi, LD_f64_ari, LD_f64_ari_64, LD_f...
    O << '+'; 
    printOperand(MI, 7, O); 
    O << "];"; 
    return;
    break;
  case 9:
    // LEA_ADDRi, LEA_ADDRi64
    printMemOperand(MI, 1, O, "add"); 
    O << ';'; 
    return;
    break;
  case 10:
    // STV_f32_v2_areg, STV_f32_v2_areg_64, STV_f32_v2_ari, STV_f32_v2_ari_64...
    printOperand(MI, 7, O); 
    break;
  case 11:
    // STV_f32_v4_areg, STV_f32_v4_areg_64, STV_f32_v4_ari, STV_f32_v4_ari_64...
    printOperand(MI, 9, O); 
    break;
  case 12:
    // ST_f32_areg, ST_f32_areg_64, ST_f32_ari, ST_f32_ari_64, ST_f32_asi, ST...
    printOperand(MI, 6, O); 
    break;
  case 13:
    // StoreParamV2F32, StoreParamV2F64, StoreParamV2I16, StoreParamV2I32, St...
    printOperand(MI, 3, O); 
    O << "], {"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << "};"; 
    return;
    break;
  case 14:
    // StoreParamV4F32, StoreParamV4I16, StoreParamV4I32, StoreParamV4I8
    printOperand(MI, 5, O); 
    O << "], {"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << "};"; 
    return;
    break;
  }


  // Fragment 3 encoded into 4 bits for 15 unique commands.
  switch ((Bits >> 29) & 15) {
  default:   // unreachable.
  case 0:
    // ADDCCCi32ri, ADDCCCi32rr, ADDCCi32ri, ADDCCi32rr, ADD_i1_ri, ADD_i1_rr...
    O << ", "; 
    printOperand(MI, 2, O); 
    break;
  case 1:
    // BITCONVERT_32_F2I, BITCONVERT_32_I2F, BITCONVERT_64_F2I, BITCONVERT_64...
    O << ';'; 
    return;
    break;
  case 2:
    // F64toV2F32, I32toV2I16, I64toV2I32
    O << "}, "; 
    printOperand(MI, 2, O); 
    O << ';'; 
    return;
    break;
  case 3:
    // INT_PTX_ATOM_ADD_GEN_32_USE_Gp32imm, INT_PTX_ATOM_ADD_GEN_32_USE_Gp32r...
    O << "], "; 
    break;
  case 4:
    // INT_PTX_LDG_GLOBAL_f32areg, INT_PTX_LDG_GLOBAL_f32areg64, INT_PTX_LDG_...
    O << "];"; 
    return;
    break;
  case 5:
    // INT_PTX_LDG_G_v2f32_ELE_areg32, INT_PTX_LDG_G_v2f32_ELE_areg64, INT_PT...
    O << "}, ["; 
    break;
  case 6:
    // LDV_f32_v2_ari, LDV_f32_v2_ari_64, LDV_f32_v2_asi, LDV_f64_v2_ari, LDV...
    O << '+'; 
    break;
  case 7:
    // LDV_f32_v4_areg, LDV_f32_v4_areg_64, LDV_f32_v4_ari, LDV_f32_v4_ari_64...
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    break;
  case 8:
    // LoadParamMemV2F32, LoadParamMemV2F64, LoadParamMemV2I16, LoadParamMemV...
    O << "}, [retval0+"; 
    printOperand(MI, 2, O); 
    O << "];"; 
    return;
    break;
  case 9:
    // ROT32imm_sw
    O << ";\n\tshr.b32 \t%rhs, "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << ";\n\tadd.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", %lhs, %rhs;\n\t}"; 
    return;
    break;
  case 10:
    // ROT64imm_sw
    O << ";\n\tshr.b64 \t%rhs, "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << ";\n\tadd.u64 \t"; 
    printOperand(MI, 0, O); 
    O << ", %lhs, %rhs;\n\t}"; 
    return;
    break;
  case 11:
    // ROTL32reg_sw, ROTR32reg_sw
    O << ";\n\tsub.s32 \t%amt2, 32, "; 
    printOperand(MI, 2, O); 
    break;
  case 12:
    // ROTL64reg_sw, ROTR64reg_sw
    O << ";\n\tsub.u32 \t%amt2, 64, "; 
    printOperand(MI, 2, O); 
    break;
  case 13:
    // STV_f32_v2_areg, STV_f32_v2_areg_64, STV_f32_v2_avar, STV_f32_v4_areg,...
    O << "], {"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    break;
  case 14:
    // V4I16toI64
    printOperand(MI, 3, O); 
    O << ", "; 
    printOperand(MI, 4, O); 
    O << "};"; 
    return;
    break;
  }


  // Fragment 4 encoded into 4 bits for 14 unique commands.
  switch ((Bits >> 33) & 15) {
  default:   // unreachable.
  case 0:
    // ADDCCCi32ri, ADDCCCi32rr, ADDCCi32ri, ADDCCi32rr, ADD_i1_ri, ADD_i1_rr...
    O << ';'; 
    return;
    break;
  case 1:
    // FMA32_ftzrii, FMA32_ftzrir, FMA32_ftzrri, FMA32_ftzrrr, FMA32_ftzrrr2,...
    O << ", "; 
    break;
  case 2:
    // INT_PTX_ATOM_ADD_GEN_32_USE_Gp32imm, INT_PTX_ATOM_ADD_GEN_32_USE_Gp32r...
    printOperand(MI, 2, O); 
    break;
  case 3:
    // INT_PTX_LDG_G_v2f32_ELE_ari32, INT_PTX_LDG_G_v2f32_ELE_ari64, INT_PTX_...
    printMemOperand(MI, 2, O); 
    O << "];"; 
    return;
    break;
  case 4:
    // LDV_f32_v2_ari, LDV_f32_v2_ari_64, LDV_f32_v2_asi, LDV_f64_v2_ari, LDV...
    printOperand(MI, 8, O); 
    break;
  case 5:
    // LDV_f32_v4_areg, LDV_f32_v4_areg_64, LDV_f32_v4_ari, LDV_f32_v4_ari_64...
    O << "}, ["; 
    printOperand(MI, 9, O); 
    break;
  case 6:
    // ROTL32reg_sw
    O << ";\n\tshr.b32 \t%rhs, "; 
    printOperand(MI, 1, O); 
    O << ", %amt2;\n\tadd.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", %lhs, %rhs;\n\t}"; 
    return;
    break;
  case 7:
    // ROTL64reg_sw
    O << ";\n\tshr.b64 \t%rhs, "; 
    printOperand(MI, 1, O); 
    O << ", %amt2;\n\tadd.u64 \t"; 
    printOperand(MI, 0, O); 
    O << ", %lhs, %rhs;\n\t}"; 
    return;
    break;
  case 8:
    // ROTR32reg_sw
    O << ";\n\tshl.b32 \t%rhs, "; 
    printOperand(MI, 1, O); 
    O << ", %amt2;\n\tadd.u32 \t"; 
    printOperand(MI, 0, O); 
    O << ", %lhs, %rhs;\n\t}"; 
    return;
    break;
  case 9:
    // ROTR64reg_sw
    O << ";\n\tshl.b64 \t%rhs, "; 
    printOperand(MI, 1, O); 
    O << ", %amt2;\n\tadd.u64 \t"; 
    printOperand(MI, 0, O); 
    O << ", %lhs, %rhs;\n\t}"; 
    return;
    break;
  case 10:
    // STV_f32_v2_areg, STV_f32_v2_areg_64, STV_f32_v2_avar, STV_f64_v2_areg,...
    O << "};"; 
    return;
    break;
  case 11:
    // STV_f32_v4_ari, STV_f32_v4_ari_64, STV_f32_v4_asi, STV_f64_v4_ari, STV...
    printOperand(MI, 10, O); 
    O << "], {"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << ", "; 
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << "};"; 
    return;
    break;
  case 12:
    // ST_f32_areg, ST_f32_areg_64, ST_f32_avar, ST_f64_areg, ST_f64_areg_64,...
    printOperand(MI, 0, O); 
    O << ';'; 
    return;
    break;
  case 13:
    // ST_f32_ari, ST_f32_ari_64, ST_f32_asi, ST_f64_ari, ST_f64_ari_64, ST_f...
    printOperand(MI, 7, O); 
    O << "], "; 
    printOperand(MI, 0, O); 
    O << ';'; 
    return;
    break;
  }


  // Fragment 5 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 37) & 7) {
  default:   // unreachable.
  case 0:
    // FMA32_ftzrii, FMA32_ftzrir, FMA32_ftzrri, FMA32_ftzrrr, FMA32_ftzrrr2,...
    printOperand(MI, 3, O); 
    break;
  case 1:
    // INT_PTX_ATOM_ADD_GEN_32_USE_Gp32imm, INT_PTX_ATOM_ADD_GEN_32_USE_Gp32r...
    O << ';'; 
    return;
    break;
  case 2:
    // INT_PTX_ATOM_CAS_GEN_32_USE_Gp32imm1, INT_PTX_ATOM_CAS_GEN_32_USE_Gp32...
    O << ", "; 
    printOperand(MI, 3, O); 
    O << ';'; 
    return;
    break;
  case 3:
    // INT_PTX_LDG_G_v2f32_ELE_areg32, INT_PTX_LDG_G_v2f32_ELE_areg64, INT_PT...
    O << "];"; 
    return;
    break;
  case 4:
    // LDV_f32_v4_ari, LDV_f32_v4_ari_64, LDV_f32_v4_asi, LDV_f64_v4_ari, LDV...
    O << '+'; 
    printOperand(MI, 10, O); 
    O << "];"; 
    return;
    break;
  case 5:
    // STV_f32_v2_ari, STV_f32_v2_ari_64, STV_f32_v2_asi, STV_f64_v2_ari, STV...
    O << "], {"; 
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    O << "};"; 
    return;
    break;
  case 6:
    // STV_f32_v4_areg, STV_f32_v4_areg_64, STV_f32_v4_avar, STV_f64_v4_areg,...
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << "};"; 
    return;
    break;
  }


  // Fragment 6 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 40) & 3) {
  default:   // unreachable.
  case 0:
    // FMA32_ftzrii, FMA32_ftzrir, FMA32_ftzrri, FMA32_ftzrrr, FMA32_ftzrrr2,...
    O << ';'; 
    return;
    break;
  case 1:
    // I64toV4I16
    O << "}, "; 
    printOperand(MI, 4, O); 
    O << ';'; 
    return;
    break;
  case 2:
    // INT_PTX_LDG_G_v4f32_ELE_areg32, INT_PTX_LDG_G_v4f32_ELE_areg64, INT_PT...
    O << "}, ["; 
    break;
  case 3:
    // LoadParamMemV4F32, LoadParamMemV4I16, LoadParamMemV4I32, LoadParamMemV...
    O << "}, [retval0+"; 
    printOperand(MI, 4, O); 
    O << "];"; 
    return;
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 42) & 1) {
    // INT_PTX_LDG_G_v4f32_ELE_ari32, INT_PTX_LDG_G_v4f32_ELE_ari64, INT_PTX_...
    printMemOperand(MI, 4, O); 
    O << "];"; 
    return;
  } else {
    // INT_PTX_LDG_G_v4f32_ELE_areg32, INT_PTX_LDG_G_v4f32_ELE_areg64, INT_PT...
    printOperand(MI, 4, O); 
    O << "];"; 
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *NVPTXInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 54 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ '%', 'd', 'a', '0', 0,
  /* 5 */ '%', 'f', 'a', '0', 0,
  /* 10 */ '%', 'i', 'a', '0', 0,
  /* 15 */ '%', 'l', 'a', '0', 0,
  /* 20 */ '%', 'f', '0', 0,
  /* 24 */ '%', 'f', 'l', '0', 0,
  /* 29 */ '%', 'r', 'l', '0', 0,
  /* 34 */ '%', 'p', '0', 0,
  /* 38 */ '%', 'r', '0', 0,
  /* 42 */ '%', 'r', 's', '0', 0,
  /* 47 */ '%', 'd', 'a', '1', 0,
  /* 52 */ '%', 'f', 'a', '1', 0,
  /* 57 */ '%', 'i', 'a', '1', 0,
  /* 62 */ '%', 'l', 'a', '1', 0,
  /* 67 */ '%', 'f', '1', 0,
  /* 71 */ '%', 'f', 'l', '1', 0,
  /* 76 */ '%', 'r', 'l', '1', 0,
  /* 81 */ '%', 'p', '1', 0,
  /* 85 */ '%', 'r', '1', 0,
  /* 89 */ '%', 'r', 's', '1', 0,
  /* 94 */ '%', 'd', 'a', '2', 0,
  /* 99 */ '%', 'f', 'a', '2', 0,
  /* 104 */ '%', 'i', 'a', '2', 0,
  /* 109 */ '%', 'l', 'a', '2', 0,
  /* 114 */ '%', 'f', '2', 0,
  /* 118 */ '%', 'f', 'l', '2', 0,
  /* 123 */ '%', 'r', 'l', '2', 0,
  /* 128 */ '%', 'p', '2', 0,
  /* 132 */ '%', 'r', '2', 0,
  /* 136 */ '%', 'r', 's', '2', 0,
  /* 141 */ '%', 'd', 'a', '3', 0,
  /* 146 */ '%', 'f', 'a', '3', 0,
  /* 151 */ '%', 'i', 'a', '3', 0,
  /* 156 */ '%', 'l', 'a', '3', 0,
  /* 161 */ '%', 'f', '3', 0,
  /* 165 */ '%', 'f', 'l', '3', 0,
  /* 170 */ '%', 'r', 'l', '3', 0,
  /* 175 */ '%', 'p', '3', 0,
  /* 179 */ '%', 'r', '3', 0,
  /* 183 */ '%', 'r', 's', '3', 0,
  /* 188 */ '%', 'd', 'a', '4', 0,
  /* 193 */ '%', 'f', 'a', '4', 0,
  /* 198 */ '%', 'i', 'a', '4', 0,
  /* 203 */ '%', 'l', 'a', '4', 0,
  /* 208 */ '%', 'f', '4', 0,
  /* 212 */ '%', 'f', 'l', '4', 0,
  /* 217 */ '%', 'r', 'l', '4', 0,
  /* 222 */ '%', 'p', '4', 0,
  /* 226 */ '%', 'r', '4', 0,
  /* 230 */ '%', 'r', 's', '4', 0,
  /* 235 */ '%', 'S', 'P', 'L', 0,
  /* 240 */ '%', 'S', 'P', 0,
  /* 244 */ '%', 'D', 'e', 'p', 'o', 't', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    244, 240, 235, 20, 67, 114, 161, 208, 24, 71, 118, 165, 212, 34, 
    81, 128, 175, 222, 38, 85, 132, 179, 226, 29, 76, 123, 170, 217, 
    42, 89, 136, 183, 230, 0, 47, 94, 141, 188, 5, 52, 99, 146, 
    193, 10, 57, 104, 151, 198, 15, 62, 109, 156, 203, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool NVPTXInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  return false;
}

#endif // PRINT_ALIAS_INSTR
